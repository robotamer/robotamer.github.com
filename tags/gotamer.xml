<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Gotamer on RoboTamer </title>
    <link>http://www.robotamer.com/tags/gotamer.xml</link>
    <language>en-us</language>
    <author>Dennis T Kaplan</author>
    <rights>Copyright (c) 2008 - 2013, Dennis T Kaplan; all rights reserved.</rights>
    <updated>2008-01-01 00:00:00 &#43;0000 UTC</updated>
    
    <item>
      <title>Smtp</title>
      <link>http://www.robotamer.com/code/go/gotamer/mail.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/mail.html</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;    package main
    
    import &amp;quot;gotamer/mail&amp;quot; // bitbucket.org/gotamer/mail if you install with go get
    
    func main() {

        // use defer when you send with mail.Send(), not needed for mail.Write()
        defer mail.final() 

        s := new(Smtp)
        s.SetHostname(&amp;quot;smtp.gmail.com&amp;quot;)
        s.SetHostport(587)
        s.SetFromName(&amp;quot;GoTamer&amp;quot;)
        s.SetFromAddr(&amp;quot;xxxx@gmail.com&amp;quot;)
        s.SetPassword(&amp;quot;********&amp;quot;)
        s.AddToAddr(&amp;quot;xxxx@yahoo.com&amp;quot;)
        s.SetSubject(&amp;quot;GoTamer test mail&amp;quot;)
        s.SetBody(&amp;quot;Let&#39;s see if we get this&amp;quot;)
        if err := s.Write(); err != nil {
            // Handle your errors here
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As an alternative to &lt;code&gt;AddToAddr()&lt;/code&gt; there is &lt;code&gt;SetToAddrs()&lt;/code&gt;. With &lt;code&gt;SetToAddrs()&lt;/code&gt; you can set one or more recipients as a comma separated list.&lt;/p&gt;

&lt;h4&gt;A note on the host.&lt;/h4&gt;

&lt;p&gt;Go SMTP does not allow to connect to SMPT servers with a self signed certs.&lt;/p&gt;

&lt;p&gt;You will get an error like following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x509: certificate signed by unknown authority
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The way I got around that is by using &lt;a href=&#34;http://www.cacert.org&#34; title=&#34;CA Cert&#34;&gt;CAcert&lt;/a&gt;. &lt;a href=&#34;http://www.cacert.org&#34; title=&#34;CA Cert&#34;&gt;CAcert&lt;/a&gt; provides FREE digital certificates.&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/mail&#34; title=&#34;GoTamer Mail Pkg Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/mail&#34; title=&#34;GoTamer Mail Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ping</title>
      <link>http://www.robotamer.com/code/go/gotamer/ping.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/ping.html</guid>
      <description>&lt;p&gt;There are two ways to ping
 * go internal ping
 * sys ping&lt;/p&gt;

&lt;p&gt;The go internal ping works only as root, therefor a sys ping is also provided until I can figure out how to fix this problem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.robotamer.com&#34; title=&#34;Documentation&#34;&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code is available at &lt;a href=&#34;https://bitbucket.org/gotamer&#34;&gt;https://bitbucket.org/gotamer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Encode/Decode between struct and byte slice</title>
      <link>http://www.robotamer.com/code/go/gotamer/sbs.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/sbs.html</guid>
      <description>&lt;p&gt;&lt;em&gt;sbs&lt;/em&gt; stands for Struct to Byte Slice and back to Struct&lt;/p&gt;

&lt;h2&gt;Internals:&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;sbs&lt;/em&gt; encodes your struct first to a Gob, then it convers it to a byte slice; it reverses the process for decoding.&lt;/p&gt;

&lt;h4&gt;Example&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;
    type Foo struct {
        A int
        B string
    }

    p := &amp;amp;Foo{111,&amp;quot;A string&amp;quot;}

    byteslice, err := sbs.Enc(p)
    ...

    foo := new(Foo)
    structobject, err := sbs.Dec(foo, byteslice)
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Code is available at &lt;a href=&#34;https://bitbucket.org/gotamer/sbs&#34;&gt;https://bitbucket.org/gotamer/sbs&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Session</title>
      <link>http://www.robotamer.com/code/go/gotamer/session.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/session.html</guid>
      <description>&lt;p&gt;Feutures:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom backends to store session data locally.&lt;/li&gt;
&lt;li&gt;Flash messages: session values that last until read.&lt;/li&gt;
&lt;li&gt;Low dependency and therefore versitile, for example, it does not depened on the go http pkg&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Built-in backends to store sessions locally:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;storeMap ⬄ A in memory map[string]sessions store&lt;/li&gt;
&lt;li&gt;storeLeveldb ⬄ Stores session data in a leveldb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Simple Sample code the uses the default storeMap backend:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;package main

import(
    &amp;quot;bitbucket.org/gotamer/net/session&amp;quot;
    &amp;quot;fmt&amp;quot;
)

func main(){
    id := save()
    load(id)
}

func save() string {
    sess := session.New()
    sess.Set(&amp;quot;Alias&amp;quot;,&amp;quot;GoTamer&amp;quot;)
    err := sess.Save()
    Check(err)
    fmt.Println(&amp;quot;Session Saved&amp;quot;, sess)
    sid, err := sess.Id()
    Check(err)
    return sid
}

func load(sid string){
    sess, err := session.Load(sid)
    Check(err)
    fmt.Println(&amp;quot;Session Load: &amp;quot;, sess)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sample code the uses the leveldb backend:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;package main

import(
    &amp;quot;bitbucket.org/gotamer/net/session&amp;quot;
    &amp;quot;fmt&amp;quot;
)

var path = &amp;quot;/tmp/sessions&amp;quot;

func init(){
    session.StoreLeveldb(path)  
}

func main(){
    id := save()
    load(id)
}

func save() string {
    sess := session.New()
    sess.Set(&amp;quot;Alias&amp;quot;,&amp;quot;GoTamer&amp;quot;)
    err := sess.Save()
    Check(err)
    fmt.Println(&amp;quot;Session Saved&amp;quot;, sess)
    sid, err := sess.Id()
    Check(err)
    return sid
}

func load(sid string){
    sess, err := session.Load(sid)
    Check(err)
    fmt.Println(&amp;quot;Session Load: &amp;quot;, sess)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Additional backends can be created by simply implementing following interfaces:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;type Store interface {
    Save(session *sessionObject) (err error)
    Load(sid string) (session *sessionObject, err error)
    Delete(sid string) (err error)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some code has been borrowed from &lt;a href=&#34;http://www.stathat.com/src/bingo&#34;&gt;http://www.stathat.com/src/bingo&lt;/a&gt; witch is licensed also under MIT.&lt;/p&gt;

&lt;p&gt;Code is available at &lt;a href=&#34;https://bitbucket.org/gotamer&#34;&gt;https://bitbucket.org/gotamer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Your Everyday Go Tools</title>
      <link>http://www.robotamer.com/code/go/gotamer/tools.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/tools.html</guid>
      <description>&lt;p&gt;Generates a random number between min and max&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func IRand(min, max int) int
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generates a random strings between min and max&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func SRand(min, max int, readable bool) string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reverses the string&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func Reverse(s string) strings
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Shuffles the string&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func Shuffle(s string) string
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/tools&#34; title=&#34;Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/tools&#34; title=&#34;Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crypt</title>
      <link>http://www.robotamer.com/code/go/gotamer/crypt.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/crypt.html</guid>
      <description>&lt;p&gt;This will not pass Bank or Spy cryptographic requirements in todays world.&lt;br /&gt;
I do not make claims about its security, please see the license file for details.&lt;br /&gt;
&lt;em&gt;Advise: Please evaluate your needs and take additional measures to fit your needs. For example in my case I use multiple keys for each instance, and my application selects the keys randomly.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It is rune aware, it supports the full line of Go UTF-8 characters&lt;/p&gt;

&lt;p&gt;A list of UTF-8 characters can be found &lt;a href=&#34;http://www.robotamer.com/utf-8.html&#34; title=&#34;UTF-8 Character list&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/crypt&#34; title=&#34;GoTamer Pkg Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/crypt&#34; title=&#34;GoTamer Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GoWatch</title>
      <link>http://www.robotamer.com/code/go/gotamer/gowatch.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/gowatch.html</guid>
      <description>&lt;h1&gt;GoTamer gowatch is a fork of bitbucket.org/jzs/buildwatch with some enhancements.&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gowatch -test&lt;/code&gt; will run &lt;code&gt;go test&lt;/code&gt; on the folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gowatch -build&lt;/code&gt; will run &lt;code&gt;go build&lt;/code&gt; on the folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gowatch -run [program_name]&lt;/code&gt; will run &lt;code&gt;go build&lt;/code&gt; and then it will execute &lt;code&gt;[program_name]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a file changes while running lets say &lt;code&gt;gowatch -run [program_name]&lt;/code&gt; it will
kill &lt;code&gt;[program_name]&lt;/code&gt;, run &lt;code&gt;gowatch -build&lt;/code&gt; on the folder, and then restart &lt;code&gt;[program_name]&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.robotamer.com/code/go/gotamer&#34; title=&#34;GoTamer Website&#34;&gt;Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/gowatch&#34; title=&#34;Pkg Documentation&#34;&gt;Pkg Documentationn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/gowatch&#34; title=&#34;Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
