<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Php on RoboTamer </title>
    <link>http://www.robotamer.com/groups/php.xml</link>
    <language>en-us</language>
    <author>Dennis T Kaplan</author>
    <rights>Copyright (c) 2008 - 2013, Dennis T Kaplan; all rights reserved.</rights>
    <updated>2012-07-13 20:45:12 &#43;0000 UTC</updated>
    
    <item>
      <title>Read Folder</title>
      <link>http://www.robotamer.com/code/php/read-folder.html</link>
      <pubDate>Fri, 13 Jul 2012 20:45:12 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/read-folder.html</guid>
      <description>&lt;p&gt;This is a &lt;em&gt;Lambda&lt;/em&gt; function also called anonymous function within a regular function that scans a given directory and it&amp;rsquo;s sub directories returning an array of all php files within.&lt;/p&gt;

&lt;p&gt;Following is a snip output of the Zend files.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[6] =&amp;gt; /usr/share/php/Zend/Captcha/ReCaptcha.php
[7] =&amp;gt; /usr/share/php/Zend/Captcha/Base.php
[8] =&amp;gt; /usr/share/php/Zend/Feed/Rss.php
[9] =&amp;gt; /usr/share/php/Zend/Feed/Atom.php
[52] =&amp;gt; /usr/share/php/Zend/Feed/Writer/Source.php
[53] =&amp;gt; /usr/share/php/Zend/Feed/Pubsubhubbub.php
[54] =&amp;gt; /usr/share/php/Zend/Feed/Element.php
[55] =&amp;gt; /usr/share/php/Zend/Feed/Reader/Feed/Rss.php
[90] =&amp;gt; /usr/share/php/Zend/Feed/Builder.php
[91] =&amp;gt; /usr/share/php/Zend/Feed/Writer.php
[92] =&amp;gt; /usr/share/php/Zend/Config.php
[93] =&amp;gt; /usr/share/php/Zend/Json/Server.php
[94] =&amp;gt; /usr/share/php/Zend/Json/Exception.php
[95] =&amp;gt; /usr/share/php/Zend/Json/Encoder.php
[865] =&amp;gt; /usr/share/php/Zend/View/Stream.php
[866] =&amp;gt; /usr/share/php/Zend/View/Interface.php
[867] =&amp;gt; /usr/share/php/Zend/View/Abstract.php
[868] =&amp;gt; /usr/share/php/Zend/Search/Exception.php
[869] =&amp;gt; /usr/share/php/Zend/Search/Lucene.php
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php

/**
 *
 * @param string $dir
 * @return array 
 */
function get_php_files_in_dir($dir)
{
    $bin = array ();
    $run = function(&amp;amp;$run, $dir, &amp;amp;$bin) {
        if ($handle = opendir($dir)) {
            while (false !== ($file = readdir($handle))) {
                if ($file != &amp;quot;.&amp;quot; &amp;amp;&amp;amp; $file != &amp;quot;..&amp;quot;) {
                    if (strpos($file, &#39;.php&#39;) &amp;gt; 0) {
                        $bin[] = $dir . &#39;/&#39; . $file;
                    } elseif (is_dir($dir . &#39;/&#39; . $file)) {
                        $run($run, $dir . &#39;/&#39; . $file, $bin);
                    }
                }
            }
        }
        closedir($handle);
    };
    $run($run, $dir, $bin);
    return $bin;
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/robotamer/3107221#file-get_php_files_in_dir-php&#34;&gt;gist id=3107221&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Autoload</title>
      <link>http://www.robotamer.com/code/php/autoload.html</link>
      <pubDate>Sun, 01 Jul 2012 07:37:41 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/autoload.html</guid>
      <description>&lt;p&gt;I have been looking around for some good examples to use the new PHP autoloader interoperability standard according to the PHP Standards Recommendation #0 (PSR-0).&lt;/p&gt;

&lt;p&gt;And since I could find anything good, I had to figure it out by my self, here is the result.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/robotamer/3027247&#34;&gt;gist id=3027247&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HowTo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;    &amp;lt;?php
    # Adds your library to the beginning of the php include path
    addInclude(&#39;~/code/libs&#39;, FALSE);

    $loader = new SplClassLoader();

    # adds the php include path to the class
    $loader-&amp;gt;setIncludePathLookup(true);

    $loader-&amp;gt;add(&#39;Zend&#39;);
    $loader-&amp;gt;add(&#39;PEAR&#39;);

    # Give the path if it isn&#39;t in the php include path like this
    $loader-&amp;gt;add(&#39;Symfony&#39;, &#39;/path/to/symfony&#39;);

    $loader -&amp;gt; register();
    ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php
/**
 * SplClassLoader implementation that implements the technical interoperability
 * standards for PHP 5.3 namespaces and class names.
 *
 * https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md
 *
 * Example usage:
 *
 *     $classLoader = new \SplClassLoader();
 *
 *     // Configure the SplClassLoader to act normally or silently
 *     $classLoader-&amp;gt;setMode(\SplClassLoader::MODE_NORMAL);
 *
 *     // Add a namespace of classes
 *     $classLoader-&amp;gt;add(&#39;Doctrine&#39;, array(
 *         &#39;/path/to/doctrine-common&#39;, &#39;/path/to/doctrine-dbal&#39;, &#39;/path/to/doctrine-orm&#39;
 *     ));
 *
 *     // Add a prefix
 *     $classLoader-&amp;gt;add(&#39;Swift&#39;, &#39;/path/to/swift&#39;);
 *
 *     // Add a prefix through PEAR1 convention, requiring include_path lookup
 *     $classLoader-&amp;gt;add(&#39;PEAR&#39;);
 *
 *     // Allow to PHP use the include_path for file path lookup
 *     $classLoader-&amp;gt;setIncludePathLookup(true);
 *
 *     // Possibility to change the default php file extension
 *     $classLoader-&amp;gt;setFileExtension(&#39;.php&#39;);
 *
 *     // Register the autoloader, prepending it in the stack
 *     $classLoader-&amp;gt;register(true);
 *
 * @author Guilherme Blanco &amp;lt;guilhermeblanco@php.net&amp;gt;
 * @author Jonathan H. Wage &amp;lt;jonwage@gmail.com&amp;gt;
 * @author Roman S. Borschel &amp;lt;roman@code-factory.org&amp;gt;
 * @author Matthew Weier O&#39;Phinney &amp;lt;matthew@zend.com&amp;gt;
 * @author Kris Wallsmith &amp;lt;kris.wallsmith@gmail.com&amp;gt;
 * @author Fabien Potencier &amp;lt;fabien.potencier@symfony-project.org&amp;gt;
 */
 
include &#39;SplAutoloader.php&#39;;
class SplClassLoader implements SplAutoloader
{
    /**
     * @var string
     */
    private $fileExtension = &#39;.php&#39;;
 
    /**
     * @var boolean
     */
    private $includePathLookup = false;
 
    /**
     * @var array
     */
    private $resources = array();
 
    /**
     * @var integer
     */
    private $mode = self::MODE_NORMAL;
 
    /**
     * {@inheritdoc}
     */
    public function setMode($mode)
    {
        if ($mode &amp;amp; self::MODE_SILENT &amp;amp;&amp;amp; $mode &amp;amp; self::MODE_NORMAL) {
            throw new \InvalidArgumentException(
                sprintf(&#39;Cannot have %s working normally and silently at the same time!&#39;, __CLASS__)
            );
        }
 
        $this-&amp;gt;mode = $mode;
    }
 
    /**
     * Define the file extension of resource files in the path of this class loader.
     *
     * @param string $fileExtension
     */
    public function setFileExtension($fileExtension)
    {
        $this-&amp;gt;fileExtension = $fileExtension;
    }
 
    /**
     * Retrieve the file extension of resource files in the path of this class loader.
     *
     * @return string
     */
    public function getFileExtension()
    {
        return $this-&amp;gt;fileExtension;
    }
 
    /**
     * Turns on searching the include for class files. Allows easy loading installed PEAR packages.
     *
     * @param boolean $includePathLookup
     */
    public function setIncludePathLookup($includePathLookup)
    {
        $this-&amp;gt;includePathLookup = $includePathLookup;
    }
 
    /**
     * Gets the base include path for all class files in the namespace of this class loader.
     *
     * @return boolean
     */
    public function getIncludePathLookup()
    {
        return $this-&amp;gt;includePathLookup;
    }
 
    /**
     * {@inheritdoc}
     */
    public function register($prepend = false)
    {
        spl_autoload_register(array($this, &#39;load&#39;), true, $prepend);
    }
 
    /**
     * {@inheritdoc}
     */
    public function unregister()
    {
        spl_autoload_unregister(array($this, &#39;load&#39;));
    }
 
    /**
     * {@inheritdoc}
     */
    public function add($resource, $resourcePath = null)
    {
        $this-&amp;gt;resources[$resource] = (array) $resourcePath;
    }
 
    /**
     * {@inheritdoc}
     */
    public function load($resourceName)
    {
        $resourceAbsolutePath = $this-&amp;gt;getResourceAbsolutePath($resourceName);
 
        switch (true) {
            case ($this-&amp;gt;mode &amp;amp; self::MODE_SILENT):
                if ($resourceAbsolutePath !== false) {
                    require $resourceAbsolutePath;
                }
                break;
 
            case ($this-&amp;gt;mode &amp;amp; self::MODE_NORMAL):
            default:
                require $resourceAbsolutePath;
                break;
        }
 
        if ($this-&amp;gt;mode &amp;amp; self::MODE_DEBUG &amp;amp;&amp;amp; ! $this-&amp;gt;isResourceDeclared($resourceName)) {
            throw new \RuntimeException(
                sprintf(&#39;Autoloader expected resource &amp;quot;%s&amp;quot; to be declared in file &amp;quot;%s&amp;quot;.&#39;, $resourceName, $resourceAbsolutePath)
            );
        }
    }
 
    /**
     * Transform resource name into its absolute resource path representation.
     *
     * @params string $resourceName
     *
     * @return string Resource absolute path.
     */
    private function getResourceAbsolutePath($resourceName)
    {
        $resourceRelativePath = $this-&amp;gt;getResourceRelativePath($resourceName);
 
        foreach ($this-&amp;gt;resources as $resource =&amp;gt; $resourcesPath) {
            if (strpos($resourceName, $resource) !== 0) {
                continue;
            }
 
            foreach ($resourcesPath as $resourcePath) {
                $resourceAbsolutePath = $resourcePath . DIRECTORY_SEPARATOR . $resourceRelativePath;
 
                if (is_file($resourceAbsolutePath)) {
                    return $resourceAbsolutePath;
                }
            }
        }
 
        if ($this-&amp;gt;includePathLookup &amp;amp;&amp;amp; ($resourceAbsolutePath = stream_resolve_include_path($resourceRelativePath)) !== false) {
            return $resourceAbsolutePath;
        }
 
        return false;
    }
 
    /**
     * Transform resource name into its relative resource path representation.
     *
     * @params string $resourceName
     *
     * @return string Resource relative path.
     */
    private function getResourceRelativePath($resourceName)
    {
        // We always work with FQCN in this context
        $resourceName = ltrim($resourceName, &#39;\\&#39;);
        $resourcePath = &#39;&#39;;
 
        if (($lastNamespacePosition = strrpos($resourceName, &#39;\\&#39;)) !== false) {
            // Namespaced resource name
            $resourceNamespace = substr($resourceName, 0, $lastNamespacePosition);
            $resourceName      = substr($resourceName, $lastNamespacePosition + 1);
            $resourcePath      =  str_replace(&#39;\\&#39;, DIRECTORY_SEPARATOR, $resourceNamespace) . DIRECTORY_SEPARATOR;
        }
 
        return $resourcePath . str_replace(&#39;_&#39;, DIRECTORY_SEPARATOR, $resourceName) . $this-&amp;gt;fileExtension;
    }
 
    /**
     * Check if resource is declared in user space.
     *
     * @params string $resourceName
     *
     * @return boolean
     */
    private function isResourceDeclared($resourceName)
    {
        return class_exists($resourceName, false)
            || interface_exists($resourceName, false)
            || (function_exists(&#39;trait_exists&#39;) &amp;amp;&amp;amp; trait_exists($resourceName, false));
    }
}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;
&amp;lt;?php
/**
 * Adds a directory to the php include path
 */

/**
 * @category   RoboTamer
 * @package    Functions
 * @subpackage File
 * @author     Dennis T Kaplan
 * @copyright  Copyright (c) 2008 - 2012 Dennis T Kaplan
 * @license    http://www.opensource.org/licenses/MIT
 * @link       http://blog.robotamer.com
 *
 * @param string  $dir The directory to add to the path
 * @param boolean $at_end If true, place this directory at the end of the include path. Otherwise, place it at the beginning.
 */
function addInclude($dir, $at_end = TRUE)
{
    $exist = file_exists($dir);
    if ( ! $exist || ($exist &amp;amp;&amp;amp; filetype($dir) != &#39;dir&#39;))
    {
        trigger_error(&amp;quot;Include path &#39;{$dir}&#39; does not exist&amp;quot;, E_USER_WARNING);
        echo &#39;&amp;lt;pre&amp;gt;&#39;; print_r(debug_backtrace()); echo &#39;&amp;lt;/pre&amp;gt;&#39;;
        exit;
    }
    $dir   = rtrim($dir, &amp;quot;/&amp;quot;);
    $paths = ltrim(get_include_path(), &amp;quot;.&amp;quot;.PATH_SEPARATOR);
    $paths = explode(PATH_SEPARATOR, $paths);
    $ds    = &#39;.&#39;.PATH_SEPARATOR;
    if (strlen($paths[0]) &amp;amp;&amp;amp; array_search($dir, $paths) === false) {
        $at_end ? array_push($paths, $dir) : array_unshift($paths, $dir);
        $paths = implode(PATH_SEPARATOR, $paths);
        set_include_path($ds.$paths);
    } else {
        set_include_path($ds.$dir);
    }
}
/* #Test it
echo get_include_path();
echo &#39;&amp;lt;br /&amp;gt;&#39;;
addInclude(&#39;/var/www/library/&#39;);
echo get_include_path();
echo &#39;&amp;lt;br /&amp;gt;&#39;;
*/
?&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php

function autoload($className)
{
    $className = ltrim($className, &#39;\\&#39;);
    $fileName  = &#39;&#39;;
    $namespace = &#39;&#39;;
 
    if ($lastNsPos = strripos($className, &#39;\\&#39;)) {
        $namespace = substr($className, 0, $lastNsPos);
        $className = substr($className, $lastNsPos + 1);
        $fileName  = str_replace(&#39;\\&#39;, DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;
    }
 
    $fileName .= str_replace(&#39;_&#39;, DIRECTORY_SEPARATOR, $className) . &#39;.php&#39;;
 
    require $fileName;
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Messenger Laravel Framework</title>
      <link>http://www.robotamer.com/blog/2012-06-27-messenger-laravel-framework.html</link>
      <pubDate>Wed, 27 Jun 2012 23:27:29 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2012-06-27-messenger-laravel-framework.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://blog.robotamer.com/wp-content/uploads/2012/06/laravel.png&#34; alt=&#34;Laravel Framework&#34; /&gt;
 This is a fork and upgrade of the &lt;a href=&#34;http://forums.laravel.com/profile.php?id=583&#34;&gt;davzie&lt;/a&gt; message class.
A info, error etc messenger class that allows you to add validation errors, statuses etc to flash data and then retrieve them in a nicely formatted way in your front-end. Automates the process a little when you&amp;rsquo;re adding and retrieving messages, especially in a CRUD type environment. The formatting integrates well with Twitter&amp;rsquo;s Bootstrap Alert formatting.&lt;/p&gt;

&lt;p&gt;This upgraded version works smoothly with the Laravel validation class&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/robotamer/3007511#file-msg-php&#34;&gt;gist id=3007511&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php

class Msg {

     public static $msgss = array();

     /**
      * Add a message to the message array (adds to the user&#39;s session)
      * @param string  $type    You can have several types of messages, these are class names for Bootstrap&#39;s messaging classes, usually, info, error, success, warning
      * @param string $message  The message you want to add to the list
      */
     public static function add($type = &#39;info&#39;, $message = FALSE){
         if(!$message) return FALSE;
         if(is_array($message)){
             foreach($message as $msg){
                 static::$msgss[$type][] = $msg;
             }
         }else{
             static::$msgss[$type][] = $message;
         }
         Session::flash(&#39;messages&#39;, static::$msgss);
     }

     /**
      * Pull back those messages from the session
      * @return array
      */
     public static function get(){
         return (Session::has(&#39;messages&#39;)) ? Session::get(&#39;messages&#39;) : FALSE;
     }
    
     /**
      * Gets all the messages from the session and formats them accordingly for Twitter bootstrap.
      * @return string
      */
     public static function getHtml(){
         $output = FALSE;
         if (Session::has(&#39;messages&#39;)){
             $messages = Session::get(&#39;messages&#39;);
             foreach($messages as $type =&amp;gt; $msgs){
                 if(is_integer($type)) $type = &#39;error&#39;;
                 $output .= &#39;&amp;lt;div class=&amp;quot;alert alert-&#39;.$type.&#39;&amp;quot;&amp;gt;&amp;lt;a class=&amp;quot;close&amp;quot; data-dismiss=&amp;quot;alert&amp;quot;&amp;gt;×&amp;lt;/a&amp;gt;&#39;;
                 if(is_array($msgs)){
                 foreach($msgs as $msg) $output .= &#39;&amp;lt;p&amp;gt;&#39;.$msg.&#39;&amp;lt;/p&amp;gt;&#39;;
                 }else{
                      $output .= &#39;&amp;lt;p&amp;gt;&#39;.$msgs.&#39;&amp;lt;/p&amp;gt;&#39;;
                 }
                 $output .= &#39;&amp;lt;/div&amp;gt;&#39;;
             }
         }
         return $output;
     }
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Multiple PHP installations</title>
      <link>http://www.robotamer.com/code/php/2011-06-20-multiple-php-installations-so-you-can-run-5-3-x-on-one-box.html</link>
      <pubDate>Mon, 20 Jun 2011 11:58:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/2011-06-20-multiple-php-installations-so-you-can-run-5-3-x-on-one-box.html</guid>
      <description>&lt;p&gt;How to install &lt;strong&gt;PHP 5.3.X&lt;/strong&gt; as secondary php version from source&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PHPV=5.3.6
cd /usr/local/src
wget http://us.php.net/get/php-$PHPV.tar.gz/from/this/mirror
mv mirror php-$PHPV.tar.gz
tar xzvf php-$PHPV.tar.gz
chown -R $USER:$USER php-$PHPV/
cd php-$PHPV/

apt-get install libxml2-dev libssl-dev libcurl4-gnutls-dev libjpeg62-dev libpng12-dev libfreetype6-dev unixodbc-dev

./configure 
  --prefix=/usr/local/php5.3 
  --with-config-file-path=/usr/local/etc/php5.3 
  --with-config-file-scan-dir=/usr/local/etc/php5.3/$SAPIconf.d 
  --with-libdir=/lib 
  --disable-cgi 
  --with-libxml-dir=/usr/ 
  --with-mysql=/usr/ 
  --enable-pdo 
  --with-pdo-mysql 
  --with-mysqli 
  --with-zlib-dir=/usr 
  --with-curl 
  --with-gd 
  --with-jpeg-dir=/usr/lib 
  --with-png-dir=/usr/lib 
  --with-freetype-dir=/usr/lib 
  --with-gettext 
  --enable-mbstring 
  --enable-soap 
  --enable-ftp 
  --enable-fpm 
  --with-openssl

make
make test
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More help in case you have errors:
&lt;a href=&#34;http://www.robo47.net/text/6-PHP-Configure-und-Compile-Fehler&#34;&gt;PHP-Configure-und-Compile-Fehler&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>e() for echo</title>
      <link>http://www.robotamer.com/blog/2011-06-01-echo.html</link>
      <pubDate>Wed, 01 Jun 2011 02:01:27 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-01-echo.html</guid>
      <description>&lt;p&gt;It&amp;rsquo;s really annoying having to thing of html stuff like pre &amp;amp; br everytime you need to display something.&lt;/p&gt;

&lt;p&gt;And it&amp;rsquo;s even worst if you like me test your code in cli and cgi.&lt;/p&gt;

&lt;p&gt;So I wrote this little method to take care of it all. It&amp;rsquo;s nothing complicated but sure useful.&lt;/p&gt;

&lt;p&gt;It detects cgi and cli, and formats everything accordingly.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;    
&amp;lt;?php
/**
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/
**/

/**
 * e() --- Prints human-readable information about a variable
 *
 * string e ( mixed $expression[, string $name [, bool $return = false ]] )
 *
 * Replacement for php echo, print, print_r(), var_export() etc
 */

/**
 * @category    TaMeR
 * @copyright   Copyright (c) 2008 - 2011 Dennis T Kaplan
 * @license     http://www.gnu.org/licenses/gpl.txt
 * @link        http://github.com/pzzazz/TaMeR
 * @author      Dennis T Kaplan
 * @date        May 1, 2011
 * @version     1.0
 * @access      public
 * @param       mixed   $var
 * @param       string  $name
 * @param       boolean $return
 * @return      string
 **/
function e($var, $name = FALSE, $return = FALSE) {
    $preO = $preC = &#39;&#39;; $br = PHP_EOL;
    if( ! isset($_SERVER[&#39;argv&#39;])){
        $preO = &#39;

&#39;; $preC = &#39;&#39;;
        $h1O = &#39;&amp;lt;h1&amp;gt;&#39;;   $h1C = &#39;&amp;lt;/h1&amp;gt;&#39;;
        $br = &#39;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&#39;.PHP_EOL;
    }
    if(!is_array($var) &amp;amp;&amp;amp; !is_object($var))
    {
        if ($name !== FALSE) echo $br.$name.&#39;: &#39;;
        echo (isset($_SERVER[&#39;argv&#39;]))
                  ? $var.$br
                  : htmlspecialchars($var).$br;
    }else{
        if($return === FALSE) {
            if ($name !== FALSE) echo $br.$h1O.$name.&#39;: &#39;.$h1C;
            echo $preO.print_r($var, TRUE).$preC.$br;
        }else{
            if ($name !== FALSE){
                return &#39;&#39;;
            }else{
                return $br.$preO.var_export($var, TRUE).$preC.$br;
            }
        }
    }
}
?&amp;gt;
    
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Zend ACL</title>
      <link>http://www.robotamer.com/blog/2008-04-27-21.html</link>
      <pubDate>Sun, 27 Apr 2008 19:50:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2008-04-27-21.html</guid>
      <description>&lt;p&gt;Tamer_ACL is a simple Zend Framework ACL plugin that uses the sqlite backend to store all the data.&lt;/p&gt;

&lt;h4&gt;How To Inatall&lt;/h4&gt;

&lt;p&gt;Make sure you have a table called &lt;strong&gt;role&lt;/strong&gt; in your authentication table and a table called &lt;strong&gt;alias&lt;/strong&gt; you may change that to username if you like. The sql code is below.&lt;br /&gt;
Below are the files.&lt;br /&gt;
Before each file you will find installation instructions that should work even for the most novice Linux / Zend Framework developer.&lt;/p&gt;

&lt;h4&gt;Resources&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.phpclasses.org/browse/package/4100.html&#34;&gt;phpclasses.org&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://code.google.com/p/tamer&#34;&gt;Google code / REPO&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Todo&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Admin Backend&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4&gt;ZEND_ROOT/backstrap.php&lt;/h4&gt;

&lt;p&gt;Create acl object&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;include_once &amp;quot;Tamer/Acl.php&amp;quot;;
$acl = new Tamer_Acl();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the Tamer_Plugin_Auth to the Zend Front Controller&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;$front-&amp;gt;setControllerDirectory(APPS . &#39;/default/controllers&#39;)
        -&amp;gt;setBaseUrl($cfg-&amp;gt;baseUrl)
        -&amp;gt;registerPlugin(new Tamer_Plugin_Auth($auth, $acl))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;ZEND_ROOT/library/Tamer/Acl.php&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;
&amp;lt;?php
require_once &#39;Zend/Acl.php&#39;;
require_once &#39;Zend/Acl/Role.php&#39;;
require_once &#39;Zend/Acl/Resource.php&#39;;
require_once &#39;Zend/Db/Adapter/Pdo/Sqlite.php&#39;;

class Tamer_ACL extends Zend_ACL 
{
        public $alias;
        public $role;
        
        public function __construct($alias, $role)
        {       
                $this-&amp;gt;alias = $alias;
                $this-&amp;gt;role = $role;
                $sqlite = new TamerLiteACL($alias, $role);
                $result = $sqlite-&amp;gt;getAclRows();
                foreach($result[&#39;roles&#39;] as $v){
                        $this-&amp;gt;addRoles($v);
                }
                $this-&amp;gt;addResources($result[&#39;resources&#39;]);
                $this-&amp;gt;addAccess($result[&#39;access&#39;]);
        }
        
        private function addRoles($rows)
        {
                foreach($rows as $v){
                        if($v[&#39;parent&#39;] == &#39;&#39;){
                                $this-&amp;gt;addRole(new Zend_Acl_Role($v[&#39;role&#39;]));
                        }else{
                                $this-&amp;gt;addRole(new Zend_Acl_Role($v[&#39;role&#39;]), $v[&#39;parent&#39;]);
                        }
                }
        }
        
        private function addResources($rows)
        {
                foreach($rows as $v){
                        if($v[&#39;parent&#39;] == &#39;&#39;){
                                $this-&amp;gt;add(new Zend_Acl_Resource($v[&#39;resource&#39;]));
                        }else{
                                $this-&amp;gt;add(new Zend_Acl_Resource($v[&#39;resource&#39;]), $v[&#39;parent&#39;]);
                        }
                }
        }

        private function addAccess($rows)
        {
                foreach($rows as $v){
                        if($v[&#39;allow&#39;] == 1){
                                $this-&amp;gt;allow($v[&#39;role&#39;], $v[&#39;resource&#39;], $v[&#39;privilege&#39;]);
                        }else{
                                $this-&amp;gt;deny($v[&#39;role&#39;], $v[&#39;resource&#39;], $v[&#39;privilege&#39;]);
                        }
                }
        }
}


class TamerLiteACL 
{
        private $_sqlite_name = &#39;/db/config.db&#39;;
        private $_alias;
        private $_role;
        private $_result;
        
        public function __construct($alias, $role)
        {       
                $this-&amp;gt;_alias = $alias;
                $this-&amp;gt;_role = $role;
                
                try{
                        $this-&amp;gt;_sqliteAdapter = new Zend_Db_Adapter_Pdo_Sqlite(array(&#39;dbname&#39; =&amp;gt; ROOT.$this-&amp;gt;_sqlite_name));
                        $this-&amp;gt;_sqliteAdapter-&amp;gt;getConnection();
                } catch (Zend_Db_Adapter_Exception $e) {
                        echo &#39;adapter&amp;lt;pre&amp;gt;&#39;.$e-&amp;gt;getMessage().&#39;&amp;lt;/pre&amp;gt;&#39;;
                } catch (Zend_Exception $e) {
                        echo &#39;adapter&amp;lt;pre&amp;gt;&#39;.$e-&amp;gt;getMessage().&#39;&amp;lt;/pre&amp;gt;&#39;;
                }
                $this-&amp;gt;_sqliteAdapter-&amp;gt;getProfiler()-&amp;gt;setEnabled(true);

                $select = $this-&amp;gt;_sqliteAdapter-&amp;gt;select()
                                        -&amp;gt;from(&#39;acl_roles&#39;, array(&#39;role&#39;, &#39;parent&#39;))
                                        -&amp;gt;where(&#39;type = ?&#39;, 1);
                
                $stmt = $this-&amp;gt;_sqliteAdapter-&amp;gt;query($select);
                $this-&amp;gt;_result[&#39;roles&#39;][&#39;system&#39;] = $stmt-&amp;gt;fetchAll();
                
                $select = $this-&amp;gt;_sqliteAdapter-&amp;gt;select()
                                        -&amp;gt;from(&#39;acl_roles&#39;, array(&#39;role&#39;, &#39;parent&#39;))
                                        -&amp;gt;where(&#39;role = ?&#39;, $this-&amp;gt;_alias)
                                        -&amp;gt;orwhere(&#39;parent = ?&#39;, $this-&amp;gt;_alias);
                
                $stmt = $this-&amp;gt;_sqliteAdapter-&amp;gt;query($select);
                $this-&amp;gt;_result[&#39;roles&#39;][&#39;alias&#39;] = $stmt-&amp;gt;fetchAll();
                
                $stmt = $this-&amp;gt;_sqliteAdapter-&amp;gt;query(
                &amp;quot;SELECT resource, parent FROM acl_resources WHERE owner = &#39;system&#39; OR owner = ?&amp;quot;, $this-&amp;gt;_alias);
                $this-&amp;gt;_result[&#39;resources&#39;] = $rows = $stmt-&amp;gt;fetchAll();
                
                $stmt = $this-&amp;gt;_sqliteAdapter-&amp;gt;query(&#39;SELECT allow, role, resource, privilege FROM acl_access WHERE type = 1 ORDER BY chain&#39;);
                $this-&amp;gt;_result[&#39;access&#39;] = $rows = $stmt-&amp;gt;fetchAll();

                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }
        
        public function getAclRows()
        {
                return $this-&amp;gt;_result;
        }
}




class aclCreate extends Zend_ACL 
{
        public function __construct()
        {
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;index&#39;));
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;safe&#39;));
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;login&#39;), &#39;safe&#39;);
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;registration&#39;), &#39;safe&#39;);
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;password&#39;), &#39;safe&#39;);
                
                $this-&amp;gt;addRole(new Zend_Acl_Role(&#39;guest&#39;));
                $this-&amp;gt;deny(&#39;guest&#39;, &#39;safe&#39;, NULL);
                $this-&amp;gt;allow(&#39;guest&#39;, &#39;registration&#39;);
                $this-&amp;gt;allow(&#39;guest&#39;, &#39;login&#39;);
                $this-&amp;gt;deny(&#39;guest&#39;, &#39;password&#39;);
                $this-&amp;gt;allow(&#39;guest&#39;,&#39;index&#39;);
                
                $this-&amp;gt;addRole(new Zend_Acl_Role(&#39;member&#39;));
                $this-&amp;gt;allow(&#39;member&#39;, &#39;safe&#39;, NULL);
                
                $this-&amp;gt;addRole(new Zend_Acl_Role(&#39;admin&#39;));
                $this-&amp;gt;allow(&#39;admin&#39;);
        }

}

class TamerFile_ACL
{
        /*
        @ Call like this from bootstrap
                include_once &amp;quot;Tamer/Acl.php&amp;quot;;
                $acl = new Tamer_Acl();
                $acl = new aclCreate();
                $acl = $acl-&amp;gt;aclCheck();
        */
        protected $aclCfg;
        
        private $_sqlite_name = &#39;/db/config.db&#39;;
        private $_sqliteAdapter;
        private $_table; //Sqlite Table
        
        public $old = FALSE;

        public function __construct()
        {
                $this-&amp;gt;aclCfg = ROOT.&#39;/library/Tamer/Acl.php&#39;;

                try{
                        $this-&amp;gt;_sqliteAdapter = new Zend_Db_Adapter_Pdo_Sqlite(array(&#39;dbname&#39; =&amp;gt; ROOT.$this-&amp;gt;_sqlite_name));
                        $this-&amp;gt;_sqliteAdapter-&amp;gt;getConnection();
                } catch (Zend_Db_Adapter_Exception $e) {
                        echo &#39;adapter&amp;lt;pre&amp;gt;&#39;.$e-&amp;gt;getMessage().&#39;&amp;lt;/pre&amp;gt;&#39;;
                } catch (Zend_Exception $e) {
                        echo &#39;adapter&amp;lt;pre&amp;gt;&#39;.$e-&amp;gt;getMessage().&#39;&amp;lt;/pre&amp;gt;&#39;;
                }
                //$this-&amp;gt;dropTable();
                //$this-&amp;gt;makeTable();
                //$this-&amp;gt;aclCheck();
        }
        
        public function aclCheck()
        {
                $ftime = filemtime($this-&amp;gt;aclCfg);
                $sql = &#39;SELECT time FROM acl_array WHERE time = ?&#39;;
                if($this-&amp;gt;_result = $this-&amp;gt;_sqliteAdapter-&amp;gt;fetchRow($sql, $ftime)){     
                        return  $this-&amp;gt;aclGet();
                }else{
                        $acl = new aclCreate();
                        $this-&amp;gt;aclDelete();
                        $this-&amp;gt;aclSave($acl);
                        return $acl;
                }
        }

        public function aclGet()
        {
                $sql = &#39;SELECT acl FROM acl_array WHERE time = ?&#39;;
                $ftime = filemtime($this-&amp;gt;aclCfg);
                $this-&amp;gt;_result = $this-&amp;gt;_sqliteAdapter-&amp;gt;fetchRow($sql, $ftime);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
                
                return unserialize($this-&amp;gt;_result[&#39;acl&#39;]);
        }
        
        public function aclSave($array)
        {
                $filemtime = filemtime($this-&amp;gt;aclCfg);
                $array = serialize($array);
                $data = array(&#39;time&#39;=&amp;gt;$filemtime,&#39;acl&#39;=&amp;gt;$array);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;insert(&#39;acl_array&#39;, $data);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }

        public function aclDelete()
        {
                $this-&amp;gt;_sqliteAdapter-&amp;gt;delete(&#39;acl_array&#39;);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }

        
        /**
         * creates the db table
         *
         * @param array $fields
         */
        public function dropTable()
        {
            $this-&amp;gt;_result = $this-&amp;gt;_sqliteAdapter-&amp;gt;getConnection()-&amp;gt;exec(&#39;DROP TABLE acl_array&#39;);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }
        
        /**
         * creates the db table
         *
         * @param array $fields
         */
        public function makeTable()
        {
                $sql[] = &#39;CREATE TABLE IF NOT EXISTS acl_roles (role TEXT(50) NOT NULL,parent TEXT(50) default NULL)&#39;;
                $sql[] = &#39;CREATE TABLE IF NOT EXISTS acl_resources (resource TEXT(50) NOT NULL,parent TEXT(50) default NULL)&#39;;
                $sql[] = &#39;CREATE TABLE IF NOT EXISTS acl_access (role TEXT(50) NOT NULL,resource  Text(50) NOT NULL,privilege Text(50),allow Boolean NOT NULL DEFAULT 0)&#39;;
                $sql[] = &#39;CREATE table IF NOT EXISTS acl_array(time INTEGER PRIMARY KEY, acl TEXT)&#39;;
                foreach($sql as $v){
                        $this-&amp;gt;_sqliteAdapter-&amp;gt;query($v);
                }
                $this-&amp;gt;_table = true;
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }       
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;ZEND_ROOT/library/Tamer/Plugin/Auth.php&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php

class Tamer_Plugin_Auth extends Zend_Controller_Plugin_Abstract
{
        private $_auth;
        private $_acl;
        
        private $_noauth = array(&#39;module&#39; =&amp;gt; &#39;safe&#39;,
                                                        &#39;controller&#39; =&amp;gt; &#39;login&#39;,
                                                        &#39;action&#39; =&amp;gt; &#39;index&#39;);
        
        private $_noacl = array(&#39;module&#39; =&amp;gt; &#39;default&#39;,
                                                        &#39;controller&#39; =&amp;gt; &#39;error&#39;,
                                                        &#39;action&#39; =&amp;gt; &#39;privileges&#39;);
        
        public function __construct($auth, $acl)
        {
                $this-&amp;gt;_auth = $auth;
                $this-&amp;gt;_acl = $acl;
        }
        
        public function preDispatch(Zend_Controller_Request_Abstract $request)
        {
                if ($this-&amp;gt;_auth-&amp;gt;hasIdentity()) {
                        $role = $this-&amp;gt;_auth-&amp;gt;getIdentity()-&amp;gt;role;
                } else {
                        $role = &#39;guest&#39;;
                }

                $controller = $request-&amp;gt;controller;
                $action         = $request-&amp;gt;action;
                $module         = $request-&amp;gt;module;
                $resource       = $controller;
                
                if (!$this-&amp;gt;_acl-&amp;gt;has($resource)) {
                        $resource = null;
                }
                
                if (!$this-&amp;gt;_acl-&amp;gt;isAllowed($role, $resource, $action)) {
                        if (!$this-&amp;gt;_auth-&amp;gt;hasIdentity()) {
                                $module = $this-&amp;gt;_noauth[&#39;module&#39;];
                                $controller = $this-&amp;gt;_noauth[&#39;controller&#39;];
                                $action = $this-&amp;gt;_noauth[&#39;action&#39;];
                        } else {
                                $module = $this-&amp;gt;_noacl[&#39;module&#39;];
                                $controller = $this-&amp;gt;_noacl[&#39;controller&#39;];
                                $action = $this-&amp;gt;_noacl[&#39;action&#39;];
                        }
                }
                
                $request-&amp;gt;setModuleName($module);
                $request-&amp;gt;setControllerName($controller);
                $request-&amp;gt;setActionName($action);
        }
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;ZEND_ROOT/db/config.sql&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;DROP TABLE IF EXISTS acl_array;
DROP TABLE IF EXISTS acl_roles;
DROP TABLE IF EXISTS acl_resources;
DROP TABLE IF EXISTS acl_access;
DROP TRIGGER IF EXISTS update_acl_roles;
DROP TRIGGER IF EXISTS update_acl_roles_access;
DROP TRIGGER IF EXISTS update_acl_roles_parent;
DROP TRIGGER IF EXISTS update_acl_resources_owner;
DROP TRIGGER IF EXISTS update_acl_access_role;

PRAGMA auto_vacuum = 1;
PRAGMA encoding = &amp;quot;UTF-8&amp;quot;;

BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS acl_roles (role TEXT(50) NOT NULL,parent TEXT(50) default NULL, type Boolean DEFAULT NULL);

CREATE TABLE IF NOT EXISTS acl_resources (owner TEXT(50) NOT NULL,
resource TEXT(50) NOT NULL,parent TEXT(50) default NULL);

CREATE TABLE IF NOT EXISTS acl_access (role TEXT(50) NOT NULL,
resource TEXT(50) DEFAULT NULL, privilege Text(50) DEFAULT NULL, 
allow Boolean DEFAULT NULL, chain INTEGER DEFAULT NULL, type Boolean DEFAULT NULL);

CREATE TRIGGER update_acl_roles_parent UPDATE OF parent ON acl_roles 
        BEGIN UPDATE acl_roles SET parent = new.role WHERE parent = old.role;
        END;
CREATE TRIGGER update_acl_resources_owner UPDATE OF owner ON acl_resources 
        BEGIN UPDATE acl_resources SET owner = new.role WHERE owner = old.role; 
        END;
CREATE TRIGGER update_acl_access_role UPDATE OF role ON acl_access 
        BEGIN UPDATE acl_access SET role = new.role WHERE role = old.role; 
        END;


INSERT INTO &amp;quot;acl_roles&amp;quot; VALUES (&#39;admin&#39;,NULL,1);
INSERT INTO &amp;quot;acl_roles&amp;quot; VALUES (&#39;guest&#39;,NULL,1);
INSERT INTO &amp;quot;acl_roles&amp;quot; VALUES (&#39;member&#39;,NULL,1);
INSERT INTO &amp;quot;acl_roles&amp;quot; VALUES (&#39;developer&#39;,&#39;member&#39;,1);

INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;index&#39;,NULL);
INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;safe&#39;,NULL);
INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;login&#39;,&#39;safe&#39;);
INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;registration&#39;,&#39;safe&#39;);
INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;admin&#39;,&#39;safe&#39;);

INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;admin&#39;,NULL,NULL,1,NULL,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;guest&#39;,&#39;index&#39;,NULL,1,1,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;guest&#39;,&#39;safe&#39;,NULL,NULL,2,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;guest&#39;,&#39;login&#39;,NULL,1,3,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;guest&#39;,&#39;registration&#39;,NULL,1,4,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;member&#39;,&#39;safe&#39;,NULL,1,1,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;member&#39;,&#39;login&#39;,NULL,NULL,2,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;member&#39;,&#39;registration&#39;,NULL,NULL,3,1);
COMMIT;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>PHPTamer</title>
      <link>http://www.robotamer.com/code/php/phptamer/index.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/phptamer/index.html</guid>
      <description>&lt;p&gt;A system called PHPTamer Facade is in the works, Facade is a component dependency substitution system to achieve component interdependency via the facade programming pattern.&lt;/p&gt;

&lt;h2&gt;Predefined Variables&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;BR = &lt;br /&gt; or \n when in cli mode&lt;/li&gt;
&lt;li&gt;HR = Horizontal Rules&lt;/li&gt;
&lt;li&gt;DS = DIRECTORY_SEPARATOR&lt;/li&gt;
&lt;li&gt;HOSTNAME&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Master Singleton Class</title>
      <link>http://www.robotamer.com/code/php/phptamer/rtsingleton.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/phptamer/rtsingleton.html</guid>
      <description>&lt;h4&gt;Via the factory&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$l = RTSingleton::factory(&#39;Translate&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Directs call&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$view = RTSingleton::Template();
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Class Alias&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;RTSingleton::alias(string $className, string $alias);

RTSingleton::alias(&#39;Template&#39;, &#39;V&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Aliased call &lt;em&gt;RTSingleton has an S alias by default&lt;/em&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$view = S::V();
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Set Object  &lt;em&gt;Not available in version 0.0.1&lt;/em&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;RTSingleton::set(object $class [, string $alias = NULL ] );

RTSingleton::set(new Aura\View\Template(), &#39;View&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Actually:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt; RTSingleton::set(require __dir__ . &#39;/../libs/composer/vendor/Aura/View/scripts/instance.php&#39;,&#39;V&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;No need for global variables&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;S::V()-&amp;gt;var = &#39;Master RTSingleton Class&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Use original class or alias or switch back and forth&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;echo RTSingleton::Template()-&amp;gt;fetch(__dir__ .&#39;/gui/layout.php&#39;);
echo S::V()-&amp;gt;fetch(__dir__ .&#39;/gui/otherlayout.php&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;See all the registered classes&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;print_r(S::getClasses());
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>RTCrypter</title>
      <link>http://www.robotamer.com/code/php/phptamer/rtcrypter.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/phptamer/rtcrypter.html</guid>
      <description>&lt;p&gt;RTCrypter does not require mcrypt, mhash or any other PHP extension, it uses only PHP.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$crypt = new RTCrypter();
$crypt-&amp;gt;setCharacters(&#39;#@|*-+.,!~`$%^&amp;amp;&amp;lt;&amp;gt;{}[]()0/\123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#39;);
$secretKey = $crypt-&amp;gt;genKey();


$crypt = new RTCrypter();
$crypt-&amp;gt;useBase64(FALSE); // TRUE is default
$crypt-&amp;gt;setCharacters(&#39;#@|*-+.,!~`$%^&amp;amp;&amp;lt;&amp;gt;{}[]()0/\123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#39;);
$crypt-&amp;gt;setScramble($secretKey);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Facade</title>
      <link>http://www.robotamer.com/code/php/phptamer/facade.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/phptamer/facade.html</guid>
      <description>&lt;p&gt;Facade&amp;rsquo;s main focus is a to be a component dependency substitution system,
and will achieve component interdependency via the facade programming pattern.&lt;/p&gt;

&lt;p&gt;With Facade you can build a cli or web framework by mixing components from
&lt;a href=&#34;http://pear.php.net&#34;&gt;Pear&lt;/a&gt;,
&lt;a href=&#34;http://zendframework.com/&#34;&gt;Zend&lt;/a&gt;,
&lt;a href=&#34;http://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;
or just standalone classes from let&amp;rsquo;s say
&lt;a href=&#34;http://www.phpclasses.org&#34;&gt;PHPClasses&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Facade is a sub component of PHPTamer, which includes a collection of libraries,
and recommends tested components to help you get started.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UTF-8 Character List</title>
      <link>http://www.robotamer.com/linux/utf-8.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/utf-8.html</guid>
      <description>&lt;p&gt;Common: “ ” ‘ ’ – — … ‐ ‒ ° © ® ™ • ½ ¼ ¾ ⅓ ⅔ † ‡ µ ¢ £ € « » ♠ ♣ ♥ ♦ ¿ �&lt;br /&gt;
Math: - × ÷ ± ∞ π ∅ ≤ ≥ ≠ ≈ ∧ ∨ ∩ ∪ ∈ ∀ ∃ ∄ ∑ ∏ ← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↺ ↻ ⇒ ⇔&lt;br /&gt;
SuperSub: ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁽ ⁾ ⁿ ⁱ ₀ ₁ ₂ ₃ ₄ ₅ ₆ ₇ ₈ ₉ ₊ ₋ ₌ ₍ ₎&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;u00A0: &amp;#x00A0; ¡ ¢ £ ¤ ¥ ¦ § ¨ © ª « ¬ ­ ® ¯ ° ± ² ³ ´ µ ¶ · ¸ ¹ º » ¼ ½ ¾ ¿&lt;br /&gt;
u00C0: À Á Â Ã Ä Å Æ Ç È É Ê Ë Ì Í Î Ï Ð Ñ Ò Ó Ô Õ Ö × Ø Ù Ú Û Ü Ý Þ ß&lt;br /&gt;
u00E0: à á â ã ä å æ ç è é ê ë ì í î ï ð ñ ò ó ô õ ö ÷ ø ù ú û ü ý þ ÿ&lt;/p&gt;

&lt;p&gt;u0100: Ā ā Ă ă Ą ą Ć ć Ĉ ĉ Ċ ċ Č č Ď ď Đ đ Ē ē Ĕ ĕ Ė ė Ę ę Ě ě Ĝ ĝ Ğ ğ&lt;br /&gt;
u0120: Ġ ġ Ģ ģ Ĥ ĥ Ħ ħ Ĩ ĩ Ī ī Ĭ ĭ Į į İ ı Ĳ ĳ Ĵ ĵ Ķ ķ ĸ Ĺ ĺ Ļ ļ Ľ ľ Ŀ&lt;br /&gt;
u0140: ŀ Ł ł Ń ń Ņ ņ Ň ň ŉ Ŋ ŋ Ō ō Ŏ ŏ Ő ő Œ œ Ŕ ŕ Ŗ ŗ Ř ř Ś ś Ŝ ŝ Ş ş&lt;br /&gt;
u0160: Š š Ţ ţ Ť ť Ŧ ŧ Ũ ũ Ū ū Ŭ ŭ Ů ů Ű ű Ų ų Ŵ ŵ Ŷ ŷ Ÿ Ź ź Ż ż Ž ž ſ&lt;br /&gt;
u0180: ƀ Ɓ Ƃ ƃ Ƅ ƅ Ɔ Ƈ ƈ Ɖ Ɗ Ƌ ƌ ƍ Ǝ Ə Ɛ Ƒ ƒ Ɠ Ɣ ƕ Ɩ Ɨ Ƙ ƙ ƚ ƛ Ɯ Ɲ ƞ Ɵ&lt;br /&gt;
u01A0: Ơ ơ Ƣ ƣ Ƥ ƥ Ʀ Ƨ ƨ Ʃ ƪ ƫ Ƭ ƭ Ʈ Ư ư Ʊ Ʋ Ƴ ƴ Ƶ ƶ Ʒ Ƹ ƹ ƺ ƻ Ƽ ƽ ƾ ƿ&lt;br /&gt;
u01C0: ǀ ǁ ǂ ǃ Ǆ ǅ ǆ Ǉ ǈ ǉ Ǌ ǋ ǌ Ǎ ǎ Ǐ ǐ Ǒ ǒ Ǔ ǔ Ǖ ǖ Ǘ ǘ Ǚ ǚ Ǜ ǜ ǝ Ǟ ǟ&lt;br /&gt;
u01E0: Ǡ ǡ Ǣ ǣ Ǥ ǥ Ǧ ǧ Ǩ ǩ Ǫ ǫ Ǭ ǭ Ǯ ǯ ǰ Ǳ ǲ ǳ Ǵ ǵ Ƕ Ƿ Ǹ ǹ Ǻ ǻ Ǽ ǽ Ǿ ǿ&lt;br /&gt;
u0200: Ȁ ȁ Ȃ ȃ Ȅ ȅ Ȇ ȇ Ȉ ȉ Ȋ ȋ Ȍ ȍ Ȏ ȏ Ȑ ȑ Ȓ ȓ Ȕ ȕ Ȗ ȗ Ș ș Ț ț Ȝ ȝ Ȟ ȟ&lt;br /&gt;
u0220: Ƞ ȡ Ȣ ȣ Ȥ ȥ Ȧ ȧ Ȩ ȩ Ȫ ȫ Ȭ ȭ Ȯ ȯ Ȱ ȱ Ȳ ȳ ȴ ȵ ȶ ȷ ȸ ȹ Ⱥ Ȼ ȼ Ƚ Ⱦ ȿ&lt;br /&gt;
u0240: ɀ Ɂ ɂ Ƀ Ʉ Ʌ Ɇ ɇ Ɉ ɉ Ɋ ɋ Ɍ ɍ Ɏ ɏ ɐ ɑ ɒ ɓ ɔ ɕ ɖ ɗ ɘ ə ɚ ɛ ɜ ɝ ɞ ɟ&lt;br /&gt;
u0260: ɠ ɡ ɢ ɣ ɤ ɥ ɦ ɧ ɨ ɩ ɪ ɫ ɬ ɭ ɮ ɯ ɰ ɱ ɲ ɳ ɴ ɵ ɶ ɷ ɸ ɹ ɺ ɻ ɼ ɽ ɾ ɿ&lt;br /&gt;
u0280: ʀ ʁ ʂ ʃ ʄ ʅ ʆ ʇ ʈ ʉ ʊ ʋ ʌ ʍ ʎ ʏ ʐ ʑ ʒ ʓ ʔ ʕ ʖ ʗ ʘ ʙ ʚ ʛ ʜ ʝ ʞ ʟ&lt;br /&gt;
u02A0: ʠ ʡ ʢ ʣ ʤ ʥ ʦ ʧ ʨ ʩ ʪ ʫ ʬ ʭ ʮ ʯ ʰ ʱ ʲ ʳ ʴ ʵ ʶ ʷ ʸ ʹ ʺ ʻ ʼ ʽ ʾ ʿ&lt;br /&gt;
u02C0: ˀ ˁ ˂ ˃ ˄ ˅ ˆ ˇ ˈ ˉ ˊ ˋ ˌ ˍ ˎ ˏ ː ˑ ˒ ˓ ˔ ˕ ˖ ˗ ˘ ˙ ˚ ˛ ˜ ˝ ˞ ˟&lt;br /&gt;
u02E0: ˠ ˡ ˢ ˣ ˤ ˥ ˦ ˧ ˨ ˩ ˪ ˫ ˬ ˭ ˮ ˯ ˰ ˱ ˲ ˳ ˴ ˵ ˶ ˷ ˸ ˹ ˺ ˻ ˼ ˽ ˾ ˿&lt;br /&gt;
u0300: ̀ ́ ̂ ̃ ̄ ̅ ̆ ̇ ̈ ̉ ̊ ̋ ̌ ̍ ̎ ̏ ̐ ̑ ̒ ̓ ̔ ̕ ̖ ̗ ̘ ̙ ̚ ̛ ̜ ̝ ̞ ̟&lt;br /&gt;
u0320: ̠ ̡ ̢ ̣ ̤ ̥ ̦ ̧ ̨ ̩ ̪ ̫ ̬ ̭ ̮ ̯ ̰ ̱ ̲ ̳ ̴ ̵ ̶ ̷ ̸ ̹ ̺ ̻ ̼ ̽ ̾ ̿&lt;br /&gt;
u0340: ̀ ́ ͂ ̓ ̈́ ͅ ͆ ͇ ͈ ͉ ͊ ͋ ͌ ͍ ͎ ͏ ͐ ͑ ͒ ͓ ͔ ͕ ͖ ͗ ͘ ͙ ͚ ͛ ͜ ͝ ͞ ͟&lt;br /&gt;
u0360: ͠ ͡ ͢ ͣ ͤ ͥ ͦ ͧ ͨ ͩ ͪ ͫ ͬ ͭ ͮ ͯ Ͱ ͱ Ͳ ͳ ʹ ͵ Ͷ ͷ ͸ ͹ ͺ ͻ ͼ ͽ ; Ϳ&lt;br /&gt;
u0380: ΀ ΁ ΂ ΃ ΄ ΅ Ά · Έ Ή Ί ΋ Ό ΍ Ύ Ώ ΐ Α Β Γ Δ Ε Ζ Η Θ Ι Κ Λ Μ Ν Ξ Ο&lt;br /&gt;
u03A0: Π Ρ ΢ Σ Τ Υ Φ Χ Ψ Ω Ϊ Ϋ ά έ ή ί ΰ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο&lt;br /&gt;
u03C0: π ρ ς σ τ υ φ χ ψ ω ϊ ϋ ό ύ ώ Ϗ ϐ ϑ ϒ ϓ ϔ ϕ ϖ ϗ Ϙ ϙ Ϛ ϛ Ϝ ϝ Ϟ ϟ&lt;br /&gt;
u03E0: Ϡ ϡ Ϣ ϣ Ϥ ϥ Ϧ ϧ Ϩ ϩ Ϫ ϫ Ϭ ϭ Ϯ ϯ ϰ ϱ ϲ ϳ ϴ ϵ ϶ Ϸ ϸ Ϲ Ϻ ϻ ϼ Ͻ Ͼ Ͽ&lt;br /&gt;
u0400: Ѐ Ё Ђ Ѓ Є Ѕ І Ї Ј Љ Њ Ћ Ќ Ѝ Ў Џ А Б В Г Д Е Ж З И Й К Л М Н О П&lt;br /&gt;
u0420: Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ж з и й к л м н о п&lt;br /&gt;
u0440: р с т у ф х ц ч ш щ ъ ы ь э ю я ѐ ё ђ ѓ є ѕ і ї ј љ њ ћ ќ ѝ ў џ&lt;br /&gt;
u0460: Ѡ ѡ Ѣ ѣ Ѥ ѥ Ѧ ѧ Ѩ ѩ Ѫ ѫ Ѭ ѭ Ѯ ѯ Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ Ѹ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ&lt;br /&gt;
u0480: Ҁ ҁ ҂ ҃ ҄ ҅ ҆ ҇ ҈ ҉ Ҋ ҋ Ҍ ҍ Ҏ ҏ Ґ ґ Ғ ғ Ҕ ҕ Җ җ Ҙ ҙ Қ қ Ҝ ҝ Ҟ ҟ&lt;br /&gt;
u04A0: Ҡ ҡ Ң ң Ҥ ҥ Ҧ ҧ Ҩ ҩ Ҫ ҫ Ҭ ҭ Ү ү Ұ ұ Ҳ ҳ Ҵ ҵ Ҷ ҷ Ҹ ҹ Һ һ Ҽ ҽ Ҿ ҿ&lt;br /&gt;
u04C0: Ӏ Ӂ ӂ Ӄ ӄ Ӆ ӆ Ӈ ӈ Ӊ ӊ Ӌ ӌ Ӎ ӎ ӏ Ӑ ӑ Ӓ ӓ Ӕ ӕ Ӗ ӗ Ә ә Ӛ ӛ Ӝ ӝ Ӟ ӟ&lt;br /&gt;
u04E0: Ӡ ӡ Ӣ ӣ Ӥ ӥ Ӧ ӧ Ө ө Ӫ ӫ Ӭ ӭ Ӯ ӯ Ӱ ӱ Ӳ ӳ Ӵ ӵ Ӷ ӷ Ӹ ӹ Ӻ ӻ Ӽ ӽ Ӿ ӿ&lt;br /&gt;
u0500: Ԁ ԁ Ԃ ԃ Ԅ ԅ Ԇ ԇ Ԉ ԉ Ԋ ԋ Ԍ ԍ Ԏ ԏ Ԑ ԑ Ԓ ԓ Ԕ ԕ Ԗ ԗ Ԙ ԙ Ԛ ԛ Ԝ ԝ Ԟ ԟ&lt;br /&gt;
u0520: Ԡ ԡ Ԣ ԣ Ԥ ԥ Ԧ ԧ Ԩ ԩ Ԫ ԫ Ԭ ԭ Ԯ ԯ ԰ Ա Բ Գ Դ Ե Զ Է Ը Թ Ժ Ի Լ Խ Ծ Կ&lt;br /&gt;
u0620: ؠ ء آ أ ؤ إ ئ ا ب ة ت ث ج ح خ د ذ ر ز س ش ص ض ط ظ ع غ ػ ؼ ؽ ؾ ؿ&lt;br /&gt;
u0640: ـ ف ق ك ل م ن ه و ى ي ً ٌ ٍ َ ُ ِ ّ ْ ٓ ٔ ٕ ٖ ٗ ٘ ٙ ٚ ٛ ٜ ٝ ٞ ٟ&lt;br /&gt;
u0660: ٠ ١ ٢ ٣ ٤ ٥ ٦ ٧ ٨ ٩ ٪ ٫ ٬ ٭ ٮ ٯ ٰ ٱ ٲ ٳ ٴ ٵ ٶ ٷ ٸ ٹ ٺ ٻ ټ ٽ پ ٿ&lt;br /&gt;
u0680: ڀ ځ ڂ ڃ ڄ څ چ ڇ ڈ ډ ڊ ڋ ڌ ڍ ڎ ڏ ڐ ڑ ڒ ړ ڔ ڕ ږ ڗ ژ ڙ ښ ڛ ڜ ڝ ڞ ڟ&lt;br /&gt;
u0900: ऀ ँ ं ः ऄ अ आ इ ई उ ऊ ऋ ऌ ऍ ऎ ए ऐ ऑ ऒ ओ औ क ख ग घ ङ च छ ज झ ञ ट&lt;br /&gt;
u0920: ठ ड ढ ण त थ द ध न ऩ प फ ब भ म य र ऱ ल ळ ऴ व श ष स ह ऺ ऻ ़ ऽ ा ि&lt;br /&gt;
u0940: ी ु ू ृ ॄ ॅ ॆ े ै ॉ ॊ ो ौ ् ॎ ॏ ॐ ॑ ॒ ॓ ॔ ॕ ॖ ॗ क़ ख़ ग़ ज़ ड़ ढ़ फ़ य़&lt;br /&gt;
u0FC0: ࿀ ࿁ ࿂ ࿃ ࿄ ࿅ ࿆ ࿇ ࿈ ࿉ ࿊ ࿋ ࿌ ࿍ ࿎ ࿏ ࿐ ࿑ ࿒ ࿓ ࿔ ࿕ ࿖ ࿗ ࿘ ࿙ ࿚ ࿛ ࿜ ࿝ ࿞ ࿟&lt;br /&gt;
u10A0: Ⴀ Ⴁ Ⴂ Ⴃ Ⴄ Ⴅ Ⴆ Ⴇ Ⴈ Ⴉ Ⴊ Ⴋ Ⴌ Ⴍ Ⴎ Ⴏ Ⴐ Ⴑ Ⴒ Ⴓ Ⴔ Ⴕ Ⴖ Ⴗ Ⴘ Ⴙ Ⴚ Ⴛ Ⴜ Ⴝ Ⴞ Ⴟ&lt;br /&gt;
u13A0: Ꭰ Ꭱ Ꭲ Ꭳ Ꭴ Ꭵ Ꭶ Ꭷ Ꭸ Ꭹ Ꭺ Ꭻ Ꭼ Ꭽ Ꭾ Ꭿ Ꮀ Ꮁ Ꮂ Ꮃ Ꮄ Ꮅ Ꮆ Ꮇ Ꮈ Ꮉ Ꮊ Ꮋ Ꮌ Ꮍ Ꮎ Ꮏ&lt;br /&gt;
u1400: ᐀ ᐁ ᐂ ᐃ ᐄ ᐅ ᐆ ᐇ ᐈ ᐉ ᐊ ᐋ ᐌ ᐍ ᐎ ᐏ ᐐ ᐑ ᐒ ᐓ ᐔ ᐕ ᐖ ᐗ ᐘ ᐙ ᐚ ᐛ ᐜ ᐝ ᐞ ᐟ&lt;br /&gt;
u1580: ᖀ ᖁ ᖂ ᖃ ᖄ ᖅ ᖆ ᖇ ᖈ ᖉ ᖊ ᖋ ᖌ ᖍ ᖎ ᖏ ᖐ ᖑ ᖒ ᖓ ᖔ ᖕ ᖖ ᖗ ᖘ ᖙ ᖚ ᖛ ᖜ ᖝ ᖞ ᖟ&lt;br /&gt;
u1680:   ᚁ ᚂ ᚃ ᚄ ᚅ ᚆ ᚇ ᚈ ᚉ ᚊ ᚋ ᚌ ᚍ ᚎ ᚏ ᚐ ᚑ ᚒ ᚓ ᚔ ᚕ ᚖ ᚗ ᚘ ᚙ ᚚ ᚛ ᚜ ᚝ ᚞ ᚟&lt;br /&gt;
u16A0: ᚠ ᚡ ᚢ ᚣ ᚤ ᚥ ᚦ ᚧ ᚨ ᚩ ᚪ ᚫ ᚬ ᚭ ᚮ ᚯ ᚰ ᚱ ᚲ ᚳ ᚴ ᚵ ᚶ ᚷ ᚸ ᚹ ᚺ ᚻ ᚼ ᚽ ᚾ ᚿ&lt;br /&gt;
u16C0: ᛀ ᛁ ᛂ ᛃ ᛄ ᛅ ᛆ ᛇ ᛈ ᛉ ᛊ ᛋ ᛌ ᛍ ᛎ ᛏ ᛐ ᛑ ᛒ ᛓ ᛔ ᛕ ᛖ ᛗ ᛘ ᛙ ᛚ ᛛ ᛜ ᛝ ᛞ ᛟ&lt;br /&gt;
u16E0: ᛠ ᛡ ᛢ ᛣ ᛤ ᛥ ᛦ ᛧ ᛨ ᛩ ᛪ ᛫ ᛬ ᛭ ᛮ ᛯ ᛰ ᛱ ᛲ ᛳ ᛴ ᛵ ᛶ ᛷ ᛸ ᛹ ᛺ ᛻ ᛼ ᛽ ᛾ ᛿&lt;br /&gt;
u1D00: ᴀ ᴁ ᴂ ᴃ ᴄ ᴅ ᴆ ᴇ ᴈ ᴉ ᴊ ᴋ ᴌ ᴍ ᴎ ᴏ ᴐ ᴑ ᴒ ᴓ ᴔ ᴕ ᴖ ᴗ ᴘ ᴙ ᴚ ᴛ ᴜ ᴝ ᴞ ᴟ&lt;br /&gt;
u1D20: ᴠ ᴡ ᴢ ᴣ ᴤ ᴥ ᴦ ᴧ ᴨ ᴩ ᴪ ᴫ ᴬ ᴭ ᴮ ᴯ ᴰ ᴱ ᴲ ᴳ ᴴ ᴵ ᴶ ᴷ ᴸ ᴹ ᴺ ᴻ ᴼ ᴽ ᴾ ᴿ&lt;br /&gt;
u1D40: ᵀ ᵁ ᵂ ᵃ ᵄ ᵅ ᵆ ᵇ ᵈ ᵉ ᵊ ᵋ ᵌ ᵍ ᵎ ᵏ ᵐ ᵑ ᵒ ᵓ ᵔ ᵕ ᵖ ᵗ ᵘ ᵙ ᵚ ᵛ ᵜ ᵝ ᵞ ᵟ&lt;br /&gt;
u1E00: Ḁ ḁ Ḃ ḃ Ḅ ḅ Ḇ ḇ Ḉ ḉ Ḋ ḋ Ḍ ḍ Ḏ ḏ Ḑ ḑ Ḓ ḓ Ḕ ḕ Ḗ ḗ Ḙ ḙ Ḛ ḛ Ḝ ḝ Ḟ ḟ&lt;br /&gt;
u1E20: Ḡ ḡ Ḣ ḣ Ḥ ḥ Ḧ ḧ Ḩ ḩ Ḫ ḫ Ḭ ḭ Ḯ ḯ Ḱ ḱ Ḳ ḳ Ḵ ḵ Ḷ ḷ Ḹ ḹ Ḻ ḻ Ḽ ḽ Ḿ ḿ&lt;br /&gt;
u1E40: Ṁ ṁ Ṃ ṃ Ṅ ṅ Ṇ ṇ Ṉ ṉ Ṋ ṋ Ṍ ṍ Ṏ ṏ Ṑ ṑ Ṓ ṓ Ṕ ṕ Ṗ ṗ Ṙ ṙ Ṛ ṛ Ṝ ṝ Ṟ ṟ&lt;br /&gt;
u1E60: Ṡ ṡ Ṣ ṣ Ṥ ṥ Ṧ ṧ Ṩ ṩ Ṫ ṫ Ṭ ṭ Ṯ ṯ Ṱ ṱ Ṳ ṳ Ṵ ṵ Ṷ ṷ Ṹ ṹ Ṻ ṻ Ṽ ṽ Ṿ ṿ&lt;br /&gt;
u1E80: Ẁ ẁ Ẃ ẃ Ẅ ẅ Ẇ ẇ Ẉ ẉ Ẋ ẋ Ẍ ẍ Ẏ ẏ Ẑ ẑ Ẓ ẓ Ẕ ẕ ẖ ẗ ẘ ẙ ẚ ẛ ẜ ẝ ẞ ẟ&lt;br /&gt;
u1EA0: Ạ ạ Ả ả Ấ ấ Ầ ầ Ẩ ẩ Ẫ ẫ Ậ ậ Ắ ắ Ằ ằ Ẳ ẳ Ẵ ẵ Ặ ặ Ẹ ẹ Ẻ ẻ Ẽ ẽ Ế ế&lt;br /&gt;
u1EC0: Ề ề Ể ể Ễ ễ Ệ ệ Ỉ ỉ Ị ị Ọ ọ Ỏ ỏ Ố ố Ồ ồ Ổ ổ Ỗ ỗ Ộ ộ Ớ ớ Ờ ờ Ở ở&lt;br /&gt;
u1EE0: Ỡ ỡ Ợ ợ Ụ ụ Ủ ủ Ứ ứ Ừ ừ Ử ử Ữ ữ Ự ự Ỳ ỳ Ỵ ỵ Ỷ ỷ Ỹ ỹ Ỻ ỻ Ỽ ỽ Ỿ ỿ&lt;br /&gt;
u1F00: ἀ ἁ ἂ ἃ ἄ ἅ ἆ ἇ Ἀ Ἁ Ἂ Ἃ Ἄ Ἅ Ἆ Ἇ ἐ ἑ ἒ ἓ ἔ ἕ ἖ ἗ Ἐ Ἑ Ἒ Ἓ Ἔ Ἕ ἞ ἟&lt;br /&gt;
u1F20: ἠ ἡ ἢ ἣ ἤ ἥ ἦ ἧ Ἠ Ἡ Ἢ Ἣ Ἤ Ἥ Ἦ Ἧ ἰ ἱ ἲ ἳ ἴ ἵ ἶ ἷ Ἰ Ἱ Ἲ Ἳ Ἴ Ἵ Ἶ Ἷ&lt;br /&gt;
u1F40: ὀ ὁ ὂ ὃ ὄ ὅ ὆ ὇ Ὀ Ὁ Ὂ Ὃ Ὄ Ὅ ὎ ὏ ὐ ὑ ὒ ὓ ὔ ὕ ὖ ὗ ὘ Ὑ ὚ Ὓ ὜ Ὕ ὞ Ὗ&lt;br /&gt;
u1F60: ὠ ὡ ὢ ὣ ὤ ὥ ὦ ὧ Ὠ Ὡ Ὢ Ὣ Ὤ Ὥ Ὦ Ὧ ὰ ά ὲ έ ὴ ή ὶ ί ὸ ό ὺ ύ ὼ ώ ὾ ὿&lt;br /&gt;
u1F80: ᾀ ᾁ ᾂ ᾃ ᾄ ᾅ ᾆ ᾇ ᾈ ᾉ ᾊ ᾋ ᾌ ᾍ ᾎ ᾏ ᾐ ᾑ ᾒ ᾓ ᾔ ᾕ ᾖ ᾗ ᾘ ᾙ ᾚ ᾛ ᾜ ᾝ ᾞ ᾟ&lt;br /&gt;
u1FA0: ᾠ ᾡ ᾢ ᾣ ᾤ ᾥ ᾦ ᾧ ᾨ ᾩ ᾪ ᾫ ᾬ ᾭ ᾮ ᾯ ᾰ ᾱ ᾲ ᾳ ᾴ ᾵ ᾶ ᾷ Ᾰ Ᾱ Ὰ Ά ᾼ ᾽ ι ᾿&lt;br /&gt;
u1FC0: ῀ ῁ ῂ ῃ ῄ ῅ ῆ ῇ Ὲ Έ Ὴ Ή ῌ ῍ ῎ ῏ ῐ ῑ ῒ ΐ ῔ ῕ ῖ ῗ Ῐ Ῑ Ὶ Ί ῜ ῝ ῞ ῟&lt;br /&gt;
u1FE0: ῠ ῡ ῢ ΰ ῤ ῥ ῦ ῧ Ῠ Ῡ Ὺ Ύ Ῥ ῭ ΅ ` ῰ ῱ ῲ ῳ ῴ ῵ ῶ ῷ Ὸ Ό Ὼ Ώ ῼ ´ ῾ ῿&lt;br /&gt;
u2000:                       ​ ‌ ‍ ‎ ‏ ‐ ‑ ‒ – — ― ‖ ‗ ‘ ’ ‚ ‛ “ ” „ ‟&lt;br /&gt;
u2020: † ‡ • ‣ ․ ‥ … ‧     ‪ ‫ ‬ ‭ ‮   ‰ ‱ ′ ″ ‴ ‵ ‶ ‷ ‸ ‹ › ※ ‼ ‽ ‾ ‿&lt;br /&gt;
u2040: ⁀ ⁁ ⁂ ⁃ ⁄ ⁅ ⁆ ⁇ ⁈ ⁉ ⁊ ⁋ ⁌ ⁍ ⁎ ⁏ ⁐ ⁑ ⁒ ⁓ ⁔ ⁕ ⁖ ⁗ ⁘ ⁙ ⁚ ⁛ ⁜ ⁝ ⁞  &lt;br /&gt;
u2060: ⁠ ⁡ ⁢ ⁣ ⁤ ⁥ ⁦ ⁧ ⁨ ⁩ ⁪ ⁫ ⁬ ⁭ ⁮ ⁯ ⁰ ⁱ ⁲ ⁳ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ&lt;br /&gt;
u2080: ₀ ₁ ₂ ₃ ₄ ₅ ₆ ₇ ₈ ₉ ₊ ₋ ₌ ₍ ₎ ₏ ₐ ₑ ₒ ₓ ₔ ₕ ₖ ₗ ₘ ₙ ₚ ₛ ₜ ₝ ₞ ₟&lt;br /&gt;
u20A0: ₠ ₡ ₢ ₣ ₤ ₥ ₦ ₧ ₨ ₩ ₪ ₫ € ₭ ₮ ₯ ₰ ₱ ₲ ₳ ₴ ₵ ₶ ₷ ₸ ₹ ₺ ₻ ₼ ₽ ₾ ₿&lt;br /&gt;
u20C0: ⃀ ⃁ ⃂ ⃃ ⃄ ⃅ ⃆ ⃇ ⃈ ⃉ ⃊ ⃋ ⃌ ⃍ ⃎ ⃏ ⃐ ⃑ ⃒ ⃓ ⃔ ⃕ ⃖ ⃗ ⃘ ⃙ ⃚ ⃛ ⃜ ⃝ ⃞ ⃟&lt;br /&gt;
u20E0: ⃠ ⃡ ⃢ ⃣ ⃤ ⃥ ⃦ ⃧ ⃨ ⃩ ⃪ ⃫ ⃬ ⃭ ⃮ ⃯ ⃰ ⃱ ⃲ ⃳ ⃴ ⃵ ⃶ ⃷ ⃸ ⃹ ⃺ ⃻ ⃼ ⃽ ⃾ ⃿&lt;br /&gt;
u2100: ℀ ℁ ℂ ℃ ℄ ℅ ℆ ℇ ℈ ℉ ℊ ℋ ℌ ℍ ℎ ℏ ℐ ℑ ℒ ℓ ℔ ℕ № ℗ ℘ ℙ ℚ ℛ ℜ ℝ ℞ ℟&lt;br /&gt;
u2120: ℠ ℡ ™ ℣ ℤ ℥ Ω ℧ ℨ ℩ K Å ℬ ℭ ℮ ℯ ℰ ℱ Ⅎ ℳ ℴ ℵ ℶ ℷ ℸ ℹ ℺ ℻ ℼ ℽ ℾ ℿ&lt;br /&gt;
u2140: ⅀ ⅁ ⅂ ⅃ ⅄ ⅅ ⅆ ⅇ ⅈ ⅉ ⅊ ⅋ ⅌ ⅍ ⅎ ⅏ ⅐ ⅑ ⅒ ⅓ ⅔ ⅕ ⅖ ⅗ ⅘ ⅙ ⅚ ⅛ ⅜ ⅝ ⅞ ⅟&lt;br /&gt;
u2160: Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ Ⅺ Ⅻ Ⅼ Ⅽ Ⅾ Ⅿ ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ ⅷ ⅸ ⅹ ⅺ ⅻ ⅼ ⅽ ⅾ ⅿ&lt;br /&gt;
u2180: ↀ ↁ ↂ Ↄ ↄ ↅ ↆ ↇ ↈ ↉ ↊ ↋ ↌ ↍ ↎ ↏ ← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↚ ↛ ↜ ↝ ↞ ↟&lt;br /&gt;
u21A0: ↠ ↡ ↢ ↣ ↤ ↥ ↦ ↧ ↨ ↩ ↪ ↫ ↬ ↭ ↮ ↯ ↰ ↱ ↲ ↳ ↴ ↵ ↶ ↷ ↸ ↹ ↺ ↻ ↼ ↽ ↾ ↿&lt;br /&gt;
u21C0: ⇀ ⇁ ⇂ ⇃ ⇄ ⇅ ⇆ ⇇ ⇈ ⇉ ⇊ ⇋ ⇌ ⇍ ⇎ ⇏ ⇐ ⇑ ⇒ ⇓ ⇔ ⇕ ⇖ ⇗ ⇘ ⇙ ⇚ ⇛ ⇜ ⇝ ⇞ ⇟&lt;br /&gt;
u21E0: ⇠ ⇡ ⇢ ⇣ ⇤ ⇥ ⇦ ⇧ ⇨ ⇩ ⇪ ⇫ ⇬ ⇭ ⇮ ⇯ ⇰ ⇱ ⇲ ⇳ ⇴ ⇵ ⇶ ⇷ ⇸ ⇹ ⇺ ⇻ ⇼ ⇽ ⇾ ⇿&lt;br /&gt;
u2200: ∀ ∁ ∂ ∃ ∄ ∅ ∆ ∇ ∈ ∉ ∊ ∋ ∌ ∍ ∎ ∏ ∐ ∑ − ∓ ∔ ∕ ∖ ∗ ∘ ∙ √ ∛ ∜ ∝ ∞ ∟&lt;br /&gt;
u2220: ∠ ∡ ∢ ∣ ∤ ∥ ∦ ∧ ∨ ∩ ∪ ∫ ∬ ∭ ∮ ∯ ∰ ∱ ∲ ∳ ∴ ∵ ∶ ∷ ∸ ∹ ∺ ∻ ∼ ∽ ∾ ∿&lt;br /&gt;
u2240: ≀ ≁ ≂ ≃ ≄ ≅ ≆ ≇ ≈ ≉ ≊ ≋ ≌ ≍ ≎ ≏ ≐ ≑ ≒ ≓ ≔ ≕ ≖ ≗ ≘ ≙ ≚ ≛ ≜ ≝ ≞ ≟&lt;br /&gt;
u2260: ≠ ≡ ≢ ≣ ≤ ≥ ≦ ≧ ≨ ≩ ≪ ≫ ≬ ≭ ≮ ≯ ≰ ≱ ≲ ≳ ≴ ≵ ≶ ≷ ≸ ≹ ≺ ≻ ≼ ≽ ≾ ≿&lt;br /&gt;
u2280: ⊀ ⊁ ⊂ ⊃ ⊄ ⊅ ⊆ ⊇ ⊈ ⊉ ⊊ ⊋ ⊌ ⊍ ⊎ ⊏ ⊐ ⊑ ⊒ ⊓ ⊔ ⊕ ⊖ ⊗ ⊘ ⊙ ⊚ ⊛ ⊜ ⊝ ⊞ ⊟&lt;br /&gt;
u22A0: ⊠ ⊡ ⊢ ⊣ ⊤ ⊥ ⊦ ⊧ ⊨ ⊩ ⊪ ⊫ ⊬ ⊭ ⊮ ⊯ ⊰ ⊱ ⊲ ⊳ ⊴ ⊵ ⊶ ⊷ ⊸ ⊹ ⊺ ⊻ ⊼ ⊽ ⊾ ⊿&lt;br /&gt;
u22C0: ⋀ ⋁ ⋂ ⋃ ⋄ ⋅ ⋆ ⋇ ⋈ ⋉ ⋊ ⋋ ⋌ ⋍ ⋎ ⋏ ⋐ ⋑ ⋒ ⋓ ⋔ ⋕ ⋖ ⋗ ⋘ ⋙ ⋚ ⋛ ⋜ ⋝ ⋞ ⋟&lt;br /&gt;
u22E0: ⋠ ⋡ ⋢ ⋣ ⋤ ⋥ ⋦ ⋧ ⋨ ⋩ ⋪ ⋫ ⋬ ⋭ ⋮ ⋯ ⋰ ⋱ ⋲ ⋳ ⋴ ⋵ ⋶ ⋷ ⋸ ⋹ ⋺ ⋻ ⋼ ⋽ ⋾ ⋿&lt;br /&gt;
u2300: ⌀ ⌁ ⌂ ⌃ ⌄ ⌅ ⌆ ⌇ ⌈ ⌉ ⌊ ⌋ ⌌ ⌍ ⌎ ⌏ ⌐ ⌑ ⌒ ⌓ ⌔ ⌕ ⌖ ⌗ ⌘ ⌙ ⌚ ⌛ ⌜ ⌝ ⌞ ⌟&lt;br /&gt;
u2320: ⌠ ⌡ ⌢ ⌣ ⌤ ⌥ ⌦ ⌧ ⌨ 〈 〉 ⌫ ⌬ ⌭ ⌮ ⌯ ⌰ ⌱ ⌲ ⌳ ⌴ ⌵ ⌶ ⌷ ⌸ ⌹ ⌺ ⌻ ⌼ ⌽ ⌾ ⌿&lt;br /&gt;
u2340: ⍀ ⍁ ⍂ ⍃ ⍄ ⍅ ⍆ ⍇ ⍈ ⍉ ⍊ ⍋ ⍌ ⍍ ⍎ ⍏ ⍐ ⍑ ⍒ ⍓ ⍔ ⍕ ⍖ ⍗ ⍘ ⍙ ⍚ ⍛ ⍜ ⍝ ⍞ ⍟&lt;br /&gt;
u2360: ⍠ ⍡ ⍢ ⍣ ⍤ ⍥ ⍦ ⍧ ⍨ ⍩ ⍪ ⍫ ⍬ ⍭ ⍮ ⍯ ⍰ ⍱ ⍲ ⍳ ⍴ ⍵ ⍶ ⍷ ⍸ ⍹ ⍺ ⍻ ⍼ ⍽ ⍾ ⍿&lt;br /&gt;
u2380: ⎀ ⎁ ⎂ ⎃ ⎄ ⎅ ⎆ ⎇ ⎈ ⎉ ⎊ ⎋ ⎌ ⎍ ⎎ ⎏ ⎐ ⎑ ⎒ ⎓ ⎔ ⎕ ⎖ ⎗ ⎘ ⎙ ⎚ ⎛ ⎜ ⎝ ⎞ ⎟&lt;br /&gt;
u23A0: ⎠ ⎡ ⎢ ⎣ ⎤ ⎥ ⎦ ⎧ ⎨ ⎩ ⎪ ⎫ ⎬ ⎭ ⎮ ⎯ ⎰ ⎱ ⎲ ⎳ ⎴ ⎵ ⎶ ⎷ ⎸ ⎹ ⎺ ⎻ ⎼ ⎽ ⎾ ⎿&lt;br /&gt;
u23C0: ⏀ ⏁ ⏂ ⏃ ⏄ ⏅ ⏆ ⏇ ⏈ ⏉ ⏊ ⏋ ⏌ ⏍ ⏎ ⏏ ⏐ ⏑ ⏒ ⏓ ⏔ ⏕ ⏖ ⏗ ⏘ ⏙ ⏚ ⏛ ⏜ ⏝ ⏞ ⏟&lt;br /&gt;
u23E0: ⏠ ⏡ ⏢ ⏣ ⏤ ⏥ ⏦ ⏧ ⏨ ⏩ ⏪ ⏫ ⏬ ⏭ ⏮ ⏯ ⏰ ⏱ ⏲ ⏳ ⏴ ⏵ ⏶ ⏷ ⏸ ⏹ ⏺ ⏻ ⏼ ⏽ ⏾ ⏿&lt;br /&gt;
u2400: ␀ ␁ ␂ ␃ ␄ ␅ ␆ ␇ ␈ ␉ ␊ ␋ ␌ ␍ ␎ ␏ ␐ ␑ ␒ ␓ ␔ ␕ ␖ ␗ ␘ ␙ ␚ ␛ ␜ ␝ ␞ ␟&lt;br /&gt;
u2420: ␠ ␡ ␢ ␣ ␤ ␥ ␦ ␧ ␨ ␩ ␪ ␫ ␬ ␭ ␮ ␯ ␰ ␱ ␲ ␳ ␴ ␵ ␶ ␷ ␸ ␹ ␺ ␻ ␼ ␽ ␾ ␿&lt;br /&gt;
u2440: ⑀ ⑁ ⑂ ⑃ ⑄ ⑅ ⑆ ⑇ ⑈ ⑉ ⑊ ⑋ ⑌ ⑍ ⑎ ⑏ ⑐ ⑑ ⑒ ⑓ ⑔ ⑕ ⑖ ⑗ ⑘ ⑙ ⑚ ⑛ ⑜ ⑝ ⑞ ⑟&lt;br /&gt;
u2460: ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿&lt;br /&gt;
u2480: ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟&lt;br /&gt;
u24A0: ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ&lt;br /&gt;
u24C0: Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ&lt;br /&gt;
u24E0: ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿&lt;br /&gt;
u2500: ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏ ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟&lt;br /&gt;
u2520: ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿&lt;br /&gt;
u2540: ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏ ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟&lt;br /&gt;
u2560: ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯ ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿&lt;br /&gt;
u2580: ▀ ▁ ▂ ▃ ▄ ▅ ▆ ▇ █ ▉ ▊ ▋ ▌ ▍ ▎ ▏ ▐ ░ ▒ ▓ ▔ ▕ ▖ ▗ ▘ ▙ ▚ ▛ ▜ ▝ ▞ ▟&lt;br /&gt;
u25A0: ■ □ ▢ ▣ ▤ ▥ ▦ ▧ ▨ ▩ ▪ ▫ ▬ ▭ ▮ ▯ ▰ ▱ ▲ △ ▴ ▵ ▶ ▷ ▸ ▹ ► ▻ ▼ ▽ ▾ ▿&lt;br /&gt;
u25C0: ◀ ◁ ◂ ◃ ◄ ◅ ◆ ◇ ◈ ◉ ◊ ○ ◌ ◍ ◎ ● ◐ ◑ ◒ ◓ ◔ ◕ ◖ ◗ ◘ ◙ ◚ ◛ ◜ ◝ ◞ ◟&lt;br /&gt;
u25E0: ◠ ◡ ◢ ◣ ◤ ◥ ◦ ◧ ◨ ◩ ◪ ◫ ◬ ◭ ◮ ◯ ◰ ◱ ◲ ◳ ◴ ◵ ◶ ◷ ◸ ◹ ◺ ◻ ◼ ◽ ◾ ◿&lt;br /&gt;
u2600: ☀ ☁ ☂ ☃ ☄ ★ ☆ ☇ ☈ ☉ ☊ ☋ ☌ ☍ ☎ ☏ ☐ ☑ ☒ ☓ ☔ ☕ ☖ ☗ ☘ ☙ ☚ ☛ ☜ ☝ ☞ ☟&lt;br /&gt;
u2620: ☠ ☡ ☢ ☣ ☤ ☥ ☦ ☧ ☨ ☩ ☪ ☫ ☬ ☭ ☮ ☯ ☰ ☱ ☲ ☳ ☴ ☵ ☶ ☷ ☸ ☹ ☺ ☻ ☼ ☽ ☾ ☿&lt;br /&gt;
u2640: ♀ ♁ ♂ ♃ ♄ ♅ ♆ ♇ ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒ ♓ ♔ ♕ ♖ ♗ ♘ ♙ ♚ ♛ ♜ ♝ ♞ ♟&lt;br /&gt;
u2660: ♠ ♡ ♢ ♣ ♤ ♥ ♦ ♧ ♨ ♩ ♪ ♫ ♬ ♭ ♮ ♯ ♰ ♱ ♲ ♳ ♴ ♵ ♶ ♷ ♸ ♹ ♺ ♻ ♼ ♽ ♾ ♿&lt;br /&gt;
u2680: ⚀ ⚁ ⚂ ⚃ ⚄ ⚅ ⚆ ⚇ ⚈ ⚉ ⚊ ⚋ ⚌ ⚍ ⚎ ⚏ ⚐ ⚑ ⚒ ⚓ ⚔ ⚕ ⚖ ⚗ ⚘ ⚙ ⚚ ⚛ ⚜ ⚝ ⚞ ⚟&lt;br /&gt;
u26A0: ⚠ ⚡ ⚢ ⚣ ⚤ ⚥ ⚦ ⚧ ⚨ ⚩ ⚪ ⚫ ⚬ ⚭ ⚮ ⚯ ⚰ ⚱ ⚲ ⚳ ⚴ ⚵ ⚶ ⚷ ⚸ ⚹ ⚺ ⚻ ⚼ ⚽ ⚾ ⚿&lt;br /&gt;
u2700: ✀ ✁ ✂ ✃ ✄ ✅ ✆ ✇ ✈ ✉ ✊ ✋ ✌ ✍ ✎ ✏ ✐ ✑ ✒ ✓ ✔ ✕ ✖ ✗ ✘ ✙ ✚ ✛ ✜ ✝ ✞ ✟&lt;br /&gt;
u2720: ✠ ✡ ✢ ✣ ✤ ✥ ✦ ✧ ✨ ✩ ✪ ✫ ✬ ✭ ✮ ✯ ✰ ✱ ✲ ✳ ✴ ✵ ✶ ✷ ✸ ✹ ✺ ✻ ✼ ✽ ✾ ✿&lt;br /&gt;
u2740: ❀ ❁ ❂ ❃ ❄ ❅ ❆ ❇ ❈ ❉ ❊ ❋ ❌ ❍ ❎ ❏ ❐ ❑ ❒ ❓ ❔ ❕ ❖ ❗ ❘ ❙ ❚ ❛ ❜ ❝ ❞ ❟&lt;br /&gt;
u2760: ❠ ❡ ❢ ❣ ❤ ❥ ❦ ❧ ❨ ❩ ❪ ❫ ❬ ❭ ❮ ❯ ❰ ❱ ❲ ❳ ❴ ❵ ❶ ❷ ❸ ❹ ❺ ❻ ❼ ❽ ❾ ❿&lt;br /&gt;
u2780: ➀ ➁ ➂ ➃ ➄ ➅ ➆ ➇ ➈ ➉ ➊ ➋ ➌ ➍ ➎ ➏ ➐ ➑ ➒ ➓ ➔ ➕ ➖ ➗ ➘ ➙ ➚ ➛ ➜ ➝ ➞ ➟&lt;br /&gt;
u27A0: ➠ ➡ ➢ ➣ ➤ ➥ ➦ ➧ ➨ ➩ ➪ ➫ ➬ ➭ ➮ ➯ ➰ ➱ ➲ ➳ ➴ ➵ ➶ ➷ ➸ ➹ ➺ ➻ ➼ ➽ ➾ ➿&lt;br /&gt;
u27C0: ⟀ ⟁ ⟂ ⟃ ⟄ ⟅ ⟆ ⟇ ⟈ ⟉ ⟊ ⟋ ⟌ ⟍ ⟎ ⟏ ⟐ ⟑ ⟒ ⟓ ⟔ ⟕ ⟖ ⟗ ⟘ ⟙ ⟚ ⟛ ⟜ ⟝ ⟞ ⟟&lt;br /&gt;
u27E0: ⟠ ⟡ ⟢ ⟣ ⟤ ⟥ ⟦ ⟧ ⟨ ⟩ ⟪ ⟫ ⟬ ⟭ ⟮ ⟯ ⟰ ⟱ ⟲ ⟳ ⟴ ⟵ ⟶ ⟷ ⟸ ⟹ ⟺ ⟻ ⟼ ⟽ ⟾ ⟿&lt;br /&gt;
u2800: ⠀ ⠁ ⠂ ⠃ ⠄ ⠅ ⠆ ⠇ ⠈ ⠉ ⠊ ⠋ ⠌ ⠍ ⠎ ⠏ ⠐ ⠑ ⠒ ⠓ ⠔ ⠕ ⠖ ⠗ ⠘ ⠙ ⠚ ⠛ ⠜ ⠝ ⠞ ⠟&lt;br /&gt;
u2820: ⠠ ⠡ ⠢ ⠣ ⠤ ⠥ ⠦ ⠧ ⠨ ⠩ ⠪ ⠫ ⠬ ⠭ ⠮ ⠯ ⠰ ⠱ ⠲ ⠳ ⠴ ⠵ ⠶ ⠷ ⠸ ⠹ ⠺ ⠻ ⠼ ⠽ ⠾ ⠿&lt;br /&gt;
u2840: ⡀ ⡁ ⡂ ⡃ ⡄ ⡅ ⡆ ⡇ ⡈ ⡉ ⡊ ⡋ ⡌ ⡍ ⡎ ⡏ ⡐ ⡑ ⡒ ⡓ ⡔ ⡕ ⡖ ⡗ ⡘ ⡙ ⡚ ⡛ ⡜ ⡝ ⡞ ⡟&lt;br /&gt;
u2860: ⡠ ⡡ ⡢ ⡣ ⡤ ⡥ ⡦ ⡧ ⡨ ⡩ ⡪ ⡫ ⡬ ⡭ ⡮ ⡯ ⡰ ⡱ ⡲ ⡳ ⡴ ⡵ ⡶ ⡷ ⡸ ⡹ ⡺ ⡻ ⡼ ⡽ ⡾ ⡿&lt;br /&gt;
u2880: ⢀ ⢁ ⢂ ⢃ ⢄ ⢅ ⢆ ⢇ ⢈ ⢉ ⢊ ⢋ ⢌ ⢍ ⢎ ⢏ ⢐ ⢑ ⢒ ⢓ ⢔ ⢕ ⢖ ⢗ ⢘ ⢙ ⢚ ⢛ ⢜ ⢝ ⢞ ⢟&lt;br /&gt;
u28A0: ⢠ ⢡ ⢢ ⢣ ⢤ ⢥ ⢦ ⢧ ⢨ ⢩ ⢪ ⢫ ⢬ ⢭ ⢮ ⢯ ⢰ ⢱ ⢲ ⢳ ⢴ ⢵ ⢶ ⢷ ⢸ ⢹ ⢺ ⢻ ⢼ ⢽ ⢾ ⢿&lt;br /&gt;
u28C0: ⣀ ⣁ ⣂ ⣃ ⣄ ⣅ ⣆ ⣇ ⣈ ⣉ ⣊ ⣋ ⣌ ⣍ ⣎ ⣏ ⣐ ⣑ ⣒ ⣓ ⣔ ⣕ ⣖ ⣗ ⣘ ⣙ ⣚ ⣛ ⣜ ⣝ ⣞ ⣟&lt;br /&gt;
u28E0: ⣠ ⣡ ⣢ ⣣ ⣤ ⣥ ⣦ ⣧ ⣨ ⣩ ⣪ ⣫ ⣬ ⣭ ⣮ ⣯ ⣰ ⣱ ⣲ ⣳ ⣴ ⣵ ⣶ ⣷ ⣸ ⣹ ⣺ ⣻ ⣼ ⣽ ⣾ ⣿&lt;br /&gt;
u2900: ⤀ ⤁ ⤂ ⤃ ⤄ ⤅ ⤆ ⤇ ⤈ ⤉ ⤊ ⤋ ⤌ ⤍ ⤎ ⤏ ⤐ ⤑ ⤒ ⤓ ⤔ ⤕ ⤖ ⤗ ⤘ ⤙ ⤚ ⤛ ⤜ ⤝ ⤞ ⤟&lt;br /&gt;
u2920: ⤠ ⤡ ⤢ ⤣ ⤤ ⤥ ⤦ ⤧ ⤨ ⤩ ⤪ ⤫ ⤬ ⤭ ⤮ ⤯ ⤰ ⤱ ⤲ ⤳ ⤴ ⤵ ⤶ ⤷ ⤸ ⤹ ⤺ ⤻ ⤼ ⤽ ⤾ ⤿&lt;br /&gt;
u2940: ⥀ ⥁ ⥂ ⥃ ⥄ ⥅ ⥆ ⥇ ⥈ ⥉ ⥊ ⥋ ⥌ ⥍ ⥎ ⥏ ⥐ ⥑ ⥒ ⥓ ⥔ ⥕ ⥖ ⥗ ⥘ ⥙ ⥚ ⥛ ⥜ ⥝ ⥞ ⥟&lt;br /&gt;
u2960: ⥠ ⥡ ⥢ ⥣ ⥤ ⥥ ⥦ ⥧ ⥨ ⥩ ⥪ ⥫ ⥬ ⥭ ⥮ ⥯ ⥰ ⥱ ⥲ ⥳ ⥴ ⥵ ⥶ ⥷ ⥸ ⥹ ⥺ ⥻ ⥼ ⥽ ⥾ ⥿&lt;br /&gt;
u2980: ⦀ ⦁ ⦂ ⦃ ⦄ ⦅ ⦆ ⦇ ⦈ ⦉ ⦊ ⦋ ⦌ ⦍ ⦎ ⦏ ⦐ ⦑ ⦒ ⦓ ⦔ ⦕ ⦖ ⦗ ⦘ ⦙ ⦚ ⦛ ⦜ ⦝ ⦞ ⦟&lt;br /&gt;
u29A0: ⦠ ⦡ ⦢ ⦣ ⦤ ⦥ ⦦ ⦧ ⦨ ⦩ ⦪ ⦫ ⦬ ⦭ ⦮ ⦯ ⦰ ⦱ ⦲ ⦳ ⦴ ⦵ ⦶ ⦷ ⦸ ⦹ ⦺ ⦻ ⦼ ⦽ ⦾ ⦿&lt;br /&gt;
u29C0: ⧀ ⧁ ⧂ ⧃ ⧄ ⧅ ⧆ ⧇ ⧈ ⧉ ⧊ ⧋ ⧌ ⧍ ⧎ ⧏ ⧐ ⧑ ⧒ ⧓ ⧔ ⧕ ⧖ ⧗ ⧘ ⧙ ⧚ ⧛ ⧜ ⧝ ⧞ ⧟&lt;br /&gt;
u29E0: ⧠ ⧡ ⧢ ⧣ ⧤ ⧥ ⧦ ⧧ ⧨ ⧩ ⧪ ⧫ ⧬ ⧭ ⧮ ⧯ ⧰ ⧱ ⧲ ⧳ ⧴ ⧵ ⧶ ⧷ ⧸ ⧹ ⧺ ⧻ ⧼ ⧽ ⧾ ⧿&lt;br /&gt;
u2A00: ⨀ ⨁ ⨂ ⨃ ⨄ ⨅ ⨆ ⨇ ⨈ ⨉ ⨊ ⨋ ⨌ ⨍ ⨎ ⨏ ⨐ ⨑ ⨒ ⨓ ⨔ ⨕ ⨖ ⨗ ⨘ ⨙ ⨚ ⨛ ⨜ ⨝ ⨞ ⨟&lt;br /&gt;
u2A20: ⨠ ⨡ ⨢ ⨣ ⨤ ⨥ ⨦ ⨧ ⨨ ⨩ ⨪ ⨫ ⨬ ⨭ ⨮ ⨯ ⨰ ⨱ ⨲ ⨳ ⨴ ⨵ ⨶ ⨷ ⨸ ⨹ ⨺ ⨻ ⨼ ⨽ ⨾ ⨿&lt;br /&gt;
u2A40: ⩀ ⩁ ⩂ ⩃ ⩄ ⩅ ⩆ ⩇ ⩈ ⩉ ⩊ ⩋ ⩌ ⩍ ⩎ ⩏ ⩐ ⩑ ⩒ ⩓ ⩔ ⩕ ⩖ ⩗ ⩘ ⩙ ⩚ ⩛ ⩜ ⩝ ⩞ ⩟&lt;br /&gt;
u2A60: ⩠ ⩡ ⩢ ⩣ ⩤ ⩥ ⩦ ⩧ ⩨ ⩩ ⩪ ⩫ ⩬ ⩭ ⩮ ⩯ ⩰ ⩱ ⩲ ⩳ ⩴ ⩵ ⩶ ⩷ ⩸ ⩹ ⩺ ⩻ ⩼ ⩽ ⩾ ⩿&lt;br /&gt;
u2A80: ⪀ ⪁ ⪂ ⪃ ⪄ ⪅ ⪆ ⪇ ⪈ ⪉ ⪊ ⪋ ⪌ ⪍ ⪎ ⪏ ⪐ ⪑ ⪒ ⪓ ⪔ ⪕ ⪖ ⪗ ⪘ ⪙ ⪚ ⪛ ⪜ ⪝ ⪞ ⪟&lt;br /&gt;
u2AA0: ⪠ ⪡ ⪢ ⪣ ⪤ ⪥ ⪦ ⪧ ⪨ ⪩ ⪪ ⪫ ⪬ ⪭ ⪮ ⪯ ⪰ ⪱ ⪲ ⪳ ⪴ ⪵ ⪶ ⪷ ⪸ ⪹ ⪺ ⪻ ⪼ ⪽ ⪾ ⪿&lt;br /&gt;
u2AC0: ⫀ ⫁ ⫂ ⫃ ⫄ ⫅ ⫆ ⫇ ⫈ ⫉ ⫊ ⫋ ⫌ ⫍ ⫎ ⫏ ⫐ ⫑ ⫒ ⫓ ⫔ ⫕ ⫖ ⫗ ⫘ ⫙ ⫚ ⫛ ⫝̸ ⫝ ⫞ ⫟&lt;br /&gt;
u2AE0: ⫠ ⫡ ⫢ ⫣ ⫤ ⫥ ⫦ ⫧ ⫨ ⫩ ⫪ ⫫ ⫬ ⫭ ⫮ ⫯ ⫰ ⫱ ⫲ ⫳ ⫴ ⫵ ⫶ ⫷ ⫸ ⫹ ⫺ ⫻ ⫼ ⫽ ⫾ ⫿&lt;br /&gt;
u2B00: ⬀ ⬁ ⬂ ⬃ ⬄ ⬅ ⬆ ⬇ ⬈ ⬉ ⬊ ⬋ ⬌ ⬍ ⬎ ⬏ ⬐ ⬑ ⬒ ⬓ ⬔ ⬕ ⬖ ⬗ ⬘ ⬙ ⬚ ⬛ ⬜ ⬝ ⬞ ⬟&lt;br /&gt;
u2B20: ⬠ ⬡ ⬢ ⬣ ⬤ ⬥ ⬦ ⬧ ⬨ ⬩ ⬪ ⬫ ⬬ ⬭ ⬮ ⬯ ⬰ ⬱ ⬲ ⬳ ⬴ ⬵ ⬶ ⬷ ⬸ ⬹ ⬺ ⬻ ⬼ ⬽ ⬾ ⬿&lt;br /&gt;
u2C60: Ⱡ ⱡ Ɫ Ᵽ Ɽ ⱥ ⱦ Ⱨ ⱨ Ⱪ ⱪ Ⱬ ⱬ Ɑ Ɱ Ɐ Ɒ ⱱ Ⱳ ⱳ ⱴ Ⱶ ⱶ ⱷ ⱸ ⱹ ⱺ ⱻ ⱼ ⱽ Ȿ Ɀ&lt;br /&gt;
u2E80: ⺀ ⺁ ⺂ ⺃ ⺄ ⺅ ⺆ ⺇ ⺈ ⺉ ⺊ ⺋ ⺌ ⺍ ⺎ ⺏ ⺐ ⺑ ⺒ ⺓ ⺔ ⺕ ⺖ ⺗ ⺘ ⺙ ⺚ ⺛ ⺜ ⺝ ⺞ ⺟&lt;br /&gt;
u2EA0: ⺠ ⺡ ⺢ ⺣ ⺤ ⺥ ⺦ ⺧ ⺨ ⺩ ⺪ ⺫ ⺬ ⺭ ⺮ ⺯ ⺰ ⺱ ⺲ ⺳ ⺴ ⺵ ⺶ ⺷ ⺸ ⺹ ⺺ ⺻ ⺼ ⺽ ⺾ ⺿&lt;br /&gt;
u2EC0: ⻀ ⻁ ⻂ ⻃ ⻄ ⻅ ⻆ ⻇ ⻈ ⻉ ⻊ ⻋ ⻌ ⻍ ⻎ ⻏ ⻐ ⻑ ⻒ ⻓ ⻔ ⻕ ⻖ ⻗ ⻘ ⻙ ⻚ ⻛ ⻜ ⻝ ⻞ ⻟&lt;br /&gt;
u2EE0: ⻠ ⻡ ⻢ ⻣ ⻤ ⻥ ⻦ ⻧ ⻨ ⻩ ⻪ ⻫ ⻬ ⻭ ⻮ ⻯ ⻰ ⻱ ⻲ ⻳ ⻴ ⻵ ⻶ ⻷ ⻸ ⻹ ⻺ ⻻ ⻼ ⻽ ⻾ ⻿&lt;br /&gt;
u2F00: ⼀ ⼁ ⼂ ⼃ ⼄ ⼅ ⼆ ⼇ ⼈ ⼉ ⼊ ⼋ ⼌ ⼍ ⼎ ⼏ ⼐ ⼑ ⼒ ⼓ ⼔ ⼕ ⼖ ⼗ ⼘ ⼙ ⼚ ⼛ ⼜ ⼝ ⼞ ⼟&lt;br /&gt;
u2F20: ⼠ ⼡ ⼢ ⼣ ⼤ ⼥ ⼦ ⼧ ⼨ ⼩ ⼪ ⼫ ⼬ ⼭ ⼮ ⼯ ⼰ ⼱ ⼲ ⼳ ⼴ ⼵ ⼶ ⼷ ⼸ ⼹ ⼺ ⼻ ⼼ ⼽ ⼾ ⼿&lt;br /&gt;
u2F40: ⽀ ⽁ ⽂ ⽃ ⽄ ⽅ ⽆ ⽇ ⽈ ⽉ ⽊ ⽋ ⽌ ⽍ ⽎ ⽏ ⽐ ⽑ ⽒ ⽓ ⽔ ⽕ ⽖ ⽗ ⽘ ⽙ ⽚ ⽛ ⽜ ⽝ ⽞ ⽟&lt;br /&gt;
u3040: ぀ ぁ あ ぃ い ぅ う ぇ え ぉ お か が き ぎ く ぐ け げ こ ご さ ざ し じ す ず せ ぜ そ ぞ た&lt;br /&gt;
u3060: だ ち ぢ っ つ づ て で と ど な に ぬ ね の は ば ぱ ひ び ぴ ふ ぶ ぷ へ べ ぺ ほ ぼ ぽ ま み&lt;br /&gt;
u3360: ㍠ ㍡ ㍢ ㍣ ㍤ ㍥ ㍦ ㍧ ㍨ ㍩ ㍪ ㍫ ㍬ ㍭ ㍮ ㍯ ㍰ ㍱ ㍲ ㍳ ㍴ ㍵ ㍶ ㍷ ㍸ ㍹ ㍺ ㍻ ㍼ ㍽ ㍾ ㍿&lt;br /&gt;
u3380: ㎀ ㎁ ㎂ ㎃ ㎄ ㎅ ㎆ ㎇ ㎈ ㎉ ㎊ ㎋ ㎌ ㎍ ㎎ ㎏ ㎐ ㎑ ㎒ ㎓ ㎔ ㎕ ㎖ ㎗ ㎘ ㎙ ㎚ ㎛ ㎜ ㎝ ㎞ ㎟&lt;br /&gt;
u33A0: ㎠ ㎡ ㎢ ㎣ ㎤ ㎥ ㎦ ㎧ ㎨ ㎩ ㎪ ㎫ ㎬ ㎭ ㎮ ㎯ ㎰ ㎱ ㎲ ㎳ ㎴ ㎵ ㎶ ㎷ ㎸ ㎹ ㎺ ㎻ ㎼ ㎽ ㎾ ㎿&lt;br /&gt;
u33C0: ㏀ ㏁ ㏂ ㏃ ㏄ ㏅ ㏆ ㏇ ㏈ ㏉ ㏊ ㏋ ㏌ ㏍ ㏎ ㏏ ㏐ ㏑ ㏒ ㏓ ㏔ ㏕ ㏖ ㏗ ㏘ ㏙ ㏚ ㏛ ㏜ ㏝ ㏞ ㏟&lt;br /&gt;
u50C0: 僀 僁 僂 僃 僄 僅 僆 僇 僈 僉 僊 僋 僌 働 僎 像 僐 僑 僒 僓 僔 僕 僖 僗 僘 僙 僚 僛 僜 僝 僞 僟&lt;br /&gt;
u50E0: 僠 僡 僢 僣 僤 僥 僦 僧 僨 僩 僪 僫 僬 僭 僮 僯 僰 僱 僲 僳 僴 僵 僶 僷 僸 價 僺 僻 僼 僽 僾 僿&lt;br /&gt;
uA9E0: ꧠ ꧡ ꧢ ꧣ ꧤ ꧥ ꧦ ꧧ ꧨ ꧩ ꧪ ꧫ ꧬ ꧭ ꧮ ꧯ ꧰ ꧱ ꧲ ꧳ ꧴ ꧵ ꧶ ꧷ ꧸ ꧹ ꧺ ꧻ ꧼ ꧽ ꧾ ꧿&lt;br /&gt;
uAC00: 가 각 갂 갃 간 갅 갆 갇 갈 갉 갊 갋 갌 갍 갎 갏 감 갑 값 갓 갔 강 갖 갗 갘 같 갚 갛 개 객 갞 갟&lt;br /&gt;
uAC20: 갠 갡 갢 갣 갤 갥 갦 갧 갨 갩 갪 갫 갬 갭 갮 갯 갰 갱 갲 갳 갴 갵 갶 갷 갸 갹 갺 갻 갼 갽 갾 갿&lt;br /&gt;
uE220:                                &lt;br /&gt;
uE240:                                &lt;br /&gt;
uEA00:                                &lt;br /&gt;
uEA20:                                &lt;br /&gt;
uEDA0:                                &lt;br /&gt;
uEE20:                                &lt;br /&gt;
uEE60:                                &lt;br /&gt;
uFB00: ﬀ ﬁ ﬂ ﬃ ﬄ ﬅ ﬆ ﬇ ﬈ ﬉ ﬊ ﬋ ﬌ ﬍ ﬎ ﬏ ﬐ ﬑ ﬒ ﬓ ﬔ ﬕ ﬖ ﬗ ﬘ ﬙ ﬚ ﬛ ﬜ יִ ﬞ ײַ&lt;br /&gt;
uFB20: ﬠ ﬡ ﬢ ﬣ ﬤ ﬥ ﬦ ﬧ ﬨ ﬩ שׁ שׂ שּׁ שּׂ אַ אָ אּ בּ גּ דּ הּ וּ זּ ﬷ טּ יּ ךּ כּ לּ ﬽ מּ ﬿&lt;br /&gt;
uFFE0: ￠ ￡ ￢ ￣ ￤ ￥ ￦ ￧ ￨ ￩ ￪ ￫ ￬ ￭ ￮ ￯ ￰ ￱ ￲ ￳ ￴ ￵ ￶ ￷ ￸ ￹ ￺ ￻ ￼ � ￾ ￿&lt;br /&gt;
u1D300: 𝌀 𝌁 𝌂 𝌃 𝌄 𝌅 𝌆 𝌇 𝌈 𝌉 𝌊 𝌋 𝌌 𝌍 𝌎 𝌏 𝌐 𝌑 𝌒 𝌓 𝌔 𝌕 𝌖 𝌗 𝌘 𝌙 𝌚 𝌛 𝌜 𝌝 𝌞 𝌟&lt;br /&gt;
u1D520: 𝔠 𝔡 𝔢 𝔣 𝔤 𝔥 𝔦 𝔧 𝔨 𝔩 𝔪 𝔫 𝔬 𝔭 𝔮 𝔯 𝔰 𝔱 𝔲 𝔳 𝔴 𝔵 𝔶 𝔷 𝔸 𝔹 𝔺 𝔻 𝔼 𝔽 𝔾 𝔿&lt;br /&gt;
u1D540: 𝕀 𝕁 𝕂 𝕃 𝕄 𝕅 𝕆 𝕇 𝕈 𝕉 𝕊 𝕋 𝕌 𝕍 𝕎 𝕏 𝕐 𝕑 𝕒 𝕓 𝕔 𝕕 𝕖 𝕗 𝕘 𝕙 𝕚 𝕛 𝕜 𝕝 𝕞 𝕟&lt;br /&gt;
u1D560: 𝕠 𝕡 𝕢 𝕣 𝕤 𝕥 𝕦 𝕧 𝕨 𝕩 𝕪 𝕫 𝕬 𝕭 𝕮 𝕯 𝕰 𝕱 𝕲 𝕳 𝕴 𝕵 𝕶 𝕷 𝕸 𝕹 𝕺 𝕻 𝕼 𝕽 𝕾 𝕿&lt;br /&gt;
u26900: 𦤀 𦤁 𦤂 𦤃 𦤄 𦤅 𦤆 𦤇 𦤈 𦤉 𦤊 𦤋 𦤌 𦤍 𦤎 𦤏 𦤐 𦤑 𦤒 𦤓 𦤔 𦤕 𦤖 𦤗 𦤘 𦤙 𦤚 𦤛 𦤜 𦤝 𦤞 𦤟&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
