<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Recent Content on RoboTamer </title>
    <link>http://www.robotamer.com/index.xml</link>
    <language>en-us</language>
    <author>Dennis T Kaplan</author>
    <rights>Copyright (c) 2008 - 2013, Dennis T Kaplan; all rights reserved.</rights>
    <updated>0001-01-01 00:00:00 &#43;0000 UTC</updated>
    
    <item>
      <title>Self-Signed SSL Certificate with Config File</title>
      <link>http://www.robotamer.com/linux/openssl/ca-cert-cfg.html</link>
      <pubDate>Thu, 05 Dec 2013 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/openssl/ca-cert-cfg.html</guid>
      <description>&lt;p&gt;I automated this as much as I could.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Edit DOMAIN name in the ca.cfg&lt;/li&gt;
&lt;li&gt;Run the openssl command&lt;/li&gt;
&lt;li&gt;chmod the key file&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Code to execute:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;DOMAIN=robotamer.com  
openssl req -new -x509 -nodes -out $DOMAIN_.crt -config ca.cfg
chmod 600 DOMAIN_.key
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;TODO:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Still have to figure out how to get the global &lt;code&gt;DOMAIN&lt;/code&gt; var in to the config file.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Sample Config File:&lt;/h4&gt;

&lt;p&gt;Save as &lt;code&gt;ca.cfg&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;
# Specify the domain
DOMAIN = robotamer.com

#####################################################

[ ca ]
default_ca              = CA_default


[ CA_default ]
DIR                     = .
serial                  = ${DIR}/serial
database                = ${DIR}/index.txt
new_certs_dir           = ${DIR}/newcerts
certs                   = ${DIR}/certs
certificate             = $certs/cacert.pem
private_key             = ${DIR}/private/cakey.pem
default_days            = 3650
default_md              = sha1
preserve                = no
email_in_dn             = no
nameopt                 = default_ca
certopt                 = default_ca
policy                  = policy_match
copy_extensions         = copy


[ policy_match ]
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional


[ req ]
default_bits            = 2048                  # Size of keys
default_keyfile         = ${DOMAIN}_.key        # name of generated keys
default_md              = sha1                  # message digest algorithm
string_mask             = nombstr               # permitted characters
distinguished_name      = req_distinguished_name
req_extensions          = v3_req
x509_extensions         = v3_req


[ req_distinguished_name ]
# Variable name           Prompt string
#----------------------   ----------------------------------
0.organizationName      = Organization Name (company)
organizationalUnitName  = Organizational Unit Name (department, division)
emailAddress            = Email Address
emailAddress_max        = 40
localityName            = Locality Name (city, district)
stateOrProvinceName     = State or Province Name (full name)
countryName             = Country Name (2 letter code)
countryName_min         = 2
countryName_max         = 2
commonName              = Common Name (hostname, IP, or your name)
commonName_max          = 64

# Default values.
#------------------------------   ------------------------------
commonName_default              = *.${DOMAIN}
0.organizationName_default      = ${DOMAIN}
organizationalUnitName_default  = IT
localityName_default            = Los Angeles
stateOrProvinceName_default     = California
countryName_default             = US
emailAddress_default            = webmaster@${DOMAIN}

[alt_names]
DNS.1     = www.${DOMAIN}
DNS.2     = ${DOMAIN}
# DNS.3   = www.example.com
# DNS.4   = example.com


[ v3_ca ]
basicConstraints        = CA:TRUE
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always,issuer:always


[ v3_req ]
# Extensions to add to a certificate request
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment


# Some CAs do not yet support subjectAltName in CSRs.
# Instead the additional names are form entries on web
# pages where one requests the certificate...
subjectAltName          = @alt_names


[ server ]
# Make a cert with nsCertType set to &amp;quot;server&amp;quot;
basicConstraints=CA:FALSE
nsCertType                      = server
nsComment                       = &amp;quot;OpenSSL Generated Server Certificate&amp;quot;
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer:always


[ client ]
# Make a cert with nsCertType set to &amp;quot;client&amp;quot;
basicConstraints=CA:FALSE
nsCertType                      = client
nsComment                       = &amp;quot;OpenSSL Generated Client Certificate&amp;quot;
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer:always


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Self-Signed SSL Certificate</title>
      <link>http://www.robotamer.com/linux/openssl/ca-cert.html</link>
      <pubDate>Wed, 04 Dec 2013 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/openssl/ca-cert.html</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: This is a slighltly modified reprint from &lt;a href=&#34;http://www.akadia.com&#34;&gt;http://www.akadia.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Overview&lt;/h3&gt;

&lt;p&gt;The following is an extremely simplified view of how SSL is implemented and what part the certificate plays in the entire process.&lt;/p&gt;

&lt;p&gt;Normal web traffic is sent unencrypted over the Internet. That is, anyone with access to the right tools can snoop all of that traffic. Obviously, this can lead to problems, especially where security and privacy is necessary, such as in credit card data and bank transactions. The Secure Socket Layer is used to encrypt the data stream between the web server and the web client (the browser).&lt;/p&gt;

&lt;p&gt;SSL makes use of what is known as asymmetric cryptography, commonly referred to as public key cryptography (PKI). With public key cryptography, two keys are created, one public, one private. Anything encrypted with either key can only be decrypted with its corresponding key. Thus if a message or data stream were encrypted with the server&amp;rsquo;s private key, it can be decrypted only using its corresponding public key, ensuring that the data only could have come from the server.&lt;/p&gt;

&lt;p&gt;If SSL utilizes public key cryptography to encrypt the data stream traveling over the Internet, why is a certificate necessary? The technical answer to that question is that a certificate is not really necessary - the data is secure and cannot easily be decrypted by a third party. However, certificates do serve a crucial role in the communication process. The certificate, signed by a trusted Certificate Authority (CA), ensures that the certificate holder is really who he claims to be. Without a trusted signed certificate, your data may be encrypted, however, the party you are communicating with may not be whom you think. Without certificates, impersonation attacks would be much more common.&lt;/p&gt;

&lt;h4&gt;Step 1: Generate a Private Key&lt;/h4&gt;

&lt;p&gt;The openssl toolkit is used to generate an RSA Private Key and CSR (Certificate Signing Request). It can also be used to generate self-signed certificates which can be used for testing purposes or internal usage.&lt;/p&gt;

&lt;p&gt;The first step is to create your RSA Private Key. This key is a 1024 bit RSA key which is encrypted
using Triple-DES and stored in a PEM format so that it is readable as ASCII text.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl genrsa -des3 -out server.key 1024

Generating RSA private key, 1024 bit long modulus
.........................................................++++++
........++++++
e is 65537 (0x10001)
Enter PEM pass phrase:
Verifying password - Enter PEM pass phrase:
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Step 2: Generate a CSR (Certificate Signing Request)&lt;/h4&gt;

&lt;p&gt;Once the private key is generated a Certificate Signing Request can be generated. The CSR is then used in one of two ways. Ideally, the CSR will be sent to a Certificate Authority, such as Thawte or Verisign who will verify the identity of the requestor and issue a signed certificate. The second option is to self-sign the CSR, which will be demonstrated in the next section.&lt;/p&gt;

&lt;p&gt;During the generation of the CSR, you will be prompted for several pieces of information. These are the X.509 attributes of the certificate. One of the prompts will be for &amp;ldquo;Common Name (e.g., YOUR name)&amp;rdquo;. It is important that this field be filled in with the fully qualified domain name of the server to be protected by SSL. If the website to be protected will be &lt;a href=&#34;https://public.akadia.com&#34;&gt;https://public.akadia.com&lt;/a&gt;, then enter public.akadia.com at this prompt. The command to generate the CSR is as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl req -new -key server.key -out server.csr

Country Name (2 letter code) [GB]:CH
State or Province Name (full name) [Berkshire]:Bern
Locality Name (eg, city) [Newbury]:Oberdiessbach
Organization Name (eg, company) [My Company Ltd]:Akadia AG
Organizational Unit Name (eg, section) []:Information Technology
Common Name (eg, your name or your server&#39;s hostname) []:public.akadia.com
Email Address []:martin dot zahn at akadia dot ch
Please enter the following &#39;extra&#39; attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Step 3: Remove Passphrase from Key&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;One unfortunate side-effect of the pass-phrased private key is that Apache will ask for the pass-phrase each time the web server is started. Obviously this is not necessarily convenient as someone will not always be around to type in the pass-phrase, such as after a reboot or crash. mod_ssl includes the ability to use an external program in place of the built-in pass-phrase dialog, however, this is not necessarily the most secure option either. It is possible to remove the Triple-DES encryption from the key, thereby no longer needing to type in a pass-phrase. If the private key is no longer encrypted, it is critical that this file only be readable by the root user! If your system is ever compromised and a third party obtains your unencrypted private key, the corresponding certificate will need to be revoked. With that being said, use the following command to remove the pass-phrase from the key:

cp server.key server.key.org
openssl rsa -in server.key.org -out server.key
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The newly created server.key file has no more passphrase in it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-rw-r--r-- 1 root root 745 Jun 29 12:19 server.csr
-rw-r--r-- 1 root root 891 Jun 29 13:22 server.key
-rw-r--r-- 1 root root 963 Jun 29 13:22 server.key.org
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Step 4: Generating a Self-Signed Certificate&lt;/h4&gt;

&lt;p&gt;At this point you will need to generate a self-signed certificate because you either don&amp;rsquo;t plan on having your certificate signed by a CA, or you wish to test your new SSL implementation while the CA is signing your certificate. This temporary certificate will generate an error in the client browser to the effect that the signing certificate authority is unknown and not trusted.&lt;/p&gt;

&lt;h5&gt;To generate a temporary certificate which is good for 365 days, issue the following command:&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt

Signature ok
subject=/C=CH/ST=Bern/L=Oberdiessbach/O=Akadia AG/OU=Information
Technology/CN=public.akadia.com/Email=martin dot zahn at akadia dot ch
Getting Private key
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Step 5: Secure the Private Key&lt;/h4&gt;

&lt;p&gt;This will insure that only the current user/you can read, and write to this file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod 600 server.key
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Step 6: Installing the Private Key and Certificate&lt;/h4&gt;

&lt;p&gt;When Apache with mod_ssl is installed, it creates several directories in the Apache config directory. The location of this directory will differ depending on how Apache was compiled.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp server.crt /usr/local/apache/conf/ssl.crt
cp server.key /usr/local/apache/conf/ssl.key
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Step 7: Configuring SSL Enabled Virtual Hosts&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;SSLEngine on
SSLCertificateFile /usr/local/apache/conf/ssl.crt/server.crt
SSLCertificateKeyFile /usr/local/apache/conf/ssl.key/server.key
SetEnvIf User-Agent &amp;quot;.*MSIE.*&amp;quot; nokeepalive ssl-unclean-shutdown
CustomLog logs/ssl_request_log \
   &amp;quot;%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \&amp;quot;%r\&amp;quot; %b&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Step 8: Restart Apache and Test&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/httpd stop
/etc/init.d/httpd stop
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Log Rotate</title>
      <link>http://www.robotamer.com/linux/logrotate.html</link>
      <pubDate>Mon, 02 Dec 2013 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/logrotate.html</guid>
      <description>&lt;p&gt;Simple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change the MAXSIZE &amp;amp; LOGDIR&lt;/li&gt;
&lt;li&gt;Add a cron job&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cron job weekly at 5am&lt;br /&gt;
crontab: &lt;code&gt;0 5 * * 1 /var/www/log/logrotate.sh&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;
#!/bin/bash

MAXSIZE=1024
LOGDIR=/var/www/log/

if [[ $EUID -ne 0 ]]; then
   echo &amp;quot;This script must be run as root&amp;quot; 1&amp;gt;&amp;amp;2
   exit 1
fi

cd $LOGDIR

for FILENAME in *.log; do
        SIZE=$(du -b $FILENAME | cut -f 1)
        if(($SIZE&amp;gt;$MAXSIZE)); then
                TIMESTAMP=`date +%Y%m%d`
                NEWFILENAME=$FILENAME.$TIMESTAMP
                mv $FILENAME $NEWFILENAME
                touch $FILENAME
                chown www-data.tamer $FILENAME
                gzip -f -9 $NEWFILENAME
                chown tamer.www-data $NEWFILENAME.gz
        fi
done

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>﻿Hugo, a static website generator</title>
      <link>http://www.robotamer.com/blog/hugo.html</link>
      <pubDate>Sun, 01 Dec 2013 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/hugo.html</guid>
      <description>&lt;p&gt;Just a couple of days ago I posted about jkl, a static website generator written in Go, and based on Jekyll.&lt;/p&gt;

&lt;p&gt;While setting up jkl, I stumbled over Hugo! I was impressed at first site with Hugo.
Since then I have reconfigured my site to work with Hugo.
I didn&amp;rsquo;t have to fiddle with the Hugo code, everything just works, and it really does most everything that comes to mind.
This whole website thing has been bothering me for a long time; and finally I am a happy camper.&lt;/p&gt;

&lt;p&gt;There are a few thinks I still have to setup, like the indexes are done but the links don&amp;rsquo;t seam to work as expected, or I am doing something wrong. However this is minor considering that I am glad that Hugo even has a link and menu generating system.&lt;/p&gt;

&lt;p&gt;Also the rss feeds needs some work, but again Hugo has that build in, I just have to set it up right.&lt;/p&gt;

&lt;p&gt;Hugo&amp;rsquo;s front matter can be defined with YAML, TOML, or JSON. Which one you like is up to you, you can even use a
different one on each page.
Here is the TOML for this page:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
linktitle = &amp;quot;Huge&amp;quot;
title = &amp;quot;﻿Hugo, a static website generator&amp;quot;
description = &amp;quot;Hugo is a static website generator written in the Go programing language&amp;quot;
keywords = [&amp;quot;code&amp;quot;,&amp;quot;go&amp;quot;, &amp;quot;golang&amp;quot;, &amp;quot;website&amp;quot;,&amp;quot;static&amp;quot;,&amp;quot;generator&amp;quot;]
tags = [&amp;quot;code&amp;quot;,&amp;quot;go&amp;quot;,&amp;quot;website&amp;quot;]
groups = [&amp;quot;blog&amp;quot;]
language = &amp;quot;en&amp;quot;
date = &amp;quot;2013-12-01&amp;quot;
+++
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;In short, I can highlly recommend &lt;a href=&#34;http://github.com/spf13/hugo&#34;&gt;Hugo&lt;/a&gt; to any coder!&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Go jkl</title>
      <link>http://www.robotamer.com/blog/2013-11-27-go_jkl.html</link>
      <pubDate>Wed, 27 Nov 2013 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2013-11-27-go_jkl.html</guid>
      <description>&lt;p&gt;I just dumped my home made php script md2html and switched to &lt;a href=&#34;https://github.com/gotamer/jkl&#34;&gt;jkl&lt;/a&gt;.&lt;br /&gt;
This is basiclly my test post!&lt;br /&gt;
jkl is a static site generator written in Go, based on Jekyll.&lt;/p&gt;

&lt;p&gt;All I had to do was convert my template to &lt;a href=&#34;http://www.golang.org&#34;&gt;Go&lt;/a&gt; tempates, and add the YAML
front matter to my markdown files.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jkl is by far faster then md2html&lt;/li&gt;
&lt;li&gt;provides a build in server&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;http://www.golang.org&#34;&gt;Go&lt;/a&gt; templates are a bid easier to work with.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I still have to figure out a way to deploy my site, since &lt;a href=&#34;https://github.com/gotamer/jkl&#34;&gt;jkl&lt;/a&gt; only provides S3, but that shouldn&amp;rsquo;t be to hard; meanwhile rsync will do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>﻿Türkiye’de garip şeyler oluyor …</title>
      <link>http://www.robotamer.com/blog/turkiyede_garip_seyler_oluyor.html</link>
      <pubDate>Wed, 20 Nov 2013 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/turkiyede_garip_seyler_oluyor.html</guid>
      <description>&lt;p&gt;Türkiye’de garip şeyler oluyor ve burada yaşayan insanlar artık alışmış katlanıyorlar.&lt;br /&gt;
Bir bakmışsın kanunlar değişiyor, yatınızı vergi ödemeden ithal edebiliyorsunuz. Ama yatının zaten sahibi olmanız gerekiyor, yani yatınız yabancı bayrak altında sizin ise Türkiye’ye sıfır vergiyle ithal edebiliyorsunuz. Bu kanun kısa süreli geçerli oluyor yararlandınız yararlandınız.&lt;br /&gt;
Bu kanunun anamı ve sebebini kimse sorgulamıyor, haberi olan faydalanıyor diğerleri, evet diğerleri haksızlığa uğruyor ama kimse şikâyetçi olmuyor.&lt;/p&gt;

&lt;p&gt;Bu konuda haksızlına uğramış olan insanların sayısı az, bunlar bir araya gelip de derdini anlatamıyorlar, dinleyen olmuyor zaten. Ama bunun gibi bir sürü garip şeyler oluyor Türkiye&amp;rsquo;de O yüzden herkes sürekli bir şekilde haksızlığa uğruyor, ama kimsenin sesi çıkmıyor.&lt;br /&gt;
Düşünüyorum Türkler ecelden beri Kurtları sever, kurtlarla kıyaslanmak isterler, fakat günlük hayata anca koyun gibi yaşıyorlar.&lt;br /&gt;
Bunun üzerine gecen gün balkonda izlediğim bir olay geldi aklıma.&lt;br /&gt;
Biri karşıdan karşıya geçerken araba geldi kornaya bastı, adamın ödü patladı ve koştu. Eğer öbür taraftan da araba gelseydi kesin kaza olurdu. Ama bir ilginç şey daha, kornaya basan arabanın şoförü bütün bu sırada az bile olsun ayanı gazdan çekmeden devam etti yoluna.&lt;br /&gt;
Çok saygısızız birbirimize, direksiyon arkasında ancak kurt kesiliyoruz. Bu arada yönetimin her bir şeyine katlanıyor, hata o kadar alışmışız ki fark bile etmiyoruz olanları.&lt;br /&gt;
Saygı demiştim, yerine gelince olmayacak insanların elini ayaklarını öpüyoruz, aman büyüklerimiz, babamız, dedemiz, annemiz diye gösteriş yaparcasına saygı gösteriyoruz. Otobüste kalkıp yaşlılara utancımızdan, aman laf gelmesin diye yer veriyoruz. Ama gerçek yüzümüzü, yani bu sistem bizi ne hale getirdiğini toplu halde vapurdan inip binerken göre bilirsiniz, sıra numarası vermedikleri yerlerdeki davranışlarımızdan göre bilirsiniz.&lt;/p&gt;

&lt;p&gt;Atatürk bizim bu halimizi görse &lt;strong&gt;&amp;ldquo;Ne mutlu Türküm diyene&amp;rdquo;&lt;/strong&gt; lafını kesin geri alırdı, eminim.&lt;/p&gt;

&lt;p&gt;Dünyayı sayılarımızdan dolayı sömürüyoruz, resmen boğuyoruz. Ve bizim başbakan emeklilik sistemimizi koruya bilmek için hala 3 çocuk diye tutturuyor.&lt;br /&gt;
İstanbul’daki insan sayısını düşürüp insanlarımızın Türkiye’nin dört bir yanında eşit yaşamasını sağlayacağına üçünü bir köprü yaparak İstanbulun daha da büyümesini planlıyor bizim başkan.&lt;br /&gt;
Boğazlarımızdaki doğal su akıntısını kullanarak temiz sürdürülebilir enerji üreteceğine, Aliağa termik santral, yani yurt dışından ithal edilecek kömür yakmayı planlıyor.&lt;br /&gt;
Eğer karşınızdaki takım elbise giyiyorsa kesin emin olunki bu sabah evden çıkarken güvenilir birine benzedim mi diye aynaya bir bakmıştır. Yani bir sigortacı ile bir politikacıya hiç ve hiç güvenemessınız. Bundan sonraki de bunun gibi olacak, problem insanlar değil, problem sistem. Bu sistem çökmeden de yeni bir sistem gelemeyeceğine göre. Tek yapa bileceğimiz, sistemi desteklememek yani mümkün olduğu kadar sistem dışında yaşamak.&lt;br /&gt;
Sistem dışında nasıl yaşanır?
Sistem dışında yaşamanın değişik boyutları var.&lt;br /&gt;
Tamamıyla sistemin dışına çıkmak oldukça zor. Dağ başında veya acık denize bile atsanız kendinizi sistemden az da olsa zaman, zaman etkileneceksiniz.&lt;br /&gt;
En basitinde kredi kartları kullanmamak, mümkün olduğunca az banka kullanmak, varlıklarınızı para olarak tutmamak. İhtiyacınızın dışındaki varlıklarınızı Altın, Gümüş gibi değerli madenlere yatırmak. Büyük şirketlerden alış veriş yapmamak.&lt;br /&gt;
Bazen insanlara bunları söylediğim zaman, elimizden ne gelir, çocuklarımızın geleceği için katlanıyoruz gibi şeyler duyuyorum.&lt;br /&gt;
Ne yazık ki çocuklarınızı düşünürken çocuklarınızı bu sistemin bir parçası yapıyorsunuz. Okullarda bu sistemin bir parçası olarak yetiştiriliyorlar. Onları düşünüyorsunuz ama aynı zamanda onları kurban ediyorsunuz. İnsani en çok yöneten duygu korku imiş. Korkunuzu bir kenera bırakıp sevgi ile hareket etseniz. Çocuklarınızı bu yönetimin eğitim sistemine kurban olarak yollamasınız.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>﻿Eş cinsel insanların evlenme haki</title>
      <link>http://www.robotamer.com/blog/2013-08-20-es_cinsellerin_evlenmesi.html</link>
      <pubDate>Wed, 20 Nov 2013 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2013-08-20-es_cinsellerin_evlenmesi.html</guid>
      <description>&lt;p&gt;Dünyanın pek çok yerinde eş cinsel insanların evlenme konuşu uzun süredir gündeme girip çıkıyor.
Bu Türkiye için henüz uzak bir konu olmasına rağmen, eh şu anda 20.08.2013 04:31 internetim yok, okumak için bir düzgün kitabim da olmadığı için ben yazmaya karar verdim ve ne yapayım akıla gelen konu da bu oldu.&lt;/p&gt;

&lt;p&gt;Bu konuya insanların çeşitly tepkileri oluyor, kimisi yüzünü ekşitiyor, başkası dini sebeplerden dolayı tepki gösteriyor.
Fakat eş cinseller gayet mantıklı nedenler de ortaya sürüyor.
Bizde vergi ödeyenler olarak, vergi indirimlerden faydalanabilmeliyiz, hastalık ve ölümlü dünyada haklarımızı kanuni yolardan savuna bilmeliyiz gibi.&lt;/p&gt;

&lt;p&gt;Ben insanların başka varlıklara zarar vermedikleri sürece istedikleri gibi hayatlarını sürdüre bilmelerini gerektiğini inanan biri olarak. Hata bu kural her ülkenin ana yasasında olması gerektiğini düşünen biri olarak.&lt;br /&gt;
Kim kimi sevmiş, yatak odalarında kim ne yapıyor gibi konular değil hukuk, dedi kodu konusu bile olmamalı bence. Fakat evlenme konusuna gelince, eş cinselleri desteklemiyorum, evet doğru duydunuz desteklemiyorum.&lt;br /&gt;
Çünkü eğer ki iki erkek veya iki kadın kanuni evli olarak kabul edilirse o zaman otomatikman çocuk evlat etme hakkına da kavuşmuş oluyorlar. Vergi indirimlerinden yararlansınlar tabiî ki ama bir daha eş cinsel olup olmadığı beli olmayan bir bebeğin hayatını bu kadar derin bir şekilde etkilemeye hakları olmamaları gerektiğini düşünüyorum. Özellikle ergenlik cağına gelen gençlerin hayatları zaten zor. Okulda ve arkadaş çevresine birde böyle bir etken eklememesi çocuğun zihni sağlına zararlı olacağını, veya en azından zararlı olma ihtimali yüksek olduğunu düşünüyorum.&lt;br /&gt;
Bugün dünyanın birçok yerinde, eş cinseller evlene biliyor. ABD kanunlar buna izin vermediği halde, San Francisco belediyesi izin veriyor. Yeni Zeylanda da, deniz ve uçak kaptanları evlendiriyor.&lt;br /&gt;
Bence bu konunun böyle aheste gelişmesine izin vermemek lazım. Basit bir şekilde onlara vergi indirim gibi hakları vermek lazım ki biran önce bu konu kapansın ve gündemden kalksın.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Read Folder</title>
      <link>http://www.robotamer.com/code/php/read-folder.html</link>
      <pubDate>Fri, 13 Jul 2012 20:45:12 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/read-folder.html</guid>
      <description>&lt;p&gt;This is a &lt;em&gt;Lambda&lt;/em&gt; function also called anonymous function within a regular function that scans a given directory and it&amp;rsquo;s sub directories returning an array of all php files within.&lt;/p&gt;

&lt;p&gt;Following is a snip output of the Zend files.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[6] =&amp;gt; /usr/share/php/Zend/Captcha/ReCaptcha.php
[7] =&amp;gt; /usr/share/php/Zend/Captcha/Base.php
[8] =&amp;gt; /usr/share/php/Zend/Feed/Rss.php
[9] =&amp;gt; /usr/share/php/Zend/Feed/Atom.php
[52] =&amp;gt; /usr/share/php/Zend/Feed/Writer/Source.php
[53] =&amp;gt; /usr/share/php/Zend/Feed/Pubsubhubbub.php
[54] =&amp;gt; /usr/share/php/Zend/Feed/Element.php
[55] =&amp;gt; /usr/share/php/Zend/Feed/Reader/Feed/Rss.php
[90] =&amp;gt; /usr/share/php/Zend/Feed/Builder.php
[91] =&amp;gt; /usr/share/php/Zend/Feed/Writer.php
[92] =&amp;gt; /usr/share/php/Zend/Config.php
[93] =&amp;gt; /usr/share/php/Zend/Json/Server.php
[94] =&amp;gt; /usr/share/php/Zend/Json/Exception.php
[95] =&amp;gt; /usr/share/php/Zend/Json/Encoder.php
[865] =&amp;gt; /usr/share/php/Zend/View/Stream.php
[866] =&amp;gt; /usr/share/php/Zend/View/Interface.php
[867] =&amp;gt; /usr/share/php/Zend/View/Abstract.php
[868] =&amp;gt; /usr/share/php/Zend/Search/Exception.php
[869] =&amp;gt; /usr/share/php/Zend/Search/Lucene.php
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php

/**
 *
 * @param string $dir
 * @return array 
 */
function get_php_files_in_dir($dir)
{
    $bin = array ();
    $run = function(&amp;amp;$run, $dir, &amp;amp;$bin) {
        if ($handle = opendir($dir)) {
            while (false !== ($file = readdir($handle))) {
                if ($file != &amp;quot;.&amp;quot; &amp;amp;&amp;amp; $file != &amp;quot;..&amp;quot;) {
                    if (strpos($file, &#39;.php&#39;) &amp;gt; 0) {
                        $bin[] = $dir . &#39;/&#39; . $file;
                    } elseif (is_dir($dir . &#39;/&#39; . $file)) {
                        $run($run, $dir . &#39;/&#39; . $file, $bin);
                    }
                }
            }
        }
        closedir($handle);
    };
    $run($run, $dir, $bin);
    return $bin;
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/robotamer/3107221#file-get_php_files_in_dir-php&#34;&gt;gist id=3107221&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Autoload</title>
      <link>http://www.robotamer.com/code/php/autoload.html</link>
      <pubDate>Sun, 01 Jul 2012 07:37:41 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/autoload.html</guid>
      <description>&lt;p&gt;I have been looking around for some good examples to use the new PHP autoloader interoperability standard according to the PHP Standards Recommendation #0 (PSR-0).&lt;/p&gt;

&lt;p&gt;And since I could find anything good, I had to figure it out by my self, here is the result.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/robotamer/3027247&#34;&gt;gist id=3027247&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HowTo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;    &amp;lt;?php
    # Adds your library to the beginning of the php include path
    addInclude(&#39;~/code/libs&#39;, FALSE);

    $loader = new SplClassLoader();

    # adds the php include path to the class
    $loader-&amp;gt;setIncludePathLookup(true);

    $loader-&amp;gt;add(&#39;Zend&#39;);
    $loader-&amp;gt;add(&#39;PEAR&#39;);

    # Give the path if it isn&#39;t in the php include path like this
    $loader-&amp;gt;add(&#39;Symfony&#39;, &#39;/path/to/symfony&#39;);

    $loader -&amp;gt; register();
    ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php
/**
 * SplClassLoader implementation that implements the technical interoperability
 * standards for PHP 5.3 namespaces and class names.
 *
 * https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md
 *
 * Example usage:
 *
 *     $classLoader = new \SplClassLoader();
 *
 *     // Configure the SplClassLoader to act normally or silently
 *     $classLoader-&amp;gt;setMode(\SplClassLoader::MODE_NORMAL);
 *
 *     // Add a namespace of classes
 *     $classLoader-&amp;gt;add(&#39;Doctrine&#39;, array(
 *         &#39;/path/to/doctrine-common&#39;, &#39;/path/to/doctrine-dbal&#39;, &#39;/path/to/doctrine-orm&#39;
 *     ));
 *
 *     // Add a prefix
 *     $classLoader-&amp;gt;add(&#39;Swift&#39;, &#39;/path/to/swift&#39;);
 *
 *     // Add a prefix through PEAR1 convention, requiring include_path lookup
 *     $classLoader-&amp;gt;add(&#39;PEAR&#39;);
 *
 *     // Allow to PHP use the include_path for file path lookup
 *     $classLoader-&amp;gt;setIncludePathLookup(true);
 *
 *     // Possibility to change the default php file extension
 *     $classLoader-&amp;gt;setFileExtension(&#39;.php&#39;);
 *
 *     // Register the autoloader, prepending it in the stack
 *     $classLoader-&amp;gt;register(true);
 *
 * @author Guilherme Blanco &amp;lt;guilhermeblanco@php.net&amp;gt;
 * @author Jonathan H. Wage &amp;lt;jonwage@gmail.com&amp;gt;
 * @author Roman S. Borschel &amp;lt;roman@code-factory.org&amp;gt;
 * @author Matthew Weier O&#39;Phinney &amp;lt;matthew@zend.com&amp;gt;
 * @author Kris Wallsmith &amp;lt;kris.wallsmith@gmail.com&amp;gt;
 * @author Fabien Potencier &amp;lt;fabien.potencier@symfony-project.org&amp;gt;
 */
 
include &#39;SplAutoloader.php&#39;;
class SplClassLoader implements SplAutoloader
{
    /**
     * @var string
     */
    private $fileExtension = &#39;.php&#39;;
 
    /**
     * @var boolean
     */
    private $includePathLookup = false;
 
    /**
     * @var array
     */
    private $resources = array();
 
    /**
     * @var integer
     */
    private $mode = self::MODE_NORMAL;
 
    /**
     * {@inheritdoc}
     */
    public function setMode($mode)
    {
        if ($mode &amp;amp; self::MODE_SILENT &amp;amp;&amp;amp; $mode &amp;amp; self::MODE_NORMAL) {
            throw new \InvalidArgumentException(
                sprintf(&#39;Cannot have %s working normally and silently at the same time!&#39;, __CLASS__)
            );
        }
 
        $this-&amp;gt;mode = $mode;
    }
 
    /**
     * Define the file extension of resource files in the path of this class loader.
     *
     * @param string $fileExtension
     */
    public function setFileExtension($fileExtension)
    {
        $this-&amp;gt;fileExtension = $fileExtension;
    }
 
    /**
     * Retrieve the file extension of resource files in the path of this class loader.
     *
     * @return string
     */
    public function getFileExtension()
    {
        return $this-&amp;gt;fileExtension;
    }
 
    /**
     * Turns on searching the include for class files. Allows easy loading installed PEAR packages.
     *
     * @param boolean $includePathLookup
     */
    public function setIncludePathLookup($includePathLookup)
    {
        $this-&amp;gt;includePathLookup = $includePathLookup;
    }
 
    /**
     * Gets the base include path for all class files in the namespace of this class loader.
     *
     * @return boolean
     */
    public function getIncludePathLookup()
    {
        return $this-&amp;gt;includePathLookup;
    }
 
    /**
     * {@inheritdoc}
     */
    public function register($prepend = false)
    {
        spl_autoload_register(array($this, &#39;load&#39;), true, $prepend);
    }
 
    /**
     * {@inheritdoc}
     */
    public function unregister()
    {
        spl_autoload_unregister(array($this, &#39;load&#39;));
    }
 
    /**
     * {@inheritdoc}
     */
    public function add($resource, $resourcePath = null)
    {
        $this-&amp;gt;resources[$resource] = (array) $resourcePath;
    }
 
    /**
     * {@inheritdoc}
     */
    public function load($resourceName)
    {
        $resourceAbsolutePath = $this-&amp;gt;getResourceAbsolutePath($resourceName);
 
        switch (true) {
            case ($this-&amp;gt;mode &amp;amp; self::MODE_SILENT):
                if ($resourceAbsolutePath !== false) {
                    require $resourceAbsolutePath;
                }
                break;
 
            case ($this-&amp;gt;mode &amp;amp; self::MODE_NORMAL):
            default:
                require $resourceAbsolutePath;
                break;
        }
 
        if ($this-&amp;gt;mode &amp;amp; self::MODE_DEBUG &amp;amp;&amp;amp; ! $this-&amp;gt;isResourceDeclared($resourceName)) {
            throw new \RuntimeException(
                sprintf(&#39;Autoloader expected resource &amp;quot;%s&amp;quot; to be declared in file &amp;quot;%s&amp;quot;.&#39;, $resourceName, $resourceAbsolutePath)
            );
        }
    }
 
    /**
     * Transform resource name into its absolute resource path representation.
     *
     * @params string $resourceName
     *
     * @return string Resource absolute path.
     */
    private function getResourceAbsolutePath($resourceName)
    {
        $resourceRelativePath = $this-&amp;gt;getResourceRelativePath($resourceName);
 
        foreach ($this-&amp;gt;resources as $resource =&amp;gt; $resourcesPath) {
            if (strpos($resourceName, $resource) !== 0) {
                continue;
            }
 
            foreach ($resourcesPath as $resourcePath) {
                $resourceAbsolutePath = $resourcePath . DIRECTORY_SEPARATOR . $resourceRelativePath;
 
                if (is_file($resourceAbsolutePath)) {
                    return $resourceAbsolutePath;
                }
            }
        }
 
        if ($this-&amp;gt;includePathLookup &amp;amp;&amp;amp; ($resourceAbsolutePath = stream_resolve_include_path($resourceRelativePath)) !== false) {
            return $resourceAbsolutePath;
        }
 
        return false;
    }
 
    /**
     * Transform resource name into its relative resource path representation.
     *
     * @params string $resourceName
     *
     * @return string Resource relative path.
     */
    private function getResourceRelativePath($resourceName)
    {
        // We always work with FQCN in this context
        $resourceName = ltrim($resourceName, &#39;\\&#39;);
        $resourcePath = &#39;&#39;;
 
        if (($lastNamespacePosition = strrpos($resourceName, &#39;\\&#39;)) !== false) {
            // Namespaced resource name
            $resourceNamespace = substr($resourceName, 0, $lastNamespacePosition);
            $resourceName      = substr($resourceName, $lastNamespacePosition + 1);
            $resourcePath      =  str_replace(&#39;\\&#39;, DIRECTORY_SEPARATOR, $resourceNamespace) . DIRECTORY_SEPARATOR;
        }
 
        return $resourcePath . str_replace(&#39;_&#39;, DIRECTORY_SEPARATOR, $resourceName) . $this-&amp;gt;fileExtension;
    }
 
    /**
     * Check if resource is declared in user space.
     *
     * @params string $resourceName
     *
     * @return boolean
     */
    private function isResourceDeclared($resourceName)
    {
        return class_exists($resourceName, false)
            || interface_exists($resourceName, false)
            || (function_exists(&#39;trait_exists&#39;) &amp;amp;&amp;amp; trait_exists($resourceName, false));
    }
}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;
&amp;lt;?php
/**
 * Adds a directory to the php include path
 */

/**
 * @category   RoboTamer
 * @package    Functions
 * @subpackage File
 * @author     Dennis T Kaplan
 * @copyright  Copyright (c) 2008 - 2012 Dennis T Kaplan
 * @license    http://www.opensource.org/licenses/MIT
 * @link       http://blog.robotamer.com
 *
 * @param string  $dir The directory to add to the path
 * @param boolean $at_end If true, place this directory at the end of the include path. Otherwise, place it at the beginning.
 */
function addInclude($dir, $at_end = TRUE)
{
    $exist = file_exists($dir);
    if ( ! $exist || ($exist &amp;amp;&amp;amp; filetype($dir) != &#39;dir&#39;))
    {
        trigger_error(&amp;quot;Include path &#39;{$dir}&#39; does not exist&amp;quot;, E_USER_WARNING);
        echo &#39;&amp;lt;pre&amp;gt;&#39;; print_r(debug_backtrace()); echo &#39;&amp;lt;/pre&amp;gt;&#39;;
        exit;
    }
    $dir   = rtrim($dir, &amp;quot;/&amp;quot;);
    $paths = ltrim(get_include_path(), &amp;quot;.&amp;quot;.PATH_SEPARATOR);
    $paths = explode(PATH_SEPARATOR, $paths);
    $ds    = &#39;.&#39;.PATH_SEPARATOR;
    if (strlen($paths[0]) &amp;amp;&amp;amp; array_search($dir, $paths) === false) {
        $at_end ? array_push($paths, $dir) : array_unshift($paths, $dir);
        $paths = implode(PATH_SEPARATOR, $paths);
        set_include_path($ds.$paths);
    } else {
        set_include_path($ds.$dir);
    }
}
/* #Test it
echo get_include_path();
echo &#39;&amp;lt;br /&amp;gt;&#39;;
addInclude(&#39;/var/www/library/&#39;);
echo get_include_path();
echo &#39;&amp;lt;br /&amp;gt;&#39;;
*/
?&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php

function autoload($className)
{
    $className = ltrim($className, &#39;\\&#39;);
    $fileName  = &#39;&#39;;
    $namespace = &#39;&#39;;
 
    if ($lastNsPos = strripos($className, &#39;\\&#39;)) {
        $namespace = substr($className, 0, $lastNsPos);
        $className = substr($className, $lastNsPos + 1);
        $fileName  = str_replace(&#39;\\&#39;, DIRECTORY_SEPARATOR, $namespace) . DIRECTORY_SEPARATOR;
    }
 
    $fileName .= str_replace(&#39;_&#39;, DIRECTORY_SEPARATOR, $className) . &#39;.php&#39;;
 
    require $fileName;
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Messenger Laravel Framework</title>
      <link>http://www.robotamer.com/blog/2012-06-27-messenger-laravel-framework.html</link>
      <pubDate>Wed, 27 Jun 2012 23:27:29 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2012-06-27-messenger-laravel-framework.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://blog.robotamer.com/wp-content/uploads/2012/06/laravel.png&#34; alt=&#34;Laravel Framework&#34; /&gt;
 This is a fork and upgrade of the &lt;a href=&#34;http://forums.laravel.com/profile.php?id=583&#34;&gt;davzie&lt;/a&gt; message class.
A info, error etc messenger class that allows you to add validation errors, statuses etc to flash data and then retrieve them in a nicely formatted way in your front-end. Automates the process a little when you&amp;rsquo;re adding and retrieving messages, especially in a CRUD type environment. The formatting integrates well with Twitter&amp;rsquo;s Bootstrap Alert formatting.&lt;/p&gt;

&lt;p&gt;This upgraded version works smoothly with the Laravel validation class&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/robotamer/3007511#file-msg-php&#34;&gt;gist id=3007511&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php

class Msg {

     public static $msgss = array();

     /**
      * Add a message to the message array (adds to the user&#39;s session)
      * @param string  $type    You can have several types of messages, these are class names for Bootstrap&#39;s messaging classes, usually, info, error, success, warning
      * @param string $message  The message you want to add to the list
      */
     public static function add($type = &#39;info&#39;, $message = FALSE){
         if(!$message) return FALSE;
         if(is_array($message)){
             foreach($message as $msg){
                 static::$msgss[$type][] = $msg;
             }
         }else{
             static::$msgss[$type][] = $message;
         }
         Session::flash(&#39;messages&#39;, static::$msgss);
     }

     /**
      * Pull back those messages from the session
      * @return array
      */
     public static function get(){
         return (Session::has(&#39;messages&#39;)) ? Session::get(&#39;messages&#39;) : FALSE;
     }
    
     /**
      * Gets all the messages from the session and formats them accordingly for Twitter bootstrap.
      * @return string
      */
     public static function getHtml(){
         $output = FALSE;
         if (Session::has(&#39;messages&#39;)){
             $messages = Session::get(&#39;messages&#39;);
             foreach($messages as $type =&amp;gt; $msgs){
                 if(is_integer($type)) $type = &#39;error&#39;;
                 $output .= &#39;&amp;lt;div class=&amp;quot;alert alert-&#39;.$type.&#39;&amp;quot;&amp;gt;&amp;lt;a class=&amp;quot;close&amp;quot; data-dismiss=&amp;quot;alert&amp;quot;&amp;gt;×&amp;lt;/a&amp;gt;&#39;;
                 if(is_array($msgs)){
                 foreach($msgs as $msg) $output .= &#39;&amp;lt;p&amp;gt;&#39;.$msg.&#39;&amp;lt;/p&amp;gt;&#39;;
                 }else{
                      $output .= &#39;&amp;lt;p&amp;gt;&#39;.$msgs.&#39;&amp;lt;/p&amp;gt;&#39;;
                 }
                 $output .= &#39;&amp;lt;/div&amp;gt;&#39;;
             }
         }
         return $output;
     }
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Network Safety Restart Bash Script</title>
      <link>http://www.robotamer.com/linux/nsr.html</link>
      <pubDate>Wed, 27 Jun 2012 22:57:08 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/nsr.html</guid>
      <description>&lt;p&gt;If you ever work on a remote servers network settings then this script may safe you from having to call support, and waiting on them.&lt;/p&gt;

&lt;p&gt;When started/executed it&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sleeps first for 1 hour&lt;/li&gt;
&lt;li&gt;Then it renames the ”/etc/network/interfaces” file by adding the current time stamp to the end of the file&lt;/li&gt;
&lt;li&gt;It renames a file called ”/etc/network/interfaces.org” to ”/etc/network/interfaces”&lt;/li&gt;
&lt;li&gt;And finally it restarts the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It also warns you a couple minutes before it does all that so you can terminate the program. Of course if you have been locked out you can&amp;rsquo;t terminate it, and it will execute. &lt;em&gt;Giving you a fresh start!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To start&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;network_Safety_Restart.sh start &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To Stop&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;network_Safety_Restart.sh stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the linkto the &lt;a href=&#34;https://gist.github.com/robotamer/1479769&#34;&gt;Gist&lt;/a&gt; or you can just copy and paste from below.&lt;/p&gt;

&lt;p&gt;network_Safety_Restart.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#! /bin/sh

PATH=/sbin:/usr/sbin:/bin:/usr/bin

. /lib/lsb/init-functions

export PIDFILESTART=/tmp/network-safty-restart-start.pid
export PIDFILESTOP=/tmp/network-safty-restart-stop.pid
export FILE=/etc/network/interfaces

case &amp;quot;$1&amp;quot; in
  start)  
    if [ -f ${PIDFILESTART} ]; then
            rm ${PIDFILESTART}
    fi
    if [ -f ${PIDFILESTOP} ]; then
            rm ${PIDFILESTOP}
    fi  
    ps -fe | grep ${1} | head -n1 | cut -d&amp;quot; &amp;quot; -f 6 &amp;gt; ${PIDFILESTART}

        sleep 3600 

        log_action_msg &amp;quot;WARNING: Will in 120 sec rename ${FILE} and then restart&amp;quot;
        sleep 60
        log_action_msg &amp;quot;WARNING: Will in 60 sec rename ${FILE} and then restart&amp;quot;
        sleep 60

    if ! [ -f ${PIDFILESTOP} ]; then
        log_action_msg &amp;quot;Restarting NOW&amp;quot;
            SUFFIX=$(date +%s)
            cp ${FILE} ${FILE}.${SUFFIX}
            sleep 1
            cp ${FILE}.org ${FILE}
            sleep 1
            reboot -d -f -i
    else
        rm ${PIDFILESTOP}
        log_action_msg &amp;quot;NOT Restaring as you wish&amp;quot;
        fi
        ;;
  stop)
    if [ -f ${PIDFILESTART} ]; then
            rm ${PIDFILESTART}
        touch ${PIDFILESTOP}
        log_action_msg &amp;quot;Terminating restart script&amp;quot;

    fi
    log_action_msg &amp;quot;Terminated restart script&amp;quot;

    exit 0
        ;;
  *)
        echo &amp;quot;Usage: $0 start|stop&amp;quot; &amp;gt;&amp;amp;2
        exit 3
        ;;
esac
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux bash history</title>
      <link>http://www.robotamer.com/linux/bash/history.html</link>
      <pubDate>Tue, 22 Nov 2011 03:54:53 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/bash/history.html</guid>
      <description>&lt;p&gt;Have you ever executed something on the linux shell and didn&amp;rsquo;t remember later how it was done?&lt;/p&gt;

&lt;p&gt;Well if you remember just part of it you can search for it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;history | grep -i &amp;quot;[search string]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Google, the most dangerous monopoly ever</title>
      <link>http://www.robotamer.com/blog/2011-07-08-google-the-most-dangerous-monopoly-ever.html</link>
      <pubDate>Fri, 08 Jul 2011 22:00:25 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-07-08-google-the-most-dangerous-monopoly-ever.html</guid>
      <description>&lt;p&gt;I use almost all Google services ranging from search engine, over Gmail, Calendar, Android and Google Voice all the way to Webmaster Tools and Google Analytics.&lt;/p&gt;

&lt;p&gt;If you combine all that data, I think that Google may know me better then I know my self, and that is starting to make me nerves.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t get me wrong, I think that Google is a great company, the services provided are excellent, and I don&amp;rsquo;t have a reason to believe that my data has been compromised. I just feel uncomfortable with one single entity having so much information about me.&lt;/p&gt;

&lt;p&gt;Based on my own experience, I believe that Google is starting to become a dangers monopoly, by far more dangerous then Microsoft ever was. The world has never seen anything like it. Therefore I ask my self where is this heading and what are the possible consequence?&lt;/p&gt;

&lt;p&gt;For now, I am researching alternative services I can use. The hub that brings most of the Google services together appears to be Google Contacts.&lt;/p&gt;

&lt;p&gt;It links Gmail, Google Calendar, Google Voice, Android etc and it appears to be the center of it all.&lt;/p&gt;

&lt;p&gt;The first application I will be testing is called &lt;a href=&#34;http://www.voxmobili.com/products/phonebook20/index.html&#34;&gt;Phonebook&lt;/a&gt;. The reason why Phonebook is the most promising I have found so far is, because it uses &lt;a href=&#34;http://en.wikipedia.org/wiki/SyncML&#34;&gt;SyncML&lt;/a&gt;. SyncML is a platform independent information synchronization standard. That means I can sync my phonebook with all my other devices without being dependent on one single company.&lt;/p&gt;

&lt;p&gt;Stay tuned for my report and future steps.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Live without pretending ...</title>
      <link>http://www.robotamer.com/blog/2011-06-29-live-without-pretending.html</link>
      <pubDate>Wed, 29 Jun 2011 07:52:39 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-29-live-without-pretending.html</guid>
      <description>&lt;pre&gt;&lt;code&gt;    Live   without pretending .......
    Love   without depending  .......
    Listen without defending  .......
    Speak  without offending  .......
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;by &lt;a href=&#34;http://twitter.com/#!/drakkardnoir&#34;&gt;Drake&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Need PHP 5.3 Hosting Recommendations – Who Hosts Yours?</title>
      <link>http://www.robotamer.com/blog/2011-06-27-need-hosting-recommendations-who-hosts-yours.html</link>
      <pubDate>Mon, 27 Jun 2011 23:38:12 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-27-need-hosting-recommendations-who-hosts-yours.html</guid>
      <description>&lt;p&gt;I have been looking for a host that offers php 5.3 hosting, however all those hosting compare sites don&amp;rsquo;t seam to be quite as honest as one would expect. I would also need ssh access, so if you have a recommendation you could share with me, I would appreciate it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>msmtp install, config and test</title>
      <link>http://www.robotamer.com/blog/2011-06-26-msmtp-install-config-and-test.html</link>
      <pubDate>Sun, 26 Jun 2011 10:24:08 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-26-msmtp-install-config-and-test.html</guid>
      <description>&lt;p&gt;Why have more then one mail server? Or why even have a mail server at all, if you can use gmail?
Well there are many reasons to have at leased one mail server, but having one on each server doesn&amp;rsquo;t make sense at all.
I tried both ssmtp and msmtp, and decided on msmtp.
&amp;lt;!&amp;ndash; more &amp;ndash;&amp;gt;&lt;/p&gt;

&lt;h3&gt;msmtp is an SMTP client.&lt;/h3&gt;

&lt;p&gt;In the default mode, it transmits a mail to an SMTP server, which takes care of further delivery.
To use this program with your mail user agent (MUA), create a configuration  file with your mail account(s) and tell your MUA to call msmtp instead of  /usr/sbin/sendmail.
&lt;strong&gt;Features include:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sendmail compatible interface (command line options and exit codes).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TLS/SSL support, including client certificates.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Authentication methods PLAIN, LOGIN, CRAM-MD5, EXTERNAL, GSSAPI, SCRAM-SHA-1, DIGEST-MD5, and NTLM.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;PIPELINING support for increased transmission speed.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DSN (Delivery Status Notification) support.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;RMQS (Remote Message Queue Starting) support (ETRN keyword).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;IPv6 support.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;LMTP support.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Support for multiple accounts.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;msmtp is &lt;a href=&#34;http://www.gnu.org/philosophy/free-sw.html&#34;&gt;free software&lt;/a&gt;; you can redistribute it and/or modify it under the terms of the  &lt;a href=&#34;http://www.gnu.org/licenses/gpl.html&#34;&gt;GNU General Public License&lt;/a&gt; as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;Requirements&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Platforms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;msmtp runs on a wide variety of platforms. It needs little more than an ANSI C  compiler and Berkeley-style sockets.
&lt;strong&gt;Libraries&lt;/strong&gt;
msmtp does not need any additional libraries, but it can use the following to enhance its feature set:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/software/gnutls/&#34;&gt;GnuTLS&lt;/a&gt; (&amp;gt;=1.2.0)
The GnuTLS library provides TLS/SSL support. It is highly recommended.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.openssl.org/&#34;&gt;OpenSSL&lt;/a&gt; (&amp;gt;=0.9.6)
OpenSSL is supported as an alternative to GnuTLS.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://josefsson.org/libgsasl/&#34;&gt;GNU SASL&lt;/a&gt; (&amp;gt;=0.2.4)
Using the GNU SASL library adds support for the GSSAPI, DIGEST-MD5, SCRAM-SHA-1, and NTLM  authentication methods. (The methods PLAIN, LOGIN, and CRAM-MD5  are always supported).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/software/libidn/&#34;&gt;GNU Libidn&lt;/a&gt;
Support for Internationalized Domain Names (IDN) is available if you have GNU  Libidn installed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;apt-get install msmtp
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;configure&lt;/h3&gt;

&lt;p&gt;Below you will see that I commented out tls_trust_file and went with tls_fingerprint.
You can not use both at the same time, and I figure that tls_fingerprint is faster, however the gmail finger print may change over the years so going with tls_trust_file is probably safer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# /etc/msmtprc
defaults
logfile         ~/.msmtp.log
#tls_trust_file /etc/ssl/certs/ca-certificates.crt

account         default
host            smtp.gmail.com
port            587
from            xxxxx@gmail.com
auth            on
user            xxxxx@gmail.com
password        *******
tls             on
tls_starttls    on
tls_fingerprint DB:A0:2A:07:00:F9:E3:23:7D:07:E7:52:3C:95:9D:E6:7E:12:54:3F
logfile         /var/log/msmtp.log
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Test&lt;/h3&gt;

&lt;p&gt;Send out a test mail:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo -e &amp;quot;Subject: msmtp test mailnThis is a test mail from msmtp&amp;quot; | msmtp --debug --from=default -t xxxxx@gmail.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://msmtp.sourceforge.net/&#34;&gt;Link to developer site&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>git branch on bash line</title>
      <link>http://www.robotamer.com/blog/2011-06-21-git-branch-on-bash-line.html</link>
      <pubDate>Tue, 21 Jun 2011 04:52:48 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-21-git-branch-on-bash-line.html</guid>
      <description>&lt;p&gt;This little code, if placed in to your ~/.bash_profile file will reveal what git branch you are working on.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parse_git_branch() {
        git branch 2&amp;gt; /dev/null | sed -e &#39;/^[^*]/d&#39; -e &#39;s/* (.*)/(1)/&#39;
}
if [[ $EUID -ne 0 ]]; then
        PS1=&amp;quot;w$(parse_git_branch) $ &amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Multiple PHP installations</title>
      <link>http://www.robotamer.com/code/php/2011-06-20-multiple-php-installations-so-you-can-run-5-3-x-on-one-box.html</link>
      <pubDate>Mon, 20 Jun 2011 11:58:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/2011-06-20-multiple-php-installations-so-you-can-run-5-3-x-on-one-box.html</guid>
      <description>&lt;p&gt;How to install &lt;strong&gt;PHP 5.3.X&lt;/strong&gt; as secondary php version from source&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PHPV=5.3.6
cd /usr/local/src
wget http://us.php.net/get/php-$PHPV.tar.gz/from/this/mirror
mv mirror php-$PHPV.tar.gz
tar xzvf php-$PHPV.tar.gz
chown -R $USER:$USER php-$PHPV/
cd php-$PHPV/

apt-get install libxml2-dev libssl-dev libcurl4-gnutls-dev libjpeg62-dev libpng12-dev libfreetype6-dev unixodbc-dev

./configure 
  --prefix=/usr/local/php5.3 
  --with-config-file-path=/usr/local/etc/php5.3 
  --with-config-file-scan-dir=/usr/local/etc/php5.3/$SAPIconf.d 
  --with-libdir=/lib 
  --disable-cgi 
  --with-libxml-dir=/usr/ 
  --with-mysql=/usr/ 
  --enable-pdo 
  --with-pdo-mysql 
  --with-mysqli 
  --with-zlib-dir=/usr 
  --with-curl 
  --with-gd 
  --with-jpeg-dir=/usr/lib 
  --with-png-dir=/usr/lib 
  --with-freetype-dir=/usr/lib 
  --with-gettext 
  --enable-mbstring 
  --enable-soap 
  --enable-ftp 
  --enable-fpm 
  --with-openssl

make
make test
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More help in case you have errors:
&lt;a href=&#34;http://www.robo47.net/text/6-PHP-Configure-und-Compile-Fehler&#34;&gt;PHP-Configure-und-Compile-Fehler&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>It is not the critic who counts</title>
      <link>http://www.robotamer.com/blog/2011-06-18-it-is-not-the-critic-who-counts-by-theodore-roosevelt.html</link>
      <pubDate>Sat, 18 Jun 2011 22:10:45 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-18-it-is-not-the-critic-who-counts-by-theodore-roosevelt.html</guid>
      <description>&lt;p&gt;&lt;em&gt;It is not the critic who counts; not the man who points out how the strong man stumbled, or where the doer of deeds could have done better. The credit belong to the man who is actually in the arena; whose face is marred by dust and sweat and blood; who strives valiantly; who errs and comes short again and again. Who knows the great enthusiasms, the great devotions, and spends himself in a worthy cause. Who at the best knows in the end the triumph of high achievement; and who at the worst, if he fails, at least fails while daring greatly. So that his place shall never be with those cold and timid souls who know neither victory nor defeat.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Theodore Roosevelt&lt;br /&gt;
26th President (1858-1919)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>fixing php&#39;s gettype function</title>
      <link>http://www.robotamer.com/blog/2011-06-17-fixing-phps-gettype-function.html</link>
      <pubDate>Fri, 17 Jun 2011 10:10:09 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-17-fixing-phps-gettype-function.html</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php    

public static function getType($value, $max_length = 50){

    $type = gettype($value);

    if($type == &#39;NULL&#39;
            || $type == &#39;boolean&#39;
            || $type == &#39;integer&#39;
            || $type == &#39;double&#39;
            || $type == &#39;object&#39;
            || $type == &#39;resource&#39;
            || $type == &#39;array&#39;
        )
        return array(&#39;type&#39;=&amp;gt;$type,&#39;value&#39;=&amp;gt;$value);

    if($type == &#39;string&#39; &amp;amp;&amp;amp; empty($value))
        return array(&#39;type&#39;=&amp;gt;&#39;NULL&#39;,&#39;value&#39;=&amp;gt;$value);

    if($type == &#39;string&#39; &amp;amp;&amp;amp; strlen($value) &amp;gt; $max_length)
        return array(&#39;type&#39;=&amp;gt;&#39;blob&#39;,&#39;value&#39;=&amp;gt;$value);

    if($type == &#39;string&#39; &amp;amp;&amp;amp; substr($value, 0,1) === &#39;0&#39;)
        return array(&#39;type&#39;=&amp;gt;&#39;string&#39;,&#39;value&#39;=&amp;gt;$value);

    if($type == &#39;string&#39; &amp;amp;&amp;amp; is_numeric($value)){
        $int   = (int) $value;
        $float = (float) $value;

        if($int == $value){
            $value = $int;
            $type = &#39;integer&#39;;
        }elseif($float == $value){
            $value = $float;
            $type = &#39;double&#39;;
        }
    }elseif($type == &#39;string&#39;){
        $type = &#39;string&#39;;
    }else{
        $type = &#39;blob&#39;;
    }
    return array(&#39;type&#39;=&amp;gt;$type,&#39;value&#39;=&amp;gt;$value);
}
    
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>HTC Kaiser / TyTN II Android Froyo Rom</title>
      <link>http://www.robotamer.com/blog/2011-06-15-kaiser-rom.html</link>
      <pubDate>Wed, 15 Jun 2011 03:48:33 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-15-kaiser-rom.html</guid>
      <description>&lt;p&gt;This is a Kernel and a Rom to convert your HTC Kaiser from Microsoft to Android Froyo&lt;/p&gt;

&lt;p&gt;Everything seems to be working, except the camera is blurry, but that seams to be the norm.&lt;/p&gt;

&lt;p&gt;Included is the rom, radio and kernel&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ROM: 2.2.1&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Kernel: 2.6.25&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Radio: KAISER 1.70.19.09&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Panel: 2&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Key Map: US Normal&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Resolution: 240x320&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Storage: Nand &amp;amp; Nand&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most everything is installed in userspace and can be uninstalled or upgraded.&lt;/p&gt;

&lt;p&gt;Oh got GO Launcher EX installed (Also in user space)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Credits:&lt;/strong&gt;
I stole ideas from, and used following tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Makers of &lt;a href=&#34;http://sourceforge.net/projects/androidhtc/files/AtoolsRelease/&#34;&gt;atools&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Makers of NBH creator&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;HTC Flasher&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://forum.xda-developers.com/member.php?u=2426812&#34;&gt;kallt_kaffe&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://forum.xda-developers.com/member.php?u=1638018&#34;&gt;Krazy-Killa&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;dzo (dzo&amp;rsquo;s posts wore a big help. just wish he would answer his own questions after he found the solution)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://forum.xda-developers.com/member.php?u=895681&#34;&gt;n2rjt&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;and many more.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;@todo&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resize NAND partitions to the smaller system size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Download Links:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pzzazz.net/htc/Gruessle_HTC_Kaiser.tar.bz2&#34;&gt;You can download it from here as bz2&lt;/a&gt;
OR
&lt;a href=&#34;http://pzzazz.net/htc/Gruessle_HTC_Kaiser.tar.bz2&#34;&gt;from here same thing as 7z&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Forum&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;There is a forum post of mine at &lt;a href=&#34;http://forum.xda-developers.com/showthread.php?t=1123355&#34;&gt;xda-developers&lt;/a&gt; to get help:&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>num_row with PDO</title>
      <link>http://www.robotamer.com/blog/2011-06-10-num_row-with-pdo.html</link>
      <pubDate>Fri, 10 Jun 2011 06:33:51 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-10-num_row-with-pdo.html</guid>
      <description>&lt;p&gt;There is no num_row() function for PHP PDO&lt;/p&gt;

&lt;p&gt;Here are my two solutions:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One with prepare &amp;amp; execute&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db-&amp;gt;prepare($sql);
$sth-&amp;gt;execute(array($key));
$rows = $sth-&amp;gt;fetch(PDO::FETCH_NUM);
echo $rows[0];
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;One with query:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db-&amp;gt;query($sql);
$row = $result-&amp;gt;fetch(PDO::FETCH_NUM);
echo $row[0];
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Load functions and array&#39;s</title>
      <link>http://www.robotamer.com/blog/2011-06-03-load-functions-and-arrays.html</link>
      <pubDate>Fri, 03 Jun 2011 07:50:58 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-03-load-functions-and-arrays.html</guid>
      <description>&lt;p&gt;This class is used to load functions and array&amp;rsquo;s. It also can copy functions and array&amp;rsquo;s to the linux memory drive and load them from there to speed thinks up.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php if(!defined(&#39;DROOT&#39;)) trigger_error(&amp;quot;Please define data location (DROOT)&amp;quot;);

/**
 *
 * This class loads stuff
 *
 * 1) Functions
 * 2) Array&#39;s
 *
 * @todo        Load array&#39;s
 * @category    Data
 * @package     TaMeR
 * @copyright   Copyright (c) 2010 - 2011 Dennis T Kaplan
 * @license     http://www.gnu.org/licenses/gpl.txt
 * @author      Dennis T Kaplan
 **/
class Load
{
    protected $type;
    protected $path;

    public function __construct(){}
    public function __destruct(){}

    public static function a($array_name) {
        if( ! is_string($array_name)){
            trigger_error(&amp;quot;Array name must be a string!&amp;quot;.BR, E_USER_WARNING);
            exit;
        }
        if(isset($$array_name) &amp;amp;&amp;amp; is_array($$array_name))
            return $$array_name;

        $dfile = DROOT.&#39;array/&#39;.$array_name.&#39;.php&#39;;
        $mfile = FALSE;
        if( defined(&#39;MROOT&#39;) &amp;amp;&amp;amp; MROOT != FALSE)
            $mfile = MROOT.&#39;array/&#39;.$array_name.&#39;.php&#39;;
        return self::inc($dfile,$mfile,$array_name);
    }

    public function aSave($var)
    {
        $array_name = array_search($var, $GLOBALS);

        $dfile = DROOT.&#39;array/&#39;.$array_name.&#39;.php&#39;;

        $string = var_export($var,true);
        file_put_contents($dfile,
            &#39;&#39;);

        $mfile = FALSE;
        if( defined(&#39;MROOT&#39;) &amp;amp;&amp;amp; MROOT !== FALSE){
            $mfile = MROOT.&#39;array/&#39;.$array_name.&#39;.php&#39;;
            file_put_contents($mfile, self::stripComments($dfile));
        }

    }//end save()

    public static function f($str) {
        if( ! is_string($str))
            trigger_error(&amp;quot;Argument for load must be string!&amp;quot;, E_USER_WARNING);

        $array = self::prepArgs($str);
        $mfile = FALSE;
        foreach($array as $func_name){
            if ( function_exists($func_name)) continue;
            $dfile = FROOT.$func_name.&#39;.php&#39;;
            if( defined(&#39;MROOT&#39;) &amp;amp;&amp;amp; MROOT != FALSE)
                $mfile = MROOT.&#39;func/&#39;.$func_name.&#39;.php&#39;;
            self::inc($dfile,$mfile);
        }
    }

    /**
     * Description load function
     * if availabe load from memory folder; else
     *  if a memory folder is availabe, copy to memory then load; else
     *   load from file
     *
     * @package     TaMeR
     * @category    File
     * @author      Dennis T Kaplan
     * @copyright  (C) 2009-2011 Dennis T Kaplan
     *
     * @param  string $dfile Disk File
     * @param  string $mfile Memory File
     * @param  string $array
     * @return mixed
     */
    protected static function inc($dfile,$mfile = FALSE,$array = FALSE)
    {
        if($mfile !== FALSE){
            if(file_exists($mfile)){
                 include $mfile;
            }elseif(self::hasMRoot()){
                file_put_contents($mfile, self::stripComments($dfile));
                chmod($mfile, 00644);
                include $mfile;
            }else{
                // Fail Safe
                include $dfile;
            }
        }else{
            include $dfile;
        }
        if($array !== FALSE) return $$array;
    }

    /**
     * Name stripComments
     *
     * Description Strip php comments from php file
     *
     * @package     TaMeR
     * @category    File
     * @type        Function
     * @author      Ionuț G. Stan
     *
     * @param  string $file
     * @param  mixed  $file_desc &#39;/var/www/somefile.php&#39;
     * @return string
     */
    public static function stripComments($file) {
        $fileStr = file_get_contents($file);
        $newStr  = &#39;&#39;;

        $commentTokens = array(T_COMMENT);

        if (defined(&#39;T_DOC_COMMENT&#39;))
            $commentTokens[] = T_DOC_COMMENT; // PHP 5
        if (defined(&#39;T_ML_COMMENT&#39;))
            $commentTokens[] = T_ML_COMMENT;  // PHP 4

        $tokens = token_get_all($fileStr);

        foreach ($tokens as $token) {
            if (is_array($token)) {
                if (in_array($token[0], $commentTokens))
                        continue;

                $token = $token[1];
            }

            $newStr .= $token;
        }
        /**
         * Replace all s t n with one space and trim
         * @todo replave with preg_replace()
         */ 
        $newStr = trim(preg_replace(&#39;/s+/&#39;, &#39; &#39;, $newStr));
        $newStr = str_replace(&#39;, &#39;,&#39;,&#39;,$newStr);
        $newStr = str_replace(&#39; =&amp;gt; &#39;,&#39;=&amp;gt;&#39;,$newStr);
        $newStr = str_replace(&#39; (&#39;,&#39;(&#39;,$newStr);
        $newStr = str_replace(&#39;( &#39;,&#39;(&#39;,$newStr);
        $newStr = str_replace(&#39;) &#39;,&#39;)&#39;,$newStr);
        $newStr = str_replace(&#39; )&#39;,&#39;)&#39;,$newStr);
        $newStr = str_replace(&#39; = &#39;,&#39;=&#39;,$newStr);
        $newStr = str_replace(&#39; }&#39;,&#39;}&#39;,$newStr);
        $newStr = str_replace(&#39;{ &#39;,&#39;{&#39;,$newStr);
        return $newStr;
    }

    public static function prepArgs($args) {
        $args = preg_replace(&#39;/ss+/&#39;, &#39; &#39;, trim($args));
        return explode(&#39; &#39;,$args);
    }

    protected static function hasMRoot() {
    /**
     * Checks if the memory directory is available on the file system
     * and creates the directory structure if the memory folder is
     * available but the directory structure has not been created.
     */
        if( defined(&#39;MROOT&#39;) &amp;amp;&amp;amp; MROOT != FALSE){
            if(file_exists(MROOT)){
                return TRUE;
            }else{
                mkdir(MROOT, 0777);
                mkdir(MROOT.&#39;class&#39;,  0777);
                mkdir(MROOT.&#39;func&#39; ,  0777);
                mkdir(MROOT.&#39;array&#39;,  0777);
                return TRUE;
            }
        }else{
            return FALSE;
        }
    }
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux backround process</title>
      <link>http://www.robotamer.com/blog/2011-06-01-nohub.html</link>
      <pubDate>Wed, 01 Jun 2011 09:24:12 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-01-nohub.html</guid>
      <description>&lt;p&gt;Running as background process with &lt;em&gt;nohub&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nohup scp  &amp;amp; &amp;gt; nohup.out 2 &amp;gt; &amp;amp;1

nohup scp -r -p root@www.example.com:/var/www/ /var/www/ &amp;amp; &amp;gt;nohup.out 2&amp;gt;&amp;amp;1

nohup scp -r -p root@www.example.com:/var/www/logs /var/www/ &amp;amp; &amp;gt;nohup.out 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux find &amp; replace HowTo</title>
      <link>http://www.robotamer.com/blog/2011-06-01-linux-find-replace-howto.html</link>
      <pubDate>Wed, 01 Jun 2011 09:20:26 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-01-linux-find-replace-howto.html</guid>
      <description>&lt;p&gt;&lt;strong&gt;Find and chmod files or folders&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find . -type d -exec chmod 755 {} ;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find . -name &amp;quot;*.php&amp;quot; | xargs grep -niP &#39;thingy&#39;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Find a directory and display on screen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find . -type d -name &#39;linux&#39; 2&amp;gt;/dev/null&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Find/Grep for a string across multiple files with different extensions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;find ( -name &amp;quot;*js&amp;quot; -o -name &amp;quot;*jsp&amp;quot; -o -name &amp;quot;*jspf&amp;quot; ) | xargs grep -niP &#39;thingy&#39;&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>e() for echo</title>
      <link>http://www.robotamer.com/blog/2011-06-01-echo.html</link>
      <pubDate>Wed, 01 Jun 2011 02:01:27 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-06-01-echo.html</guid>
      <description>&lt;p&gt;It&amp;rsquo;s really annoying having to thing of html stuff like pre &amp;amp; br everytime you need to display something.&lt;/p&gt;

&lt;p&gt;And it&amp;rsquo;s even worst if you like me test your code in cli and cgi.&lt;/p&gt;

&lt;p&gt;So I wrote this little method to take care of it all. It&amp;rsquo;s nothing complicated but sure useful.&lt;/p&gt;

&lt;p&gt;It detects cgi and cli, and formats everything accordingly.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;    
&amp;lt;?php
/**
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/
**/

/**
 * e() --- Prints human-readable information about a variable
 *
 * string e ( mixed $expression[, string $name [, bool $return = false ]] )
 *
 * Replacement for php echo, print, print_r(), var_export() etc
 */

/**
 * @category    TaMeR
 * @copyright   Copyright (c) 2008 - 2011 Dennis T Kaplan
 * @license     http://www.gnu.org/licenses/gpl.txt
 * @link        http://github.com/pzzazz/TaMeR
 * @author      Dennis T Kaplan
 * @date        May 1, 2011
 * @version     1.0
 * @access      public
 * @param       mixed   $var
 * @param       string  $name
 * @param       boolean $return
 * @return      string
 **/
function e($var, $name = FALSE, $return = FALSE) {
    $preO = $preC = &#39;&#39;; $br = PHP_EOL;
    if( ! isset($_SERVER[&#39;argv&#39;])){
        $preO = &#39;

&#39;; $preC = &#39;&#39;;
        $h1O = &#39;&amp;lt;h1&amp;gt;&#39;;   $h1C = &#39;&amp;lt;/h1&amp;gt;&#39;;
        $br = &#39;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&#39;.PHP_EOL;
    }
    if(!is_array($var) &amp;amp;&amp;amp; !is_object($var))
    {
        if ($name !== FALSE) echo $br.$name.&#39;: &#39;;
        echo (isset($_SERVER[&#39;argv&#39;]))
                  ? $var.$br
                  : htmlspecialchars($var).$br;
    }else{
        if($return === FALSE) {
            if ($name !== FALSE) echo $br.$h1O.$name.&#39;: &#39;.$h1C;
            echo $preO.print_r($var, TRUE).$preC.$br;
        }else{
            if ($name !== FALSE){
                return &#39;&#39;;
            }else{
                return $br.$preO.var_export($var, TRUE).$preC.$br;
            }
        }
    }
}
?&amp;gt;
    
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Sliding-Headstock Machines</title>
      <link>http://www.robotamer.com/blog/2011-05-14-sliding-headstock-machines.html</link>
      <pubDate>Sat, 14 May 2011 05:00:09 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2011-05-14-sliding-headstock-machines.html</guid>
      <description>&lt;p&gt;Sliding-Headstock Machines, also known as Swiss-Type or Swiss-Style Machines, are a special type of &lt;a href=&#34;http://en.wikipedia.org/wiki/Lathe&#34;&gt;Lathe&lt;/a&gt; / &lt;a href=&#34;http://en.wikipedia.org/wiki/Machine_tool&#34;&gt;Machine tool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All Sliding Headstock Machines use a &lt;a href=&#34;http://wiki.pzzazz.net/en/index.php?title=Barfeeder&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;Barfeeder&lt;/a&gt; or a &lt;a href=&#34;http://wiki.pzzazz.net/en/index.php?title=Barloader&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;Barloader&lt;/a&gt;, they machine usually round &lt;a href=&#34;http://en.wikipedia.org/wiki/Bar_stock&#34;&gt;bar stock&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a Sliding-Headstock Machines, the &lt;a href=&#34;http://en.wikipedia.org/wiki/Cutting_tool&#34;&gt;cutting tools&lt;/a&gt; are close to the Guide Bushing, while a sliding headstock feeds rotating stock, from behind through a Guide Bushing. This system eliminating overhang and deflection of the material during the cutting process. This process is specially useful for small diameter, long metal parts. Parts where the diameter is only a fraction of the overall length of the part.&lt;/p&gt;

&lt;p&gt;Initially Sliding-Headstock Machines wore handling material diameters of up to Ø8mm. In resent years manufacturers of Sliding-Headstock Machines manufactured machines that go up to Ø36 mm, most probably because of customer demand; smaller machine shops that can&amp;rsquo;t afford to buy multiple machines and needed the flexibility of machining both long and short parts from small and big diameter &lt;a href=&#34;http://en.wikipedia.org/wiki/Bar_stock&#34;&gt;bar stock&lt;/a&gt; material. Since big diameter machines really defeat the purpose of the concept, &lt;a href=&#34;http://www.index-werke.de/&#34;&gt;Traub&lt;/a&gt; came up with a new solution. Their newest model TNL18 can be converted from a Sliding-Headstock machine to a Fixed-Headstock Machine. In other words it becomes a regular lathe, and the conversion takes only about 15 minutes.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.marucit.com/&#34;&gt;Citizen&lt;/a&gt; R07 is the best representation of a modern Sliding Headstock Machine, most closely preserving the principle behind the Sliding Headstock Machine in a modern concept. The strength of the R07 lies in the preciseness. The R07 is equipped with a glass scale feed back system. The machines &lt;a href=&#34;http://en.wikipedia.org/wiki/Computer_Numerical_Control&#34;&gt;Computer Numerical Control&lt;/a&gt; (&lt;a href=&#34;http://en.wikipedia.org/wiki/CNC&#34;&gt;CNC&lt;/a&gt;) gets feedback from the &lt;a href=&#34;http://en.wikipedia.org/wiki/Digital_read_out#Glass_scales&#34;&gt;Glass scale&lt;/a&gt; and corrects positioning information that changes with thermal distortion. Therefore correcting axis positioning information live as the machine positions the tool. This system makes the R07 highly accurate. &lt;a href=&#34;http://en.wikipedia.org/wiki/Digital_read_out#Glass_scales&#34;&gt;Glass scale&lt;/a&gt; positioning is known to be used in the most accurate &lt;a href=&#34;http://en.wikipedia.org/wiki/Quality_control&#34;&gt;Quality Control&lt;/a&gt; equipment, like in &lt;a href=&#34;http://en.wikipedia.org/wiki/Coordinate-measuring_machine&#34;&gt;CMM Machines&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The initially three Swiss companies Tornos, Pétermann und Bechler can be traced back to the 1880s, today called &lt;a href=&#34;http://www.tornos.com/&#34;&gt;Tornos Holding&lt;/a&gt; is the oldest Sliding-Headstock Machine manufacturer still in business. The modern &lt;a href=&#34;http://www.tornos.com/&#34;&gt;Tornos&lt;/a&gt; with the model Deco has made her self a name in the industry as being the fastest Sliding Headstock Machine. Initially the speed difference was mainly accomplished by using belt drives where other manufacturers used gear. Belt drives came at a price, but where speed is almost everything; accuracy comes first, that price was often worth paying. &lt;a href=&#34;http://www.tornos.com/&#34;&gt;Tornos&lt;/a&gt; also took the lead in offline programming. The advantage of offline programming was that the machine was in production while the programming took place on a desktop computer. The disadvantage used to be that minor changes to the programming had to go over the desktop and couldn&amp;rsquo;t be added easily on the machine.&lt;/p&gt;

&lt;p&gt;Following the lead &lt;a href=&#34;http://www.index-werke.de/&#34;&gt;Traub&lt;/a&gt; introduced an offline programming system, which is production ready since 2009 called WinFlex. &lt;a href=&#34;http://www.index-werke.de/&#34;&gt;Traub&lt;/a&gt; makes the most versatile and technology advanced Sliding-Headstock Machines, the &lt;a href=&#34;http://www.index-werke.de/&#34;&gt;Traub&lt;/a&gt; TNL12 and TNL26. With the TNL26 you can have 13 axis in motion, while 4 &lt;a href=&#34;http://en.wikipedia.org/wiki/Cutting_tool&#34;&gt;cutting tools&lt;/a&gt; are engaged in the material simultaneously producing &lt;a href=&#34;http://en.wikipedia.org/wiki/chips&#34;&gt;chips&lt;/a&gt;. &lt;a href=&#34;http://www.index-werke.de/&#34;&gt;TRAUB Drehmaschinen&lt;/a&gt; is a German company that is owned and operated by &lt;a href=&#34;http://www.index-werke.de/&#34;&gt;INDEX-Werke GmbH &amp;amp; Co. KG Hahn &amp;amp; Tessky&lt;/a&gt; since 1997.&lt;/p&gt;

&lt;h2&gt;Manufacturers&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.index-werke.de/&#34;&gt;Traub / Index&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://us.dmg.com/&#34;&gt;Gildemeister&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.marucit.com/&#34;&gt;Citizen&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.tornos.com/&#34;&gt;Tornos&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.starcnc.com/&#34;&gt;Star&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.tsugami.co.jp/&#34;&gt;Tsugami&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;External links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.jurabernois.ch/en/discoveries/museums.646/swiss-type-automatic-lathe-musem-moutier.1026.html&#34;&gt;Swiss-Type automatic lathe and history musem, Moutier&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.micromanufacturing.com/showthread.php?t=1091&#34;&gt;Tools, tactics and tips for productive Swiss-style Machining&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.todaysmachiningworld.com/how-it-works-%E2%80%93-why-swiss/&#34;&gt;How It Works – Why Swiss?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Justice isn&#39;t justifiable</title>
      <link>http://www.robotamer.com/blog/2010-06-03-justice-isnt-justifiable.html</link>
      <pubDate>Thu, 03 Jun 2010 00:13:05 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2010-06-03-justice-isnt-justifiable.html</guid>
      <description>&lt;p&gt;&lt;em&gt;The time, effort and money it takes to get justice isn&amp;rsquo;t justifiable!&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dennis T Kaplan (June 2nd, 2010)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Creating models for the Zend Framework from command line via phpcli</title>
      <link>http://www.robotamer.com/blog/2010-03-18-creating-models-for-the-zend-framework-from-command-line-via-phpcli.html</link>
      <pubDate>Thu, 18 Mar 2010 22:07:15 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2010-03-18-creating-models-for-the-zend-framework-from-command-line-via-phpcli.html</guid>
      <description>&lt;p&gt;This is a php cli script that will create a database model from the database provided&lt;/p&gt;

&lt;p&gt;Download via git from &lt;a href=&#34;http://github.com/pzzazz/phpcli&#34;&gt;github -&amp;gt; phpcli&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;php zend/model.php -h

This is a command line PHP script.

Set table

Options:
-path=[ ]
-table=[ ]

Usage:
php zend/model.php -arg=value
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Database Structure:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE users (
      Alias TEXT UNIQUE,
      Password TEXT,
      eMail TEXT,
      Avatar TEXT,
      Timezone TEXT,
      IP TEXT,
      count INTEGER,
      cookie TEXT,
      vars TEXT,
      status INTEGER DEFAULT 1,
      added date,
      updated datetime,
      PRIMARY KEY(Alias)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Sample Output:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ php zend/model.php -path=/var/www/TaMeR/data/tmp.db3 -table=users






class _Model_users
{
    protected $_Alias;
    protected $_Password;
    protected $_eMail;
    protected $_Avatar;
    protected $_Timezone;
    protected $_IP;
    protected $_count;
    protected $_cookie;
    protected $_vars;
    protected $_status;
    protected $_added;
    protected $_updated;


    public function setAlias($Alias){
        $this-&amp;gt;_Alias = (string) $Alias;
        return $this;
    }

    public function getAlias($Alias){
        return $this-&amp;gt;_Alias;
    }

    public function setPassword($Password){
        $this-&amp;gt;_Password = (string) $Password;
        return $this;
    }

    public function getPassword($Password){
        return $this-&amp;gt;_Password;
    }

    public function seteMail($eMail){
        $this-&amp;gt;_eMail = (string) $eMail;
        return $this;
    }

    public function geteMail($eMail){
        return $this-&amp;gt;_eMail;
    }

    public function setAvatar($Avatar){
        $this-&amp;gt;_Avatar = (string) $Avatar;
        return $this;
    }

    public function getAvatar($Avatar){
        return $this-&amp;gt;_Avatar;
    }

    public function setTimezone($Timezone){
        $this-&amp;gt;_Timezone = (string) $Timezone;
        return $this;
    }

    public function getTimezone($Timezone){
        return $this-&amp;gt;_Timezone;
    }

    public function setIP($IP){
        $this-&amp;gt;_IP = (string) $IP;
        return $this;
    }

    public function getIP($IP){
        return $this-&amp;gt;_IP;
    }

    public function setcount($count){
        $this-&amp;gt;_count = (int) $count;
        return $this;
    }

    public function getcount($count){
        return $this-&amp;gt;_count;
    }

    public function setcookie($cookie){
        $this-&amp;gt;_cookie = (string) $cookie;
        return $this;
    }

    public function getcookie($cookie){
        return $this-&amp;gt;_cookie;
    }

    public function setvars($vars){
        $this-&amp;gt;_vars = (string) $vars;
        return $this;
    }

    public function getvars($vars){
        return $this-&amp;gt;_vars;
    }

    public function setstatus($status){
        $this-&amp;gt;_status = (int) $status;
        return $this;
    }

    public function getstatus($status){
        return $this-&amp;gt;_status;
    }

    public function setadded($added){
        $this-&amp;gt;_added = (string) $added;
        return $this;
    }

    public function getadded($added){
        return $this-&amp;gt;_added;
    }

    public function setupdated($updated){
        $this-&amp;gt;_updated = (string) $updated;
        return $this;
    }

    public function getupdated($updated){
        return $this-&amp;gt;_updated;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Creating models for the Zend Framework from command line via phpcli.</title>
      <link>http://www.robotamer.com/blog/2010-03-18-7.html</link>
      <pubDate>Thu, 18 Mar 2010 20:20:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2010-03-18-7.html</guid>
      <description>&lt;p&gt;Creating models for the Zend Framework from command line via phpcli.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php zend/model.php -h&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is a command line PHP script.&lt;/p&gt;

&lt;p&gt;Set table&lt;/p&gt;

&lt;p&gt;Options:
    -path=[ ]
    -table=[ ]&lt;/p&gt;

&lt;p&gt;Usage:
php zend/model.php -arg=value&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/phpcli$ php zend/model.php -path=/var/www/TaMeR/data/tmp.db3 -table=users&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Sample Output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Database Structure:
    CREATE TABLE users (
    Alias TEXT UNIQUE,
    Password TEXT,
    eMail TEXT,
    Avatar TEXT,
    Timezone TEXT,
    IP TEXT,
    count INTEGER,
    cookie TEXT,
    vars TEXT,
    status INTEGER DEFAULT 1,
    added date,
    updated datetime,
    PRIMARY KEY(Alias)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/phpcli$ php zend/model.php -path=/var/www/TaMeR/data/tmp.db3 -table=user
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-
    class _Model_users
    {
    protected $_Alias;
    protected $_Password;
    protected $_eMail;
    protected $_Avatar;
    protected $_Timezone;
    protected $_IP;
    protected $_count;
    protected $_cookie;
    protected $_vars;
    protected $_status;
    protected $_added;
    protected $_updated;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function setAlias($Alias){
    $this-&amp;gt;_Alias = (string) $Alias;
    return $this;
}

public function getAlias($Alias){
    return $this-&amp;gt;_Alias;
}

public function setPassword($Password){
    $this-&amp;gt;_Password = (string) $Password;
    return $this;
}

public function getPassword($Password){
    return $this-&amp;gt;_Password;
}

public function seteMail($eMail){
    $this-&amp;gt;_eMail = (string) $eMail;
    return $this;
}

public function geteMail($eMail){
    return $this-&amp;gt;_eMail;
}

public function setAvatar($Avatar){
    $this-&amp;gt;_Avatar = (string) $Avatar;
    return $this;
}

public function getAvatar($Avatar){
    return $this-&amp;gt;_Avatar;
}

public function setTimezone($Timezone){
    $this-&amp;gt;_Timezone = (string) $Timezone;
    return $this;
}

public function getTimezone($Timezone){
    return $this-&amp;gt;_Timezone;
}

public function setIP($IP){
    $this-&amp;gt;_IP = (string) $IP;
    return $this;
}

public function getIP($IP){
    return $this-&amp;gt;_IP;
}

public function setcount($count){
    $this-&amp;gt;_count = (int) $count;
    return $this;
}

public function getcount($count){
    return $this-&amp;gt;_count;
}

public function setcookie($cookie){
    $this-&amp;gt;_cookie = (string) $cookie;
    return $this;
}

public function getcookie($cookie){
    return $this-&amp;gt;_cookie;
}

public function setvars($vars){
    $this-&amp;gt;_vars = (string) $vars;
    return $this;
}

public function getvars($vars){
    return $this-&amp;gt;_vars;
}

public function setstatus($status){
    $this-&amp;gt;_status = (int) $status;
    return $this;
}

public function getstatus($status){
    return $this-&amp;gt;_status;
}

public function setadded($added){
    $this-&amp;gt;_added = (string) $added;
    return $this;
}

public function getadded($added){
    return $this-&amp;gt;_added;
}

public function setupdated($updated){
    $this-&amp;gt;_updated = (string) $updated;
    return $this;
}

public function getupdated($updated){
    return $this-&amp;gt;_updated;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>PHP goto statement</title>
      <link>http://www.robotamer.com/blog/php-goto.html</link>
      <pubDate>Sat, 13 Mar 2010 16:15:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/php-goto.html</guid>
      <description>&lt;p&gt;I just discovered that the &lt;a href=&#34;http://www.php.net/manual/en/control-structures.goto.php&#34;&gt;goto statement&lt;/a&gt;
is available since php 5.3&lt;br /&gt;
I love the guys from php for that.&lt;br /&gt;
I am a hobby programmer and unlike the processionals, I learned OOP via php, which is great but
having &lt;a href=&#34;http://www.php.net/manual/en/control-structures.goto.php&#34;&gt;goto&lt;/a&gt; available like back in the Amiga days made my day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans error</title>
      <link>http://www.robotamer.com/blog/2010-03-07-9.html</link>
      <pubDate>Sun, 07 Mar 2010 19:21:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2010-03-07-9.html</guid>
      <description>&lt;p&gt;I been using Netbeans and following solved the problem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;manticore:/etc/sysctl.d# telnet ::ffff:192.168.1.1
Trying ::ffff:192.168.1.1...
telnet: Unable to connect to remote host: Network is unreachable
manticore:/etc/sysctl.d# sysctl net.ipv6.bindv6only
net.ipv6.bindv6only = 1
manticore:/etc/sysctl.d# sysctl net.ipv6.bindv6only=0
net.ipv6.bindv6only = 0
manticore:/etc/sysctl.d# telnet ::ffff:192.168.1.1
Trying ::ffff:192.168.1.1...
Connected to ::ffff:192.168.1.1.
Escape character is &#39;^]&#39;.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Zend ACL</title>
      <link>http://www.robotamer.com/blog/2008-04-27-21.html</link>
      <pubDate>Sun, 27 Apr 2008 19:50:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/blog/2008-04-27-21.html</guid>
      <description>&lt;p&gt;Tamer_ACL is a simple Zend Framework ACL plugin that uses the sqlite backend to store all the data.&lt;/p&gt;

&lt;h4&gt;How To Inatall&lt;/h4&gt;

&lt;p&gt;Make sure you have a table called &lt;strong&gt;role&lt;/strong&gt; in your authentication table and a table called &lt;strong&gt;alias&lt;/strong&gt; you may change that to username if you like. The sql code is below.&lt;br /&gt;
Below are the files.&lt;br /&gt;
Before each file you will find installation instructions that should work even for the most novice Linux / Zend Framework developer.&lt;/p&gt;

&lt;h4&gt;Resources&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.phpclasses.org/browse/package/4100.html&#34;&gt;phpclasses.org&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://code.google.com/p/tamer&#34;&gt;Google code / REPO&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Todo&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Admin Backend&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4&gt;ZEND_ROOT/backstrap.php&lt;/h4&gt;

&lt;p&gt;Create acl object&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;include_once &amp;quot;Tamer/Acl.php&amp;quot;;
$acl = new Tamer_Acl();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the Tamer_Plugin_Auth to the Zend Front Controller&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;$front-&amp;gt;setControllerDirectory(APPS . &#39;/default/controllers&#39;)
        -&amp;gt;setBaseUrl($cfg-&amp;gt;baseUrl)
        -&amp;gt;registerPlugin(new Tamer_Plugin_Auth($auth, $acl))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;ZEND_ROOT/library/Tamer/Acl.php&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;
&amp;lt;?php
require_once &#39;Zend/Acl.php&#39;;
require_once &#39;Zend/Acl/Role.php&#39;;
require_once &#39;Zend/Acl/Resource.php&#39;;
require_once &#39;Zend/Db/Adapter/Pdo/Sqlite.php&#39;;

class Tamer_ACL extends Zend_ACL 
{
        public $alias;
        public $role;
        
        public function __construct($alias, $role)
        {       
                $this-&amp;gt;alias = $alias;
                $this-&amp;gt;role = $role;
                $sqlite = new TamerLiteACL($alias, $role);
                $result = $sqlite-&amp;gt;getAclRows();
                foreach($result[&#39;roles&#39;] as $v){
                        $this-&amp;gt;addRoles($v);
                }
                $this-&amp;gt;addResources($result[&#39;resources&#39;]);
                $this-&amp;gt;addAccess($result[&#39;access&#39;]);
        }
        
        private function addRoles($rows)
        {
                foreach($rows as $v){
                        if($v[&#39;parent&#39;] == &#39;&#39;){
                                $this-&amp;gt;addRole(new Zend_Acl_Role($v[&#39;role&#39;]));
                        }else{
                                $this-&amp;gt;addRole(new Zend_Acl_Role($v[&#39;role&#39;]), $v[&#39;parent&#39;]);
                        }
                }
        }
        
        private function addResources($rows)
        {
                foreach($rows as $v){
                        if($v[&#39;parent&#39;] == &#39;&#39;){
                                $this-&amp;gt;add(new Zend_Acl_Resource($v[&#39;resource&#39;]));
                        }else{
                                $this-&amp;gt;add(new Zend_Acl_Resource($v[&#39;resource&#39;]), $v[&#39;parent&#39;]);
                        }
                }
        }

        private function addAccess($rows)
        {
                foreach($rows as $v){
                        if($v[&#39;allow&#39;] == 1){
                                $this-&amp;gt;allow($v[&#39;role&#39;], $v[&#39;resource&#39;], $v[&#39;privilege&#39;]);
                        }else{
                                $this-&amp;gt;deny($v[&#39;role&#39;], $v[&#39;resource&#39;], $v[&#39;privilege&#39;]);
                        }
                }
        }
}


class TamerLiteACL 
{
        private $_sqlite_name = &#39;/db/config.db&#39;;
        private $_alias;
        private $_role;
        private $_result;
        
        public function __construct($alias, $role)
        {       
                $this-&amp;gt;_alias = $alias;
                $this-&amp;gt;_role = $role;
                
                try{
                        $this-&amp;gt;_sqliteAdapter = new Zend_Db_Adapter_Pdo_Sqlite(array(&#39;dbname&#39; =&amp;gt; ROOT.$this-&amp;gt;_sqlite_name));
                        $this-&amp;gt;_sqliteAdapter-&amp;gt;getConnection();
                } catch (Zend_Db_Adapter_Exception $e) {
                        echo &#39;adapter&amp;lt;pre&amp;gt;&#39;.$e-&amp;gt;getMessage().&#39;&amp;lt;/pre&amp;gt;&#39;;
                } catch (Zend_Exception $e) {
                        echo &#39;adapter&amp;lt;pre&amp;gt;&#39;.$e-&amp;gt;getMessage().&#39;&amp;lt;/pre&amp;gt;&#39;;
                }
                $this-&amp;gt;_sqliteAdapter-&amp;gt;getProfiler()-&amp;gt;setEnabled(true);

                $select = $this-&amp;gt;_sqliteAdapter-&amp;gt;select()
                                        -&amp;gt;from(&#39;acl_roles&#39;, array(&#39;role&#39;, &#39;parent&#39;))
                                        -&amp;gt;where(&#39;type = ?&#39;, 1);
                
                $stmt = $this-&amp;gt;_sqliteAdapter-&amp;gt;query($select);
                $this-&amp;gt;_result[&#39;roles&#39;][&#39;system&#39;] = $stmt-&amp;gt;fetchAll();
                
                $select = $this-&amp;gt;_sqliteAdapter-&amp;gt;select()
                                        -&amp;gt;from(&#39;acl_roles&#39;, array(&#39;role&#39;, &#39;parent&#39;))
                                        -&amp;gt;where(&#39;role = ?&#39;, $this-&amp;gt;_alias)
                                        -&amp;gt;orwhere(&#39;parent = ?&#39;, $this-&amp;gt;_alias);
                
                $stmt = $this-&amp;gt;_sqliteAdapter-&amp;gt;query($select);
                $this-&amp;gt;_result[&#39;roles&#39;][&#39;alias&#39;] = $stmt-&amp;gt;fetchAll();
                
                $stmt = $this-&amp;gt;_sqliteAdapter-&amp;gt;query(
                &amp;quot;SELECT resource, parent FROM acl_resources WHERE owner = &#39;system&#39; OR owner = ?&amp;quot;, $this-&amp;gt;_alias);
                $this-&amp;gt;_result[&#39;resources&#39;] = $rows = $stmt-&amp;gt;fetchAll();
                
                $stmt = $this-&amp;gt;_sqliteAdapter-&amp;gt;query(&#39;SELECT allow, role, resource, privilege FROM acl_access WHERE type = 1 ORDER BY chain&#39;);
                $this-&amp;gt;_result[&#39;access&#39;] = $rows = $stmt-&amp;gt;fetchAll();

                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }
        
        public function getAclRows()
        {
                return $this-&amp;gt;_result;
        }
}




class aclCreate extends Zend_ACL 
{
        public function __construct()
        {
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;index&#39;));
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;safe&#39;));
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;login&#39;), &#39;safe&#39;);
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;registration&#39;), &#39;safe&#39;);
                $this-&amp;gt;add(new Zend_Acl_Resource(&#39;password&#39;), &#39;safe&#39;);
                
                $this-&amp;gt;addRole(new Zend_Acl_Role(&#39;guest&#39;));
                $this-&amp;gt;deny(&#39;guest&#39;, &#39;safe&#39;, NULL);
                $this-&amp;gt;allow(&#39;guest&#39;, &#39;registration&#39;);
                $this-&amp;gt;allow(&#39;guest&#39;, &#39;login&#39;);
                $this-&amp;gt;deny(&#39;guest&#39;, &#39;password&#39;);
                $this-&amp;gt;allow(&#39;guest&#39;,&#39;index&#39;);
                
                $this-&amp;gt;addRole(new Zend_Acl_Role(&#39;member&#39;));
                $this-&amp;gt;allow(&#39;member&#39;, &#39;safe&#39;, NULL);
                
                $this-&amp;gt;addRole(new Zend_Acl_Role(&#39;admin&#39;));
                $this-&amp;gt;allow(&#39;admin&#39;);
        }

}

class TamerFile_ACL
{
        /*
        @ Call like this from bootstrap
                include_once &amp;quot;Tamer/Acl.php&amp;quot;;
                $acl = new Tamer_Acl();
                $acl = new aclCreate();
                $acl = $acl-&amp;gt;aclCheck();
        */
        protected $aclCfg;
        
        private $_sqlite_name = &#39;/db/config.db&#39;;
        private $_sqliteAdapter;
        private $_table; //Sqlite Table
        
        public $old = FALSE;

        public function __construct()
        {
                $this-&amp;gt;aclCfg = ROOT.&#39;/library/Tamer/Acl.php&#39;;

                try{
                        $this-&amp;gt;_sqliteAdapter = new Zend_Db_Adapter_Pdo_Sqlite(array(&#39;dbname&#39; =&amp;gt; ROOT.$this-&amp;gt;_sqlite_name));
                        $this-&amp;gt;_sqliteAdapter-&amp;gt;getConnection();
                } catch (Zend_Db_Adapter_Exception $e) {
                        echo &#39;adapter&amp;lt;pre&amp;gt;&#39;.$e-&amp;gt;getMessage().&#39;&amp;lt;/pre&amp;gt;&#39;;
                } catch (Zend_Exception $e) {
                        echo &#39;adapter&amp;lt;pre&amp;gt;&#39;.$e-&amp;gt;getMessage().&#39;&amp;lt;/pre&amp;gt;&#39;;
                }
                //$this-&amp;gt;dropTable();
                //$this-&amp;gt;makeTable();
                //$this-&amp;gt;aclCheck();
        }
        
        public function aclCheck()
        {
                $ftime = filemtime($this-&amp;gt;aclCfg);
                $sql = &#39;SELECT time FROM acl_array WHERE time = ?&#39;;
                if($this-&amp;gt;_result = $this-&amp;gt;_sqliteAdapter-&amp;gt;fetchRow($sql, $ftime)){     
                        return  $this-&amp;gt;aclGet();
                }else{
                        $acl = new aclCreate();
                        $this-&amp;gt;aclDelete();
                        $this-&amp;gt;aclSave($acl);
                        return $acl;
                }
        }

        public function aclGet()
        {
                $sql = &#39;SELECT acl FROM acl_array WHERE time = ?&#39;;
                $ftime = filemtime($this-&amp;gt;aclCfg);
                $this-&amp;gt;_result = $this-&amp;gt;_sqliteAdapter-&amp;gt;fetchRow($sql, $ftime);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
                
                return unserialize($this-&amp;gt;_result[&#39;acl&#39;]);
        }
        
        public function aclSave($array)
        {
                $filemtime = filemtime($this-&amp;gt;aclCfg);
                $array = serialize($array);
                $data = array(&#39;time&#39;=&amp;gt;$filemtime,&#39;acl&#39;=&amp;gt;$array);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;insert(&#39;acl_array&#39;, $data);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }

        public function aclDelete()
        {
                $this-&amp;gt;_sqliteAdapter-&amp;gt;delete(&#39;acl_array&#39;);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }

        
        /**
         * creates the db table
         *
         * @param array $fields
         */
        public function dropTable()
        {
            $this-&amp;gt;_result = $this-&amp;gt;_sqliteAdapter-&amp;gt;getConnection()-&amp;gt;exec(&#39;DROP TABLE acl_array&#39;);
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }
        
        /**
         * creates the db table
         *
         * @param array $fields
         */
        public function makeTable()
        {
                $sql[] = &#39;CREATE TABLE IF NOT EXISTS acl_roles (role TEXT(50) NOT NULL,parent TEXT(50) default NULL)&#39;;
                $sql[] = &#39;CREATE TABLE IF NOT EXISTS acl_resources (resource TEXT(50) NOT NULL,parent TEXT(50) default NULL)&#39;;
                $sql[] = &#39;CREATE TABLE IF NOT EXISTS acl_access (role TEXT(50) NOT NULL,resource  Text(50) NOT NULL,privilege Text(50),allow Boolean NOT NULL DEFAULT 0)&#39;;
                $sql[] = &#39;CREATE table IF NOT EXISTS acl_array(time INTEGER PRIMARY KEY, acl TEXT)&#39;;
                foreach($sql as $v){
                        $this-&amp;gt;_sqliteAdapter-&amp;gt;query($v);
                }
                $this-&amp;gt;_table = true;
                $this-&amp;gt;_sqliteAdapter-&amp;gt;closeConnection();
        }       
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;ZEND_ROOT/library/Tamer/Plugin/Auth.php&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;php&#34;&gt;&amp;lt;?php

class Tamer_Plugin_Auth extends Zend_Controller_Plugin_Abstract
{
        private $_auth;
        private $_acl;
        
        private $_noauth = array(&#39;module&#39; =&amp;gt; &#39;safe&#39;,
                                                        &#39;controller&#39; =&amp;gt; &#39;login&#39;,
                                                        &#39;action&#39; =&amp;gt; &#39;index&#39;);
        
        private $_noacl = array(&#39;module&#39; =&amp;gt; &#39;default&#39;,
                                                        &#39;controller&#39; =&amp;gt; &#39;error&#39;,
                                                        &#39;action&#39; =&amp;gt; &#39;privileges&#39;);
        
        public function __construct($auth, $acl)
        {
                $this-&amp;gt;_auth = $auth;
                $this-&amp;gt;_acl = $acl;
        }
        
        public function preDispatch(Zend_Controller_Request_Abstract $request)
        {
                if ($this-&amp;gt;_auth-&amp;gt;hasIdentity()) {
                        $role = $this-&amp;gt;_auth-&amp;gt;getIdentity()-&amp;gt;role;
                } else {
                        $role = &#39;guest&#39;;
                }

                $controller = $request-&amp;gt;controller;
                $action         = $request-&amp;gt;action;
                $module         = $request-&amp;gt;module;
                $resource       = $controller;
                
                if (!$this-&amp;gt;_acl-&amp;gt;has($resource)) {
                        $resource = null;
                }
                
                if (!$this-&amp;gt;_acl-&amp;gt;isAllowed($role, $resource, $action)) {
                        if (!$this-&amp;gt;_auth-&amp;gt;hasIdentity()) {
                                $module = $this-&amp;gt;_noauth[&#39;module&#39;];
                                $controller = $this-&amp;gt;_noauth[&#39;controller&#39;];
                                $action = $this-&amp;gt;_noauth[&#39;action&#39;];
                        } else {
                                $module = $this-&amp;gt;_noacl[&#39;module&#39;];
                                $controller = $this-&amp;gt;_noacl[&#39;controller&#39;];
                                $action = $this-&amp;gt;_noacl[&#39;action&#39;];
                        }
                }
                
                $request-&amp;gt;setModuleName($module);
                $request-&amp;gt;setControllerName($controller);
                $request-&amp;gt;setActionName($action);
        }
}
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;ZEND_ROOT/db/config.sql&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;DROP TABLE IF EXISTS acl_array;
DROP TABLE IF EXISTS acl_roles;
DROP TABLE IF EXISTS acl_resources;
DROP TABLE IF EXISTS acl_access;
DROP TRIGGER IF EXISTS update_acl_roles;
DROP TRIGGER IF EXISTS update_acl_roles_access;
DROP TRIGGER IF EXISTS update_acl_roles_parent;
DROP TRIGGER IF EXISTS update_acl_resources_owner;
DROP TRIGGER IF EXISTS update_acl_access_role;

PRAGMA auto_vacuum = 1;
PRAGMA encoding = &amp;quot;UTF-8&amp;quot;;

BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS acl_roles (role TEXT(50) NOT NULL,parent TEXT(50) default NULL, type Boolean DEFAULT NULL);

CREATE TABLE IF NOT EXISTS acl_resources (owner TEXT(50) NOT NULL,
resource TEXT(50) NOT NULL,parent TEXT(50) default NULL);

CREATE TABLE IF NOT EXISTS acl_access (role TEXT(50) NOT NULL,
resource TEXT(50) DEFAULT NULL, privilege Text(50) DEFAULT NULL, 
allow Boolean DEFAULT NULL, chain INTEGER DEFAULT NULL, type Boolean DEFAULT NULL);

CREATE TRIGGER update_acl_roles_parent UPDATE OF parent ON acl_roles 
        BEGIN UPDATE acl_roles SET parent = new.role WHERE parent = old.role;
        END;
CREATE TRIGGER update_acl_resources_owner UPDATE OF owner ON acl_resources 
        BEGIN UPDATE acl_resources SET owner = new.role WHERE owner = old.role; 
        END;
CREATE TRIGGER update_acl_access_role UPDATE OF role ON acl_access 
        BEGIN UPDATE acl_access SET role = new.role WHERE role = old.role; 
        END;


INSERT INTO &amp;quot;acl_roles&amp;quot; VALUES (&#39;admin&#39;,NULL,1);
INSERT INTO &amp;quot;acl_roles&amp;quot; VALUES (&#39;guest&#39;,NULL,1);
INSERT INTO &amp;quot;acl_roles&amp;quot; VALUES (&#39;member&#39;,NULL,1);
INSERT INTO &amp;quot;acl_roles&amp;quot; VALUES (&#39;developer&#39;,&#39;member&#39;,1);

INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;index&#39;,NULL);
INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;safe&#39;,NULL);
INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;login&#39;,&#39;safe&#39;);
INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;registration&#39;,&#39;safe&#39;);
INSERT INTO &amp;quot;acl_resources&amp;quot; VALUES (&#39;system&#39;,&#39;admin&#39;,&#39;safe&#39;);

INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;admin&#39;,NULL,NULL,1,NULL,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;guest&#39;,&#39;index&#39;,NULL,1,1,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;guest&#39;,&#39;safe&#39;,NULL,NULL,2,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;guest&#39;,&#39;login&#39;,NULL,1,3,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;guest&#39;,&#39;registration&#39;,NULL,1,4,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;member&#39;,&#39;safe&#39;,NULL,1,1,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;member&#39;,&#39;login&#39;,NULL,NULL,2,1);
INSERT INTO &amp;quot;acl_access&amp;quot; VALUES (&#39;member&#39;,&#39;registration&#39;,NULL,NULL,3,1);
COMMIT;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Smtp</title>
      <link>http://www.robotamer.com/code/go/gotamer/mail.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/mail.html</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;    package main
    
    import &amp;quot;gotamer/mail&amp;quot; // bitbucket.org/gotamer/mail if you install with go get
    
    func main() {

        // use defer when you send with mail.Send(), not needed for mail.Write()
        defer mail.final() 

        s := new(Smtp)
        s.SetHostname(&amp;quot;smtp.gmail.com&amp;quot;)
        s.SetHostport(587)
        s.SetFromName(&amp;quot;GoTamer&amp;quot;)
        s.SetFromAddr(&amp;quot;xxxx@gmail.com&amp;quot;)
        s.SetPassword(&amp;quot;********&amp;quot;)
        s.AddToAddr(&amp;quot;xxxx@yahoo.com&amp;quot;)
        s.SetSubject(&amp;quot;GoTamer test mail&amp;quot;)
        s.SetBody(&amp;quot;Let&#39;s see if we get this&amp;quot;)
        if err := s.Write(); err != nil {
            // Handle your errors here
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As an alternative to &lt;code&gt;AddToAddr()&lt;/code&gt; there is &lt;code&gt;SetToAddrs()&lt;/code&gt;. With &lt;code&gt;SetToAddrs()&lt;/code&gt; you can set one or more recipients as a comma separated list.&lt;/p&gt;

&lt;h4&gt;A note on the host.&lt;/h4&gt;

&lt;p&gt;Go SMTP does not allow to connect to SMPT servers with a self signed certs.&lt;/p&gt;

&lt;p&gt;You will get an error like following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x509: certificate signed by unknown authority
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The way I got around that is by using &lt;a href=&#34;http://www.cacert.org&#34; title=&#34;CA Cert&#34;&gt;CAcert&lt;/a&gt;. &lt;a href=&#34;http://www.cacert.org&#34; title=&#34;CA Cert&#34;&gt;CAcert&lt;/a&gt; provides FREE digital certificates.&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/mail&#34; title=&#34;GoTamer Mail Pkg Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/mail&#34; title=&#34;GoTamer Mail Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ping</title>
      <link>http://www.robotamer.com/code/go/gotamer/ping.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/ping.html</guid>
      <description>&lt;p&gt;There are two ways to ping
 * go internal ping
 * sys ping&lt;/p&gt;

&lt;p&gt;The go internal ping works only as root, therefor a sys ping is also provided until I can figure out how to fix this problem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.robotamer.com&#34; title=&#34;Documentation&#34;&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code is available at &lt;a href=&#34;https://bitbucket.org/gotamer&#34;&gt;https://bitbucket.org/gotamer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Encode/Decode between struct and byte slice</title>
      <link>http://www.robotamer.com/code/go/gotamer/sbs.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/sbs.html</guid>
      <description>&lt;p&gt;&lt;em&gt;sbs&lt;/em&gt; stands for Struct to Byte Slice and back to Struct&lt;/p&gt;

&lt;h2&gt;Internals:&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;sbs&lt;/em&gt; encodes your struct first to a Gob, then it convers it to a byte slice; it reverses the process for decoding.&lt;/p&gt;

&lt;h4&gt;Example&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;
    type Foo struct {
        A int
        B string
    }

    p := &amp;amp;Foo{111,&amp;quot;A string&amp;quot;}

    byteslice, err := sbs.Enc(p)
    ...

    foo := new(Foo)
    structobject, err := sbs.Dec(foo, byteslice)
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Code is available at &lt;a href=&#34;https://bitbucket.org/gotamer/sbs&#34;&gt;https://bitbucket.org/gotamer/sbs&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Session</title>
      <link>http://www.robotamer.com/code/go/gotamer/session.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/session.html</guid>
      <description>&lt;p&gt;Feutures:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom backends to store session data locally.&lt;/li&gt;
&lt;li&gt;Flash messages: session values that last until read.&lt;/li&gt;
&lt;li&gt;Low dependency and therefore versitile, for example, it does not depened on the go http pkg&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Built-in backends to store sessions locally:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;storeMap ⬄ A in memory map[string]sessions store&lt;/li&gt;
&lt;li&gt;storeLeveldb ⬄ Stores session data in a leveldb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Simple Sample code the uses the default storeMap backend:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;package main

import(
    &amp;quot;bitbucket.org/gotamer/net/session&amp;quot;
    &amp;quot;fmt&amp;quot;
)

func main(){
    id := save()
    load(id)
}

func save() string {
    sess := session.New()
    sess.Set(&amp;quot;Alias&amp;quot;,&amp;quot;GoTamer&amp;quot;)
    err := sess.Save()
    Check(err)
    fmt.Println(&amp;quot;Session Saved&amp;quot;, sess)
    sid, err := sess.Id()
    Check(err)
    return sid
}

func load(sid string){
    sess, err := session.Load(sid)
    Check(err)
    fmt.Println(&amp;quot;Session Load: &amp;quot;, sess)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sample code the uses the leveldb backend:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;package main

import(
    &amp;quot;bitbucket.org/gotamer/net/session&amp;quot;
    &amp;quot;fmt&amp;quot;
)

var path = &amp;quot;/tmp/sessions&amp;quot;

func init(){
    session.StoreLeveldb(path)  
}

func main(){
    id := save()
    load(id)
}

func save() string {
    sess := session.New()
    sess.Set(&amp;quot;Alias&amp;quot;,&amp;quot;GoTamer&amp;quot;)
    err := sess.Save()
    Check(err)
    fmt.Println(&amp;quot;Session Saved&amp;quot;, sess)
    sid, err := sess.Id()
    Check(err)
    return sid
}

func load(sid string){
    sess, err := session.Load(sid)
    Check(err)
    fmt.Println(&amp;quot;Session Load: &amp;quot;, sess)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Additional backends can be created by simply implementing following interfaces:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;type Store interface {
    Save(session *sessionObject) (err error)
    Load(sid string) (session *sessionObject, err error)
    Delete(sid string) (err error)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some code has been borrowed from &lt;a href=&#34;http://www.stathat.com/src/bingo&#34;&gt;http://www.stathat.com/src/bingo&lt;/a&gt; witch is licensed also under MIT.&lt;/p&gt;

&lt;p&gt;Code is available at &lt;a href=&#34;https://bitbucket.org/gotamer&#34;&gt;https://bitbucket.org/gotamer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Your Everyday Go Tools</title>
      <link>http://www.robotamer.com/code/go/gotamer/tools.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/tools.html</guid>
      <description>&lt;p&gt;Generates a random number between min and max&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func IRand(min, max int) int
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generates a random strings between min and max&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func SRand(min, max int, readable bool) string
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reverses the string&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func Reverse(s string) strings
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Shuffles the string&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func Shuffle(s string) string
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/tools&#34; title=&#34;Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/tools&#34; title=&#34;Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>﻿Go Snippets</title>
      <link>http://www.robotamer.com/code/go/index.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/index.html</guid>
      <description>&lt;h2&gt;time&lt;/h2&gt;

&lt;h3&gt;Unix time to Date&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;d := time.Unix(1348102780, 0).Format(time.UnixDate)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://play.golang.org/p/ZNY_r72Mbj&#34; title=&#34;GoPlay&#34;&gt;GoPlay&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;unicode/utf8&lt;/h2&gt;

&lt;h3&gt;RuneCount&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;rc := utf8.RuneCount([]byte(&amp;quot;dsjkdshdjsdh..Ü..js&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://play.golang.org/p/D428-5_J6V&#34; title=&#34;GoPlay&#34;&gt;GoPlay&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;encoding/base64&lt;/h2&gt;

&lt;h3&gt;Encode&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;value = base64.StdEncoding.EncodeToString([]byte(&amp;quot;Hello World&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Decode&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;hw, err := base64.StdEncoding.DecodeString(value)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://play.golang.org/p/JrdcvJ_G5F&#34; title=&#34;GoPlay&#34;&gt;GoPlay&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Markdown Syntax</title>
      <link>http://www.robotamer.com/code/md-syntax.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/md-syntax.html</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#block&#34;&gt;Block Elements&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#p&#34;&gt;Paragraphs and Line Breaks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#header&#34;&gt;Headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#blockquote&#34;&gt;Blockquotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#list&#34;&gt;Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#precode&#34;&gt;Code Blocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hr&#34;&gt;Horizontal Rules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#span&#34;&gt;Span Elements&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#link&#34;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#em&#34;&gt;Emphasis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#code&#34;&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#img&#34;&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#misc&#34;&gt;Miscellaneous&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#backslash&#34;&gt;Backslash Escapes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#autolink&#34;&gt;Automatic Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;block&#34;&gt;Block Elements&lt;/h2&gt;

&lt;h3 id=&#34;p&#34;&gt;Paragraphs and Line Breaks&lt;/h3&gt;

&lt;p&gt;Two spaces on the end of a line&lt;br /&gt;
    &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Blank line&lt;br /&gt;
    &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;header&#34;&gt;Headers&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;This is an H1
=============

This is an H2
-------------

# This is an H1

## This is an H2

###### This is an H6

# This is an H1 #

## This is an H2 ##

### This is an H3 ######
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;blockquote&#34;&gt;Blockquotes&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&amp;gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&amp;gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&amp;gt; 
&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&amp;gt; id sem consectetuer libero luctus adipiscing.


&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by
adding additional levels of &lt;code&gt;&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Blockquotes can contain other Markdown elements, including headers, lists,
and code blocks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; ## This is a header.
&amp;gt; 
&amp;gt; 1.   This is the first list item.
&amp;gt; 2.   This is the second list item.
&amp;gt; 
&amp;gt; Here&#39;s some example code:
&amp;gt; 
&amp;gt;     return shell_exec(&amp;quot;echo $input | $markdown_script&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;list&#34;&gt;Lists&lt;/h3&gt;

&lt;p&gt;&amp;ndash; as list markers:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*   Red
*   Green
*   Blue
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is equivalent to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+   Red
+   Green
+   Blue
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-   Red
-   Green
-   Blue
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ordered lists use numbers followed by periods:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.  Bird
2.  McHale
3.  Parish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is okay:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.  Bird
1.  McHale
1.  Parish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or even:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3. Bird
1. McHale
8. Parish

*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.

*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;precode&#34;&gt;Code Blocks&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;This is a normal paragraph:

    This is a code block.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Markdown will generate:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;This is a normal paragraph:&amp;lt;/p&amp;gt;

&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;This is a code block.
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;hr&#34;&gt;Horizontal Rules&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;* * *

***

*****

- - -

---------------------------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;span&#34;&gt;Span Elements&lt;/h2&gt;

&lt;h3 id=&#34;link&#34;&gt;Links&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;This is [an example](http://example.com/ &amp;quot;Title&amp;quot;) inline link.


This is [an example][id] reference-style link.
[id]: http://example.com/  &amp;quot;Optional Title Here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;em&#34;&gt;Emphasis&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will produce:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;em&amp;gt;single asterisks&amp;lt;/em&amp;gt;

&amp;lt;em&amp;gt;single underscores&amp;lt;/em&amp;gt;

&amp;lt;strong&amp;gt;double asterisks&amp;lt;/strong&amp;gt;

&amp;lt;strong&amp;gt;double underscores&amp;lt;/strong&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Use the `printf()` function.

&amp;lt;p&amp;gt;Use the &amp;lt;code&amp;gt;printf()&amp;lt;/code&amp;gt; function.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;img&#34;&gt;Images&lt;/h3&gt;

&lt;p&gt;Inline image syntax looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;![Alt text](/path/to/img.jpg)
![Alt text](/path/to/img.jpg &amp;quot;Optional title&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reference-style image syntax looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;![Alt text][id]

[id]: url/to/image  &amp;quot;Optional title attribute&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;misc&#34;&gt;Miscellaneous&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;address@example.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;into something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;amp;#x6D;&amp;amp;#x61;i&amp;amp;#x6C;&amp;amp;#x74;&amp;amp;#x6F;:&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;
&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;
&amp;amp;#109;&amp;quot;&amp;gt;&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;
&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;&amp;amp;#109;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>jgdb</title>
      <link>http://www.robotamer.com/code/go/gotamer/jgdb.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/jgdb.html</guid>
      <description>&lt;h2&gt;About the implementation:&lt;/h2&gt;

&lt;p&gt;This project is in alha state!&lt;/p&gt;

&lt;h3&gt;Object Types&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Tuple (In Memory Database) &lt;em&gt;Beta&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;List (Single file persistent database) &lt;em&gt;Beta&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Object (Multi file persistent database) &lt;em&gt;Alpha&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Cache (Cache for Tuple) &lt;em&gt;Not yet implemented&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Backends&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Json&lt;/li&gt;
&lt;li&gt;Glob &lt;em&gt;Not yet implemented&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The major distinction between &lt;em&gt;List&lt;/em&gt; and &lt;em&gt;Object&lt;/em&gt; is that one, the &lt;em&gt;List type&lt;/em&gt; uses a single file as backend with each record placed in one line.&lt;br /&gt;
Where as the &lt;em&gt;Object&lt;/em&gt; type keeps each record in a separate file. The object type will keep track of these records with an index file, and also optionally with a strtree for fast in memory access.&lt;/p&gt;

&lt;h4&gt;How the List type works:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;The user creates a struct to his/her needs&lt;/li&gt;
&lt;li&gt;The database inherits that struct via an &lt;em&gt;Interface&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;The database converts that struct to include the map id using &lt;em&gt;jsonListStruct&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;jsonListStruct struct is used to Marshal the data in to a json file&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;What is planed so far:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Create a cache system with a user defined limit that keeps the most asked for items in a Tuple, as of now all data is being imported in to a Tuple.&lt;/li&gt;
&lt;li&gt;Create the vcs (git) backup store for the json backend&lt;/li&gt;
&lt;li&gt;Distribute with git push and pull&lt;/li&gt;
&lt;li&gt;Keep an open line of communication with glob between nodes&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Disadvantage:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;git is not the fastest distribution system&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Advantage:&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;All data is kept in plain text/json&lt;/li&gt;
&lt;li&gt;Backups are incremental, distributed and under version control.&lt;/li&gt;
&lt;li&gt;Distributed system. without the need for the master and slave concept.&lt;/li&gt;
&lt;li&gt;Every node is independent of the overall system, and can function even if all others fail.&lt;/li&gt;
&lt;li&gt;Database can get very big, bigger then what the memory can hold, and we will read less active data with io.Reader and bufio&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;FAQ&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;To get a proper distributed system you need a merge strategy for your git repositories. How would you solve conflicts?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As with everything I am open to suggestions, meanwhile I am planing following:&lt;br /&gt;
The strategy will differ by List or Object type database.&lt;br /&gt;
For example the List type database will not have any update only insert and delete.
The insert operation will easily be resolved by git, when nodes do their pull, save, add, commit and push cycle.&lt;/p&gt;

&lt;p&gt;When it comes to the delete operation, every node will before deleting a record, add lock on the file it plans to modify. Each node will be able to lock a file at pull time.
This means other nodes can still modify and commit all other files, just not the one locked by a node.
The lock will have a time limit as it does only takes a short time to perform a full cycle of pull, save, add, commit and push with git.&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.robotamer.com/code/go/gotamer/jgdb.html&#34; title=&#34;Website&#34;&gt;Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/jgdb&#34; title=&#34;GoTamer Pkg Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/jgdb&#34; title=&#34;GoTamer Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/jgdb/issues&#34; title=&#34;Bug Tracking&#34;&gt;Bug Tracking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Crypt</title>
      <link>http://www.robotamer.com/code/go/gotamer/crypt.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/crypt.html</guid>
      <description>&lt;p&gt;This will not pass Bank or Spy cryptographic requirements in todays world.&lt;br /&gt;
I do not make claims about its security, please see the license file for details.&lt;br /&gt;
&lt;em&gt;Advise: Please evaluate your needs and take additional measures to fit your needs. For example in my case I use multiple keys for each instance, and my application selects the keys randomly.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It is rune aware, it supports the full line of Go UTF-8 characters&lt;/p&gt;

&lt;p&gt;A list of UTF-8 characters can be found &lt;a href=&#34;http://www.robotamer.com/utf-8.html&#34; title=&#34;UTF-8 Character list&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/crypt&#34; title=&#34;GoTamer Pkg Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/crypt&#34; title=&#34;GoTamer Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Facade</title>
      <link>http://www.robotamer.com/code/php/phptamer/facade.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/phptamer/facade.html</guid>
      <description>&lt;p&gt;Facade&amp;rsquo;s main focus is a to be a component dependency substitution system,
and will achieve component interdependency via the facade programming pattern.&lt;/p&gt;

&lt;p&gt;With Facade you can build a cli or web framework by mixing components from
&lt;a href=&#34;http://pear.php.net&#34;&gt;Pear&lt;/a&gt;,
&lt;a href=&#34;http://zendframework.com/&#34;&gt;Zend&lt;/a&gt;,
&lt;a href=&#34;http://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;
or just standalone classes from let&amp;rsquo;s say
&lt;a href=&#34;http://www.phpclasses.org&#34;&gt;PHPClasses&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Facade is a sub component of PHPTamer, which includes a collection of libraries,
and recommends tested components to help you get started.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPTamer</title>
      <link>http://www.robotamer.com/code/php/phptamer/index.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/phptamer/index.html</guid>
      <description>&lt;p&gt;A system called PHPTamer Facade is in the works, Facade is a component dependency substitution system to achieve component interdependency via the facade programming pattern.&lt;/p&gt;

&lt;h2&gt;Predefined Variables&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;BR = &lt;br /&gt; or \n when in cli mode&lt;/li&gt;
&lt;li&gt;HR = Horizontal Rules&lt;/li&gt;
&lt;li&gt;DS = DIRECTORY_SEPARATOR&lt;/li&gt;
&lt;li&gt;HOSTNAME&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>RTCrypter</title>
      <link>http://www.robotamer.com/code/php/phptamer/rtcrypter.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/phptamer/rtcrypter.html</guid>
      <description>&lt;p&gt;RTCrypter does not require mcrypt, mhash or any other PHP extension, it uses only PHP.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$crypt = new RTCrypter();
$crypt-&amp;gt;setCharacters(&#39;#@|*-+.,!~`$%^&amp;amp;&amp;lt;&amp;gt;{}[]()0/\123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#39;);
$secretKey = $crypt-&amp;gt;genKey();


$crypt = new RTCrypter();
$crypt-&amp;gt;useBase64(FALSE); // TRUE is default
$crypt-&amp;gt;setCharacters(&#39;#@|*-+.,!~`$%^&amp;amp;&amp;lt;&amp;gt;{}[]()0/\123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#39;);
$crypt-&amp;gt;setScramble($secretKey);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Master Singleton Class</title>
      <link>http://www.robotamer.com/code/php/phptamer/rtsingleton.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/php/phptamer/rtsingleton.html</guid>
      <description>&lt;h4&gt;Via the factory&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$l = RTSingleton::factory(&#39;Translate&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Directs call&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$view = RTSingleton::Template();
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Class Alias&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;RTSingleton::alias(string $className, string $alias);

RTSingleton::alias(&#39;Template&#39;, &#39;V&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Aliased call &lt;em&gt;RTSingleton has an S alias by default&lt;/em&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$view = S::V();
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Set Object  &lt;em&gt;Not available in version 0.0.1&lt;/em&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;RTSingleton::set(object $class [, string $alias = NULL ] );

RTSingleton::set(new Aura\View\Template(), &#39;View&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Actually:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt; RTSingleton::set(require __dir__ . &#39;/../libs/composer/vendor/Aura/View/scripts/instance.php&#39;,&#39;V&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;No need for global variables&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;S::V()-&amp;gt;var = &#39;Master RTSingleton Class&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Use original class or alias or switch back and forth&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;echo RTSingleton::Template()-&amp;gt;fetch(__dir__ .&#39;/gui/layout.php&#39;);
echo S::V()-&amp;gt;fetch(__dir__ .&#39;/gui/otherlayout.php&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;See all the registered classes&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;print_r(S::getClasses());
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Conv</title>
      <link>http://www.robotamer.com/code/go/gotamer/conv.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/conv.html</guid>
      <description>&lt;h1&gt;Don&amp;rsquo;t use this!!!&lt;/h1&gt;

&lt;p&gt;Don&amp;rsquo;t even try to learn from it, this was one of my first Go codes, most of it is just plain wrong!&lt;/p&gt;

&lt;h4&gt;Converts from&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;string to byte&lt;/li&gt;
&lt;li&gt;string to int&lt;/li&gt;
&lt;li&gt;string to uint&lt;/li&gt;
&lt;li&gt;int    to string&lt;/li&gt;
&lt;li&gt;uint   to string&lt;/li&gt;
&lt;li&gt;byte   to string&lt;/li&gt;
&lt;li&gt;byte   to int&lt;/li&gt;
&lt;li&gt;[]byte to string&lt;/li&gt;
&lt;li&gt;string to []byte&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/conv&#34; title=&#34;GoTamer Conversion Pkg Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/conv&#34; title=&#34;GoTamer Conversion Repository&#34;&gt;Repository&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Feeds</title>
      <link>http://www.robotamer.com/feeds.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/feeds.html</guid>
      <description>&lt;script src=&#34;http://l.yimg.com/a/i/us/pps/listbadge_1.6.js&#34;&gt;{&#34;pipe_id&#34;:&#34;e372cc8ca5eb4908da5abeac03e00541&#34;,&#34;_btype&#34;:&#34;list&#34;}&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Copyright</title>
      <link>http://www.robotamer.com/license.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/license.html</guid>
      <description>&lt;h2&gt;Copyright &amp;copy; 2012 The GoTamer Authors. All rights reserved.&lt;/h2&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/li&gt;
&lt;li&gt;Neither the name of GoTamer nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
&amp;ldquo;AS IS&amp;rdquo; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cfg</title>
      <link>http://www.robotamer.com/code/go/gotamer/cfg.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/cfg.html</guid>
      <description>&lt;h3&gt;Features:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can define your config items in your application as a struct.&lt;/li&gt;
&lt;li&gt;You can save a json template of your struct&lt;/li&gt;
&lt;li&gt;You can save runtime modifications to the config&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Docs:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;import &amp;quot;bitbucket.org/gotamer/cfg&amp;quot;

func Load(filename string, o interface{}) (err error)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Load gets your config from the json file, and fills your struct with the option&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func Save(filename string, o interface{}) (err error)   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save will save your struct to the given filename, this is a good way to create a json template&lt;/p&gt;

&lt;h3&gt;Example:&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;go&#34;&gt;    package main

    import (
        &amp;quot;fmt&amp;quot;
        &amp;quot;bitbucket.org/gotamer/cfg&amp;quot;
        &amp;quot;os&amp;quot;
    )

    var Cfg *MainCfg

    type MainCfg struct {
        Name  string
    }

    func main() {
        Cfg = &amp;amp;MainCfg{&amp;quot;defaultAlias&amp;quot;}
        cfgpath := os.Getenv(&amp;quot;GOPATH&amp;quot;) + &amp;quot;/etc/myappname.json&amp;quot;
        err := cfg.Load(cfgpath, Cfg)
        if err != nil {
            cfg.Save(cfgpath, Cfg)
            fmt.Println(&amp;quot;\n\tPlease edit your configuration at: &amp;quot;, cfgpath, &amp;quot;\n&amp;quot;)
            os.Exit(0)
        }
        fmt.Printf(&amp;quot;%s&amp;quot;, Cfg)
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/cfg&#34; title=&#34;Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Bridge-Utils for LXC</title>
      <link>http://www.robotamer.com/linux/bridge-utils.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/bridge-utils.html</guid>
      <description>&lt;h2&gt;Bridging Network Connections&lt;/h2&gt;

&lt;p&gt;Install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install bridge-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start the bridge:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brctl addbr br0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit: /etc/network/interfaces&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# The loopback network interface
auto lo
iface lo inet loopback

# Bridge between eth0 and eth1
auto br0

# DHCP would look like this but we will use static
# iface br0 inet dhcp

iface br0 inet static
address 192.168.1.100
network 192.168.1.0
gateway 192.168.1.1
broadcast 192.168.1.255
netmask 255.255.255.0
dns-nameservers 192.168.1.1
#dns-search example.com 

  pre-up ip link set eth0 down
  pre-up ip link set eth1 down
  pre-up brctl addbr br0
  pre-up brctl addif br0 eth0 eth1
  pre-up ip addr flush dev eth0
  pre-up ip addr flush dev eth1
  post-down ip link set eth0 down
  post-down ip link set eth1 down
  post-down ip link set br0 down
  post-down brctl delif br0 eth0 eth1
  post-down brctl delbr br0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart network:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/networking stop
/etc/init.d/networking start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Turn on the bridge:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip link set br0 up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s check:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ifconfig
brctl show
ip addr show
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bridge Notes:
How to remove a bridge {bring down first then delete}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip link set br0 down
brctl delbr br0
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;LXC Setup&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;#cat /etc/network/interfaces
auto lo
iface lo inet loopback
up route add -net 127.0.0.0 netmask 255.0.0.0 dev lo
down route add -net 127.0.0.0 netmask 255.0.0.0 dev lo

# device: eth0
auto eth0
iface eth0 inet manual

auto br0
iface br0 inet static
       address 70.22.189.58
       netmask 255.255.255.248
       gateway 70.22.189.57
       broadcast 70.22.189.63
       bridge_ports eth0
       bridge_fd 0
       bridge_maxwait 0
       bridge_stp off
        post-up ip route add 70.22.189.59 dev br0
        post-up ip route add 70.22.189.60 dev br0
        post-up ip route add 70.22.189.61 dev br0
        post-up ip route add 70.22.189.62 dev br0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More info at:
&lt;a href=&#34;http://www.shorewall.net/LXC.html&#34;&gt;shorewall.net&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git Howto</title>
      <link>http://www.robotamer.com/linux/git.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/git.html</guid>
      <description>&lt;h4&gt;Stop tracking a file but keep the file:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;git rm --cached filename
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;Git Setup&lt;/h1&gt;

&lt;h4&gt;Remote Server&lt;/h4&gt;

&lt;p&gt;Go to your web root directory&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/www/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;identify your self to git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name &amp;quot;Dennis T Kaplan&amp;quot;

git config --global user.email &amp;quot;alias@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a live branch&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch live
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make the live branch active&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout live
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Local&lt;/h4&gt;

&lt;p&gt;Go to your working directory&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/www/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;identify your self to git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global user.name &amp;quot;Dennis T Kaplan&amp;quot;

git config --global user.email &amp;quot;alias@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;create the ignore file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nano .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Place this in to your .gitignore file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Packages #
############
# it&#39;s better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sqlite
*.db3
*/temp/*

# OS generated files #
######################
.DS_Store*
ehthumbs.db
Icon?
Thumbs.db

# Backup files #
######################
*~
*.orig
*.bak
test*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add your files to git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Commit them&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git commit -m &#39;init&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add your remote git server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git remote add ssh://username@example.com/var/www/.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;send your data to the remote server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Remote Server&lt;/h4&gt;

&lt;p&gt;Checkout master branch so we can test the changes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;see if it works and if it does go back to the live branch&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout live
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pull in master to live&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git merge master
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux Index</title>
      <link>http://www.robotamer.com/linux/index.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/index.html</guid>
      <description>&lt;p&gt;Here you will find Linux specific HowTo&amp;rsquo;s and tutorials, which I mostly keep as reminders for my self.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cases</title>
      <link>http://www.robotamer.com/code/go/gotamer/cases.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/cases.html</guid>
      <description>&lt;p&gt;Provides conversion and case manipulation, such as upper case word, camel case, dash, underscore etc.&lt;/p&gt;

&lt;p&gt;I created this for a Wiki I been working on as a learning experience for Go&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/cases&#34; title=&#34;GoTamer Conversion Pkg Documentation&#34;&gt;Pkg Documantation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/cases&#34; title=&#34;GoTamer Conversion Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux Containers</title>
      <link>http://www.robotamer.com/linux/lxc.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/lxc.html</guid>
      <description>&lt;p&gt;Linux Containers provide a Free Software virtualization system for computers running GNU/Linux. This is accomplished through kernel level isolation. It allows one to run multiple virtual units simultaneously. Those units, similar to chroots, are sufficiently isolated to guarantee the required security, but utilize available resources efficiently, as they run on the same kernel.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install lxc bridge-utils debootstrap
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First we will setup our Bridge: &lt;a href=&#34;Bridge-Utils.html&#34;&gt;Linux:bridge-utils&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/etc/fstab&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cgroup          /sys/fs/cgroup         cgroup  defaults        0       0

mount -a


LXCDIR=/var/lib/lxc
cd $LXCDIR
nano vm0.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Following is a template config file. If you are also looking at other howto&amp;rsquo;s, don&amp;rsquo;t get coughed up at the fstab mount option. The debian script takes care of that. You will at leased have to change the IP address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vm0.cfg&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc.utsname = vm0
lxc.rootfs = /var/lib/lxc/vm0/rootfs

lxc.tty = 4
lxc.network.type = veth
lxc.network.flags = up
lxc.network.link = br0
lxc.network.name = eth0
lxc.network.mtu = 1500

# security parameter
lxc.cgroup.devices.deny = a # Deny all access to devices
lxc.cgroup.devices.allow = c 1:3 rwm   # dev/null
lxc.cgroup.devices.allow = c 1:5 rwm   # dev/zero
lxc.cgroup.devices.allow = c 5:1 rwm   # dev/console
lxc.cgroup.devices.allow = c 5:0 rwm   # dev/tty
lxc.cgroup.devices.allow = c 4:0 rwm   # dev/tty0
lxc.cgroup.devices.allow = c 4:1 rwm   # dev/tty1
lxc.cgroup.devices.allow = c 4:2 rwm   # dev/tty2
lxc.cgroup.devices.allow = c 1:9 rwm   # dev/urandon
lxc.cgroup.devices.allow = c 1:8 rwm   # dev/random
lxc.cgroup.devices.allow = c 136:* rwm # dev/pts/*
lxc.cgroup.devices.allow = c 5:2 rwm   # dev/pts/ptmx
lxc.cgroup.devices.allow = c 254:0 rwm # dev/rtc

# mounts point
lxc.mount.entry=proc   /var/lib/lxc/vm0/rootfs/proc proc nodev,noexec,nosuid 0 0
lxc.mount.entry=devpts /var/lib/lxc/vm0/rootfs/dev/pts devpts defaults 0 0
lxc.mount.entry=sysfs  /var/lib/lxc/vm0/rootfs/sys sysfs defaults  0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lxc-create -f $LXCDIR/vm0.cfg -n vm0
cp /usr/lib/lxc/templates/lxc-debian $LXCDIR
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point you might wont to make lxc-debian your own. At leased change the release from Lenny to Squeeze&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./lxc-debian -p vm0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The vm0 should have been created now. Your root password is root.
Before we start it up we will make some config changes.&lt;/p&gt;

&lt;p&gt;First edit your network config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nano $LXCDIR/vm0/rootfs/etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;File needs to look like this: // Note change the IP addresses to yours, if you don&amp;rsquo;t know how, you know you shouldn&amp;rsquo;t be here //&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# The loopback network interface
auto lo
iface lo inet loopback
up route add -net 127.0.0.0 netmask 255.0.0.0 dev lo
down route add -net 127.0.0.0 netmask 255.0.0.0 dev lo

auto eth0
iface eth0 inet static
address 70.22.189.59
netmask 255.255.255.248
gateway 70.22.189.57
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we will try to boot the system.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd $LXCDIR
lxc-start -n vm0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;default password:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;user: root&lt;/li&gt;
&lt;li&gt;password: root&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tip: copy your ~/.ssh folder to each server for passwordless login&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nano /etc/default/locale
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And add:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LANG=en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure locales&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg-reconfigure locales
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open  /etc/inittab and make sure you comment out like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1:2345:respawn:/sbin/getty 38400 console
#c1:12345:respawn:/sbin/getty 38400 tty1 linux
#c2:12345:respawn:/sbin/getty 38400 tty2 linux
#c3:12345:respawn:/sbin/getty 38400 tty3 linux
#c4:12345:respawn:/sbin/getty 38400 tty4 linux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you should be at the vm0 login, try user root with pass root&lt;br /&gt;
Try to ping a domain you know works, and it should give you a response otherwise your network setup failed.&lt;/p&gt;

&lt;p&gt;Assuming it worked, let&amp;rsquo;s make it permanent.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -s $LXCDIR/vm0/config /etc/lxc/vm0.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Turn this on and add vm0 to the container variable.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /etc/default/
nano lxc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next we will setup the server:&lt;/p&gt;

&lt;h2&gt;LXC Debian Server Setup&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Useful Resources:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lxc.teegra.net&#34;&gt;teegra.net&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.linuxfoundation.org/collaborate/workgroups/networking&#34;&gt;linuxfoundation.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.debian.org/HighPerformanceComputing&#34;&gt;wiki.debian.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qemu-buch.de&#34;&gt;qemu-buch.de&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://nigel.mcnie.name/blog/a-five-minute-guide-to-linux-containers-for-debian&#34;&gt;nigel.mcnie.name&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Found another approach which looks interesting&lt;br /&gt;
&lt;a href=&#34;http://wiki.pcprobleemloos.nl/using_lxc_linux_containers_on_debian_squeeze/creating_a_lxc_virtual_machine_template&#34;&gt;wiki.pcprobleemloos.nl&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>msmtp</title>
      <link>http://www.robotamer.com/linux/mail/msmtp.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/mail/msmtp.html</guid>
      <description>&lt;h1&gt;/etc/msmtprc&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;defaults
maildomain      example.net
syslog          LOG_MAIL
aliases         /etc/aliases


account         default
host            mail.example.net
port            587
from            srv7@example.net
auth            on
user            user@example.net
password        ********
tls             on
tls_starttls    on
#tls_certcheck   off
tls_fingerprint DB:A0:2A:07:00:F9:E3:23:7D:07:E7:52:3C:95:9D:E6:7E:12:54:3F
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your alias file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# /etc/aliases 
default: me@example.net
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A php script to send mail&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/php
&amp;lt;?php

define(&#39;TAB&#39;,&amp;quot;\t&amp;quot;);

$user = $_SERVER[&#39;LOGNAME&#39;];
$host = exec(&amp;quot;hostname -f&amp;quot;);
$from = $user.&#39;@&#39;.$host;

$to      = &#39;sweety@example.net&#39;;
$subject = &#39;Testing msmtp&#39;;
$message = &#39;hello from &#39;. $host;
$headers = &#39;From: &#39;.$from.PHP_EOL;
$headers .= &#39;X-Mailer: msmtp + PHP &#39;.phpversion();

if(mail($to, $subject, $message, $headers))
{
     echo PHP_EOL.TAB.&#39;Your message was successfully accepted for delivery&#39;.PHP_EOL.PHP_EOL;
}else{
     echo PHP_EOL.TAB.&#39;Your message was not accepted for delivery!&#39;.PHP_EOL.PHP_EOL;
}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Send mail with sendmail</title>
      <link>http://www.robotamer.com/linux/mail/sendmail.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/mail/sendmail.html</guid>
      <description>&lt;p&gt;#!/bin/bash&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SENDMAIL=/usr/sbin/sendmail
RECIPIENT=tosomeone@example.com
FROM=me@example.com

cat &amp;lt;&amp;lt;EOF | $SENDMAIL -t ${RECIPIENT}
From: ${FROM} 
To: ${RECIPIENT}
Subject: testmail

some test text as body of the email.
EOF
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>My little space on the net</title>
      <link>http://www.robotamer.com/about.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/about.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;right&#34;&gt;
&lt;img src=&#34;/static/img/robotamer.gif&#34; alt=&#34;Logo&#34; /&gt;

&lt;/div&gt;
Here you will find mostly documentation for some of the things I have coded.&lt;br /&gt;
Improvements and/or bug reports are encouraged.&lt;br /&gt;
Go ahead feel right at home, at the top is the main menu pointing to each project.&lt;/p&gt;

&lt;p&gt;Unless otherwise specified within the code, most everything you can find here is MIT licensed.
The link to the generic license is in the Meta menu.&lt;/p&gt;

&lt;p&gt;This website has been created with &lt;a href=&#34;http://github.com/spf13/hugo&#34;&gt;hugo&lt;/a&gt; a Go program that converts
markdown files to a complete website.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mail Server Fingerprint</title>
      <link>http://www.robotamer.com/linux/openssl/mail-server-fingerprint.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/openssl/mail-server-fingerprint.html</guid>
      <description>&lt;p&gt;This is useful for let&amp;rsquo;s say when you need the fingerprint to identify via TLS&lt;/p&gt;

&lt;p&gt;Get the raw certificate:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo Q | openssl s_client -connect mail.example.com:443
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Copy and paste the scribble from &amp;mdash;&amp;ndash;BEGIN CERTIFICATE&amp;mdash;&amp;ndash; to &amp;mdash;&amp;ndash;END CERTIFICATE&amp;mdash;&amp;ndash; to a file called cert.pem. Including &amp;mdash;&amp;ndash;BEGIN CERTIFICATE&amp;mdash;&amp;ndash; as first and &amp;mdash;&amp;ndash;END CERTIFICATE&amp;mdash;&amp;ndash; as last line.&lt;/p&gt;

&lt;p&gt;Generate the SHA1 fingerprint by issuing following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl x509 -in cert.pem -sha1 -noout -fingerprint
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ssh authorization</title>
      <link>http://www.robotamer.com/linux/openssl/ssh.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/openssl/ssh.html</guid>
      <description>&lt;p&gt;Create a public ssh key, if you haven’t one already. Look at ~/.ssh. If you see a file named id_dsa.pub then you obviously already have a public key. If not, simply create one.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t dsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ItemMake sure your .ssh dir is 700:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod 700 ~/.ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get your public ssh key on the server you want to login automatically.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp ~/.ssh/id_dsa.pub remoteuser@remoteserver.com:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Append the contents of your public key to the ~/.ssh/authorized_keys and remove it. Simply issue something like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat id_dsa.pub &amp;gt;&amp;gt; .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Remove your public key from the home directory on the server.&lt;br /&gt;
Done!&lt;/p&gt;

&lt;p&gt;You can now login without getting asked for a password.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -l remoteuser remoteserver.com or ssh remoteuser@remoteserver.com
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux Snippets</title>
      <link>http://www.robotamer.com/linux/snippets.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/snippets.html</guid>
      <description>&lt;h4&gt;Find and chmod files or folders&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;find . -type d -exec chmod 755 {} \;
find . -type f -exec chmod 644 {} \;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Find a directory and display on screen&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;find . -type d -name &#39;linux&#39; 2&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Find/Grep for a string across multiple files with different extensions&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;find . -name &amp;quot;*.php&amp;quot; | xargs grep -niP &#39;thingy&#39;
find \( -name &amp;quot;*js&amp;quot; -o -name &amp;quot;*jsp&amp;quot; -o -name &amp;quot;*jspf&amp;quot; \) | xargs grep -niP &#39;thingy&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Find and replace&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;find . -type f -name &amp;quot;*.php&amp;quot; -exec sed -i &#39;s/numRows/rowCount/g&#39; {} \;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;running as background process&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;nohup scp &amp;lt;params&amp;gt; &amp;amp; &amp;gt; nohup.out 2 &amp;gt; &amp;amp;1
nohup scp -r -p root@www.example.com:/var/www/ /var/www/ &amp;amp; &amp;gt;nohup.out 2&amp;gt;&amp;amp;1
nohup scp -r -p root@www.example.com:/var/www/logs /var/www/ &amp;amp; &amp;gt;nohup.out 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Copying an image file to USB&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;cat file.iso &amp;gt; /dev/sdb
sync
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Killing&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;killall -9 nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Mounting an imge file&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;mount -o loop file.img /mnt/image
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Creating a file stsyem&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;mkfs.ext2 /dev/sdb2
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Labeling a file system&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;e2label /dev/sdb2 RoboTamer
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Searing bash history&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;history | grep -i &amp;quot;search term&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Debian Specific&lt;/h2&gt;

&lt;h4&gt;See what is installed&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;dpkg -l | grep php5
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Start a program&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;service program_name start
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Stop a program&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;service program_name stop
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Start a programs at boot time&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;insserv -d program_name
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;Remove program from boot time&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;insserv -r program_name
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>UTF-8 Character List</title>
      <link>http://www.robotamer.com/linux/utf-8.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/linux/utf-8.html</guid>
      <description>&lt;p&gt;Common: “ ” ‘ ’ – — … ‐ ‒ ° © ® ™ • ½ ¼ ¾ ⅓ ⅔ † ‡ µ ¢ £ € « » ♠ ♣ ♥ ♦ ¿ �&lt;br /&gt;
Math: - × ÷ ± ∞ π ∅ ≤ ≥ ≠ ≈ ∧ ∨ ∩ ∪ ∈ ∀ ∃ ∄ ∑ ∏ ← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↺ ↻ ⇒ ⇔&lt;br /&gt;
SuperSub: ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁽ ⁾ ⁿ ⁱ ₀ ₁ ₂ ₃ ₄ ₅ ₆ ₇ ₈ ₉ ₊ ₋ ₌ ₍ ₎&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;u00A0: &amp;#x00A0; ¡ ¢ £ ¤ ¥ ¦ § ¨ © ª « ¬ ­ ® ¯ ° ± ² ³ ´ µ ¶ · ¸ ¹ º » ¼ ½ ¾ ¿&lt;br /&gt;
u00C0: À Á Â Ã Ä Å Æ Ç È É Ê Ë Ì Í Î Ï Ð Ñ Ò Ó Ô Õ Ö × Ø Ù Ú Û Ü Ý Þ ß&lt;br /&gt;
u00E0: à á â ã ä å æ ç è é ê ë ì í î ï ð ñ ò ó ô õ ö ÷ ø ù ú û ü ý þ ÿ&lt;/p&gt;

&lt;p&gt;u0100: Ā ā Ă ă Ą ą Ć ć Ĉ ĉ Ċ ċ Č č Ď ď Đ đ Ē ē Ĕ ĕ Ė ė Ę ę Ě ě Ĝ ĝ Ğ ğ&lt;br /&gt;
u0120: Ġ ġ Ģ ģ Ĥ ĥ Ħ ħ Ĩ ĩ Ī ī Ĭ ĭ Į į İ ı Ĳ ĳ Ĵ ĵ Ķ ķ ĸ Ĺ ĺ Ļ ļ Ľ ľ Ŀ&lt;br /&gt;
u0140: ŀ Ł ł Ń ń Ņ ņ Ň ň ŉ Ŋ ŋ Ō ō Ŏ ŏ Ő ő Œ œ Ŕ ŕ Ŗ ŗ Ř ř Ś ś Ŝ ŝ Ş ş&lt;br /&gt;
u0160: Š š Ţ ţ Ť ť Ŧ ŧ Ũ ũ Ū ū Ŭ ŭ Ů ů Ű ű Ų ų Ŵ ŵ Ŷ ŷ Ÿ Ź ź Ż ż Ž ž ſ&lt;br /&gt;
u0180: ƀ Ɓ Ƃ ƃ Ƅ ƅ Ɔ Ƈ ƈ Ɖ Ɗ Ƌ ƌ ƍ Ǝ Ə Ɛ Ƒ ƒ Ɠ Ɣ ƕ Ɩ Ɨ Ƙ ƙ ƚ ƛ Ɯ Ɲ ƞ Ɵ&lt;br /&gt;
u01A0: Ơ ơ Ƣ ƣ Ƥ ƥ Ʀ Ƨ ƨ Ʃ ƪ ƫ Ƭ ƭ Ʈ Ư ư Ʊ Ʋ Ƴ ƴ Ƶ ƶ Ʒ Ƹ ƹ ƺ ƻ Ƽ ƽ ƾ ƿ&lt;br /&gt;
u01C0: ǀ ǁ ǂ ǃ Ǆ ǅ ǆ Ǉ ǈ ǉ Ǌ ǋ ǌ Ǎ ǎ Ǐ ǐ Ǒ ǒ Ǔ ǔ Ǖ ǖ Ǘ ǘ Ǚ ǚ Ǜ ǜ ǝ Ǟ ǟ&lt;br /&gt;
u01E0: Ǡ ǡ Ǣ ǣ Ǥ ǥ Ǧ ǧ Ǩ ǩ Ǫ ǫ Ǭ ǭ Ǯ ǯ ǰ Ǳ ǲ ǳ Ǵ ǵ Ƕ Ƿ Ǹ ǹ Ǻ ǻ Ǽ ǽ Ǿ ǿ&lt;br /&gt;
u0200: Ȁ ȁ Ȃ ȃ Ȅ ȅ Ȇ ȇ Ȉ ȉ Ȋ ȋ Ȍ ȍ Ȏ ȏ Ȑ ȑ Ȓ ȓ Ȕ ȕ Ȗ ȗ Ș ș Ț ț Ȝ ȝ Ȟ ȟ&lt;br /&gt;
u0220: Ƞ ȡ Ȣ ȣ Ȥ ȥ Ȧ ȧ Ȩ ȩ Ȫ ȫ Ȭ ȭ Ȯ ȯ Ȱ ȱ Ȳ ȳ ȴ ȵ ȶ ȷ ȸ ȹ Ⱥ Ȼ ȼ Ƚ Ⱦ ȿ&lt;br /&gt;
u0240: ɀ Ɂ ɂ Ƀ Ʉ Ʌ Ɇ ɇ Ɉ ɉ Ɋ ɋ Ɍ ɍ Ɏ ɏ ɐ ɑ ɒ ɓ ɔ ɕ ɖ ɗ ɘ ə ɚ ɛ ɜ ɝ ɞ ɟ&lt;br /&gt;
u0260: ɠ ɡ ɢ ɣ ɤ ɥ ɦ ɧ ɨ ɩ ɪ ɫ ɬ ɭ ɮ ɯ ɰ ɱ ɲ ɳ ɴ ɵ ɶ ɷ ɸ ɹ ɺ ɻ ɼ ɽ ɾ ɿ&lt;br /&gt;
u0280: ʀ ʁ ʂ ʃ ʄ ʅ ʆ ʇ ʈ ʉ ʊ ʋ ʌ ʍ ʎ ʏ ʐ ʑ ʒ ʓ ʔ ʕ ʖ ʗ ʘ ʙ ʚ ʛ ʜ ʝ ʞ ʟ&lt;br /&gt;
u02A0: ʠ ʡ ʢ ʣ ʤ ʥ ʦ ʧ ʨ ʩ ʪ ʫ ʬ ʭ ʮ ʯ ʰ ʱ ʲ ʳ ʴ ʵ ʶ ʷ ʸ ʹ ʺ ʻ ʼ ʽ ʾ ʿ&lt;br /&gt;
u02C0: ˀ ˁ ˂ ˃ ˄ ˅ ˆ ˇ ˈ ˉ ˊ ˋ ˌ ˍ ˎ ˏ ː ˑ ˒ ˓ ˔ ˕ ˖ ˗ ˘ ˙ ˚ ˛ ˜ ˝ ˞ ˟&lt;br /&gt;
u02E0: ˠ ˡ ˢ ˣ ˤ ˥ ˦ ˧ ˨ ˩ ˪ ˫ ˬ ˭ ˮ ˯ ˰ ˱ ˲ ˳ ˴ ˵ ˶ ˷ ˸ ˹ ˺ ˻ ˼ ˽ ˾ ˿&lt;br /&gt;
u0300: ̀ ́ ̂ ̃ ̄ ̅ ̆ ̇ ̈ ̉ ̊ ̋ ̌ ̍ ̎ ̏ ̐ ̑ ̒ ̓ ̔ ̕ ̖ ̗ ̘ ̙ ̚ ̛ ̜ ̝ ̞ ̟&lt;br /&gt;
u0320: ̠ ̡ ̢ ̣ ̤ ̥ ̦ ̧ ̨ ̩ ̪ ̫ ̬ ̭ ̮ ̯ ̰ ̱ ̲ ̳ ̴ ̵ ̶ ̷ ̸ ̹ ̺ ̻ ̼ ̽ ̾ ̿&lt;br /&gt;
u0340: ̀ ́ ͂ ̓ ̈́ ͅ ͆ ͇ ͈ ͉ ͊ ͋ ͌ ͍ ͎ ͏ ͐ ͑ ͒ ͓ ͔ ͕ ͖ ͗ ͘ ͙ ͚ ͛ ͜ ͝ ͞ ͟&lt;br /&gt;
u0360: ͠ ͡ ͢ ͣ ͤ ͥ ͦ ͧ ͨ ͩ ͪ ͫ ͬ ͭ ͮ ͯ Ͱ ͱ Ͳ ͳ ʹ ͵ Ͷ ͷ ͸ ͹ ͺ ͻ ͼ ͽ ; Ϳ&lt;br /&gt;
u0380: ΀ ΁ ΂ ΃ ΄ ΅ Ά · Έ Ή Ί ΋ Ό ΍ Ύ Ώ ΐ Α Β Γ Δ Ε Ζ Η Θ Ι Κ Λ Μ Ν Ξ Ο&lt;br /&gt;
u03A0: Π Ρ ΢ Σ Τ Υ Φ Χ Ψ Ω Ϊ Ϋ ά έ ή ί ΰ α β γ δ ε ζ η θ ι κ λ μ ν ξ ο&lt;br /&gt;
u03C0: π ρ ς σ τ υ φ χ ψ ω ϊ ϋ ό ύ ώ Ϗ ϐ ϑ ϒ ϓ ϔ ϕ ϖ ϗ Ϙ ϙ Ϛ ϛ Ϝ ϝ Ϟ ϟ&lt;br /&gt;
u03E0: Ϡ ϡ Ϣ ϣ Ϥ ϥ Ϧ ϧ Ϩ ϩ Ϫ ϫ Ϭ ϭ Ϯ ϯ ϰ ϱ ϲ ϳ ϴ ϵ ϶ Ϸ ϸ Ϲ Ϻ ϻ ϼ Ͻ Ͼ Ͽ&lt;br /&gt;
u0400: Ѐ Ё Ђ Ѓ Є Ѕ І Ї Ј Љ Њ Ћ Ќ Ѝ Ў Џ А Б В Г Д Е Ж З И Й К Л М Н О П&lt;br /&gt;
u0420: Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ж з и й к л м н о п&lt;br /&gt;
u0440: р с т у ф х ц ч ш щ ъ ы ь э ю я ѐ ё ђ ѓ є ѕ і ї ј љ њ ћ ќ ѝ ў џ&lt;br /&gt;
u0460: Ѡ ѡ Ѣ ѣ Ѥ ѥ Ѧ ѧ Ѩ ѩ Ѫ ѫ Ѭ ѭ Ѯ ѯ Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ Ѹ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ&lt;br /&gt;
u0480: Ҁ ҁ ҂ ҃ ҄ ҅ ҆ ҇ ҈ ҉ Ҋ ҋ Ҍ ҍ Ҏ ҏ Ґ ґ Ғ ғ Ҕ ҕ Җ җ Ҙ ҙ Қ қ Ҝ ҝ Ҟ ҟ&lt;br /&gt;
u04A0: Ҡ ҡ Ң ң Ҥ ҥ Ҧ ҧ Ҩ ҩ Ҫ ҫ Ҭ ҭ Ү ү Ұ ұ Ҳ ҳ Ҵ ҵ Ҷ ҷ Ҹ ҹ Һ һ Ҽ ҽ Ҿ ҿ&lt;br /&gt;
u04C0: Ӏ Ӂ ӂ Ӄ ӄ Ӆ ӆ Ӈ ӈ Ӊ ӊ Ӌ ӌ Ӎ ӎ ӏ Ӑ ӑ Ӓ ӓ Ӕ ӕ Ӗ ӗ Ә ә Ӛ ӛ Ӝ ӝ Ӟ ӟ&lt;br /&gt;
u04E0: Ӡ ӡ Ӣ ӣ Ӥ ӥ Ӧ ӧ Ө ө Ӫ ӫ Ӭ ӭ Ӯ ӯ Ӱ ӱ Ӳ ӳ Ӵ ӵ Ӷ ӷ Ӹ ӹ Ӻ ӻ Ӽ ӽ Ӿ ӿ&lt;br /&gt;
u0500: Ԁ ԁ Ԃ ԃ Ԅ ԅ Ԇ ԇ Ԉ ԉ Ԋ ԋ Ԍ ԍ Ԏ ԏ Ԑ ԑ Ԓ ԓ Ԕ ԕ Ԗ ԗ Ԙ ԙ Ԛ ԛ Ԝ ԝ Ԟ ԟ&lt;br /&gt;
u0520: Ԡ ԡ Ԣ ԣ Ԥ ԥ Ԧ ԧ Ԩ ԩ Ԫ ԫ Ԭ ԭ Ԯ ԯ ԰ Ա Բ Գ Դ Ե Զ Է Ը Թ Ժ Ի Լ Խ Ծ Կ&lt;br /&gt;
u0620: ؠ ء آ أ ؤ إ ئ ا ب ة ت ث ج ح خ د ذ ر ز س ش ص ض ط ظ ع غ ػ ؼ ؽ ؾ ؿ&lt;br /&gt;
u0640: ـ ف ق ك ل م ن ه و ى ي ً ٌ ٍ َ ُ ِ ّ ْ ٓ ٔ ٕ ٖ ٗ ٘ ٙ ٚ ٛ ٜ ٝ ٞ ٟ&lt;br /&gt;
u0660: ٠ ١ ٢ ٣ ٤ ٥ ٦ ٧ ٨ ٩ ٪ ٫ ٬ ٭ ٮ ٯ ٰ ٱ ٲ ٳ ٴ ٵ ٶ ٷ ٸ ٹ ٺ ٻ ټ ٽ پ ٿ&lt;br /&gt;
u0680: ڀ ځ ڂ ڃ ڄ څ چ ڇ ڈ ډ ڊ ڋ ڌ ڍ ڎ ڏ ڐ ڑ ڒ ړ ڔ ڕ ږ ڗ ژ ڙ ښ ڛ ڜ ڝ ڞ ڟ&lt;br /&gt;
u0900: ऀ ँ ं ः ऄ अ आ इ ई उ ऊ ऋ ऌ ऍ ऎ ए ऐ ऑ ऒ ओ औ क ख ग घ ङ च छ ज झ ञ ट&lt;br /&gt;
u0920: ठ ड ढ ण त थ द ध न ऩ प फ ब भ म य र ऱ ल ळ ऴ व श ष स ह ऺ ऻ ़ ऽ ा ि&lt;br /&gt;
u0940: ी ु ू ृ ॄ ॅ ॆ े ै ॉ ॊ ो ौ ् ॎ ॏ ॐ ॑ ॒ ॓ ॔ ॕ ॖ ॗ क़ ख़ ग़ ज़ ड़ ढ़ फ़ य़&lt;br /&gt;
u0FC0: ࿀ ࿁ ࿂ ࿃ ࿄ ࿅ ࿆ ࿇ ࿈ ࿉ ࿊ ࿋ ࿌ ࿍ ࿎ ࿏ ࿐ ࿑ ࿒ ࿓ ࿔ ࿕ ࿖ ࿗ ࿘ ࿙ ࿚ ࿛ ࿜ ࿝ ࿞ ࿟&lt;br /&gt;
u10A0: Ⴀ Ⴁ Ⴂ Ⴃ Ⴄ Ⴅ Ⴆ Ⴇ Ⴈ Ⴉ Ⴊ Ⴋ Ⴌ Ⴍ Ⴎ Ⴏ Ⴐ Ⴑ Ⴒ Ⴓ Ⴔ Ⴕ Ⴖ Ⴗ Ⴘ Ⴙ Ⴚ Ⴛ Ⴜ Ⴝ Ⴞ Ⴟ&lt;br /&gt;
u13A0: Ꭰ Ꭱ Ꭲ Ꭳ Ꭴ Ꭵ Ꭶ Ꭷ Ꭸ Ꭹ Ꭺ Ꭻ Ꭼ Ꭽ Ꭾ Ꭿ Ꮀ Ꮁ Ꮂ Ꮃ Ꮄ Ꮅ Ꮆ Ꮇ Ꮈ Ꮉ Ꮊ Ꮋ Ꮌ Ꮍ Ꮎ Ꮏ&lt;br /&gt;
u1400: ᐀ ᐁ ᐂ ᐃ ᐄ ᐅ ᐆ ᐇ ᐈ ᐉ ᐊ ᐋ ᐌ ᐍ ᐎ ᐏ ᐐ ᐑ ᐒ ᐓ ᐔ ᐕ ᐖ ᐗ ᐘ ᐙ ᐚ ᐛ ᐜ ᐝ ᐞ ᐟ&lt;br /&gt;
u1580: ᖀ ᖁ ᖂ ᖃ ᖄ ᖅ ᖆ ᖇ ᖈ ᖉ ᖊ ᖋ ᖌ ᖍ ᖎ ᖏ ᖐ ᖑ ᖒ ᖓ ᖔ ᖕ ᖖ ᖗ ᖘ ᖙ ᖚ ᖛ ᖜ ᖝ ᖞ ᖟ&lt;br /&gt;
u1680:   ᚁ ᚂ ᚃ ᚄ ᚅ ᚆ ᚇ ᚈ ᚉ ᚊ ᚋ ᚌ ᚍ ᚎ ᚏ ᚐ ᚑ ᚒ ᚓ ᚔ ᚕ ᚖ ᚗ ᚘ ᚙ ᚚ ᚛ ᚜ ᚝ ᚞ ᚟&lt;br /&gt;
u16A0: ᚠ ᚡ ᚢ ᚣ ᚤ ᚥ ᚦ ᚧ ᚨ ᚩ ᚪ ᚫ ᚬ ᚭ ᚮ ᚯ ᚰ ᚱ ᚲ ᚳ ᚴ ᚵ ᚶ ᚷ ᚸ ᚹ ᚺ ᚻ ᚼ ᚽ ᚾ ᚿ&lt;br /&gt;
u16C0: ᛀ ᛁ ᛂ ᛃ ᛄ ᛅ ᛆ ᛇ ᛈ ᛉ ᛊ ᛋ ᛌ ᛍ ᛎ ᛏ ᛐ ᛑ ᛒ ᛓ ᛔ ᛕ ᛖ ᛗ ᛘ ᛙ ᛚ ᛛ ᛜ ᛝ ᛞ ᛟ&lt;br /&gt;
u16E0: ᛠ ᛡ ᛢ ᛣ ᛤ ᛥ ᛦ ᛧ ᛨ ᛩ ᛪ ᛫ ᛬ ᛭ ᛮ ᛯ ᛰ ᛱ ᛲ ᛳ ᛴ ᛵ ᛶ ᛷ ᛸ ᛹ ᛺ ᛻ ᛼ ᛽ ᛾ ᛿&lt;br /&gt;
u1D00: ᴀ ᴁ ᴂ ᴃ ᴄ ᴅ ᴆ ᴇ ᴈ ᴉ ᴊ ᴋ ᴌ ᴍ ᴎ ᴏ ᴐ ᴑ ᴒ ᴓ ᴔ ᴕ ᴖ ᴗ ᴘ ᴙ ᴚ ᴛ ᴜ ᴝ ᴞ ᴟ&lt;br /&gt;
u1D20: ᴠ ᴡ ᴢ ᴣ ᴤ ᴥ ᴦ ᴧ ᴨ ᴩ ᴪ ᴫ ᴬ ᴭ ᴮ ᴯ ᴰ ᴱ ᴲ ᴳ ᴴ ᴵ ᴶ ᴷ ᴸ ᴹ ᴺ ᴻ ᴼ ᴽ ᴾ ᴿ&lt;br /&gt;
u1D40: ᵀ ᵁ ᵂ ᵃ ᵄ ᵅ ᵆ ᵇ ᵈ ᵉ ᵊ ᵋ ᵌ ᵍ ᵎ ᵏ ᵐ ᵑ ᵒ ᵓ ᵔ ᵕ ᵖ ᵗ ᵘ ᵙ ᵚ ᵛ ᵜ ᵝ ᵞ ᵟ&lt;br /&gt;
u1E00: Ḁ ḁ Ḃ ḃ Ḅ ḅ Ḇ ḇ Ḉ ḉ Ḋ ḋ Ḍ ḍ Ḏ ḏ Ḑ ḑ Ḓ ḓ Ḕ ḕ Ḗ ḗ Ḙ ḙ Ḛ ḛ Ḝ ḝ Ḟ ḟ&lt;br /&gt;
u1E20: Ḡ ḡ Ḣ ḣ Ḥ ḥ Ḧ ḧ Ḩ ḩ Ḫ ḫ Ḭ ḭ Ḯ ḯ Ḱ ḱ Ḳ ḳ Ḵ ḵ Ḷ ḷ Ḹ ḹ Ḻ ḻ Ḽ ḽ Ḿ ḿ&lt;br /&gt;
u1E40: Ṁ ṁ Ṃ ṃ Ṅ ṅ Ṇ ṇ Ṉ ṉ Ṋ ṋ Ṍ ṍ Ṏ ṏ Ṑ ṑ Ṓ ṓ Ṕ ṕ Ṗ ṗ Ṙ ṙ Ṛ ṛ Ṝ ṝ Ṟ ṟ&lt;br /&gt;
u1E60: Ṡ ṡ Ṣ ṣ Ṥ ṥ Ṧ ṧ Ṩ ṩ Ṫ ṫ Ṭ ṭ Ṯ ṯ Ṱ ṱ Ṳ ṳ Ṵ ṵ Ṷ ṷ Ṹ ṹ Ṻ ṻ Ṽ ṽ Ṿ ṿ&lt;br /&gt;
u1E80: Ẁ ẁ Ẃ ẃ Ẅ ẅ Ẇ ẇ Ẉ ẉ Ẋ ẋ Ẍ ẍ Ẏ ẏ Ẑ ẑ Ẓ ẓ Ẕ ẕ ẖ ẗ ẘ ẙ ẚ ẛ ẜ ẝ ẞ ẟ&lt;br /&gt;
u1EA0: Ạ ạ Ả ả Ấ ấ Ầ ầ Ẩ ẩ Ẫ ẫ Ậ ậ Ắ ắ Ằ ằ Ẳ ẳ Ẵ ẵ Ặ ặ Ẹ ẹ Ẻ ẻ Ẽ ẽ Ế ế&lt;br /&gt;
u1EC0: Ề ề Ể ể Ễ ễ Ệ ệ Ỉ ỉ Ị ị Ọ ọ Ỏ ỏ Ố ố Ồ ồ Ổ ổ Ỗ ỗ Ộ ộ Ớ ớ Ờ ờ Ở ở&lt;br /&gt;
u1EE0: Ỡ ỡ Ợ ợ Ụ ụ Ủ ủ Ứ ứ Ừ ừ Ử ử Ữ ữ Ự ự Ỳ ỳ Ỵ ỵ Ỷ ỷ Ỹ ỹ Ỻ ỻ Ỽ ỽ Ỿ ỿ&lt;br /&gt;
u1F00: ἀ ἁ ἂ ἃ ἄ ἅ ἆ ἇ Ἀ Ἁ Ἂ Ἃ Ἄ Ἅ Ἆ Ἇ ἐ ἑ ἒ ἓ ἔ ἕ ἖ ἗ Ἐ Ἑ Ἒ Ἓ Ἔ Ἕ ἞ ἟&lt;br /&gt;
u1F20: ἠ ἡ ἢ ἣ ἤ ἥ ἦ ἧ Ἠ Ἡ Ἢ Ἣ Ἤ Ἥ Ἦ Ἧ ἰ ἱ ἲ ἳ ἴ ἵ ἶ ἷ Ἰ Ἱ Ἲ Ἳ Ἴ Ἵ Ἶ Ἷ&lt;br /&gt;
u1F40: ὀ ὁ ὂ ὃ ὄ ὅ ὆ ὇ Ὀ Ὁ Ὂ Ὃ Ὄ Ὅ ὎ ὏ ὐ ὑ ὒ ὓ ὔ ὕ ὖ ὗ ὘ Ὑ ὚ Ὓ ὜ Ὕ ὞ Ὗ&lt;br /&gt;
u1F60: ὠ ὡ ὢ ὣ ὤ ὥ ὦ ὧ Ὠ Ὡ Ὢ Ὣ Ὤ Ὥ Ὦ Ὧ ὰ ά ὲ έ ὴ ή ὶ ί ὸ ό ὺ ύ ὼ ώ ὾ ὿&lt;br /&gt;
u1F80: ᾀ ᾁ ᾂ ᾃ ᾄ ᾅ ᾆ ᾇ ᾈ ᾉ ᾊ ᾋ ᾌ ᾍ ᾎ ᾏ ᾐ ᾑ ᾒ ᾓ ᾔ ᾕ ᾖ ᾗ ᾘ ᾙ ᾚ ᾛ ᾜ ᾝ ᾞ ᾟ&lt;br /&gt;
u1FA0: ᾠ ᾡ ᾢ ᾣ ᾤ ᾥ ᾦ ᾧ ᾨ ᾩ ᾪ ᾫ ᾬ ᾭ ᾮ ᾯ ᾰ ᾱ ᾲ ᾳ ᾴ ᾵ ᾶ ᾷ Ᾰ Ᾱ Ὰ Ά ᾼ ᾽ ι ᾿&lt;br /&gt;
u1FC0: ῀ ῁ ῂ ῃ ῄ ῅ ῆ ῇ Ὲ Έ Ὴ Ή ῌ ῍ ῎ ῏ ῐ ῑ ῒ ΐ ῔ ῕ ῖ ῗ Ῐ Ῑ Ὶ Ί ῜ ῝ ῞ ῟&lt;br /&gt;
u1FE0: ῠ ῡ ῢ ΰ ῤ ῥ ῦ ῧ Ῠ Ῡ Ὺ Ύ Ῥ ῭ ΅ ` ῰ ῱ ῲ ῳ ῴ ῵ ῶ ῷ Ὸ Ό Ὼ Ώ ῼ ´ ῾ ῿&lt;br /&gt;
u2000:                       ​ ‌ ‍ ‎ ‏ ‐ ‑ ‒ – — ― ‖ ‗ ‘ ’ ‚ ‛ “ ” „ ‟&lt;br /&gt;
u2020: † ‡ • ‣ ․ ‥ … ‧     ‪ ‫ ‬ ‭ ‮   ‰ ‱ ′ ″ ‴ ‵ ‶ ‷ ‸ ‹ › ※ ‼ ‽ ‾ ‿&lt;br /&gt;
u2040: ⁀ ⁁ ⁂ ⁃ ⁄ ⁅ ⁆ ⁇ ⁈ ⁉ ⁊ ⁋ ⁌ ⁍ ⁎ ⁏ ⁐ ⁑ ⁒ ⁓ ⁔ ⁕ ⁖ ⁗ ⁘ ⁙ ⁚ ⁛ ⁜ ⁝ ⁞  &lt;br /&gt;
u2060: ⁠ ⁡ ⁢ ⁣ ⁤ ⁥ ⁦ ⁧ ⁨ ⁩ ⁪ ⁫ ⁬ ⁭ ⁮ ⁯ ⁰ ⁱ ⁲ ⁳ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ&lt;br /&gt;
u2080: ₀ ₁ ₂ ₃ ₄ ₅ ₆ ₇ ₈ ₉ ₊ ₋ ₌ ₍ ₎ ₏ ₐ ₑ ₒ ₓ ₔ ₕ ₖ ₗ ₘ ₙ ₚ ₛ ₜ ₝ ₞ ₟&lt;br /&gt;
u20A0: ₠ ₡ ₢ ₣ ₤ ₥ ₦ ₧ ₨ ₩ ₪ ₫ € ₭ ₮ ₯ ₰ ₱ ₲ ₳ ₴ ₵ ₶ ₷ ₸ ₹ ₺ ₻ ₼ ₽ ₾ ₿&lt;br /&gt;
u20C0: ⃀ ⃁ ⃂ ⃃ ⃄ ⃅ ⃆ ⃇ ⃈ ⃉ ⃊ ⃋ ⃌ ⃍ ⃎ ⃏ ⃐ ⃑ ⃒ ⃓ ⃔ ⃕ ⃖ ⃗ ⃘ ⃙ ⃚ ⃛ ⃜ ⃝ ⃞ ⃟&lt;br /&gt;
u20E0: ⃠ ⃡ ⃢ ⃣ ⃤ ⃥ ⃦ ⃧ ⃨ ⃩ ⃪ ⃫ ⃬ ⃭ ⃮ ⃯ ⃰ ⃱ ⃲ ⃳ ⃴ ⃵ ⃶ ⃷ ⃸ ⃹ ⃺ ⃻ ⃼ ⃽ ⃾ ⃿&lt;br /&gt;
u2100: ℀ ℁ ℂ ℃ ℄ ℅ ℆ ℇ ℈ ℉ ℊ ℋ ℌ ℍ ℎ ℏ ℐ ℑ ℒ ℓ ℔ ℕ № ℗ ℘ ℙ ℚ ℛ ℜ ℝ ℞ ℟&lt;br /&gt;
u2120: ℠ ℡ ™ ℣ ℤ ℥ Ω ℧ ℨ ℩ K Å ℬ ℭ ℮ ℯ ℰ ℱ Ⅎ ℳ ℴ ℵ ℶ ℷ ℸ ℹ ℺ ℻ ℼ ℽ ℾ ℿ&lt;br /&gt;
u2140: ⅀ ⅁ ⅂ ⅃ ⅄ ⅅ ⅆ ⅇ ⅈ ⅉ ⅊ ⅋ ⅌ ⅍ ⅎ ⅏ ⅐ ⅑ ⅒ ⅓ ⅔ ⅕ ⅖ ⅗ ⅘ ⅙ ⅚ ⅛ ⅜ ⅝ ⅞ ⅟&lt;br /&gt;
u2160: Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ Ⅵ Ⅶ Ⅷ Ⅸ Ⅹ Ⅺ Ⅻ Ⅼ Ⅽ Ⅾ Ⅿ ⅰ ⅱ ⅲ ⅳ ⅴ ⅵ ⅶ ⅷ ⅸ ⅹ ⅺ ⅻ ⅼ ⅽ ⅾ ⅿ&lt;br /&gt;
u2180: ↀ ↁ ↂ Ↄ ↄ ↅ ↆ ↇ ↈ ↉ ↊ ↋ ↌ ↍ ↎ ↏ ← ↑ → ↓ ↔ ↕ ↖ ↗ ↘ ↙ ↚ ↛ ↜ ↝ ↞ ↟&lt;br /&gt;
u21A0: ↠ ↡ ↢ ↣ ↤ ↥ ↦ ↧ ↨ ↩ ↪ ↫ ↬ ↭ ↮ ↯ ↰ ↱ ↲ ↳ ↴ ↵ ↶ ↷ ↸ ↹ ↺ ↻ ↼ ↽ ↾ ↿&lt;br /&gt;
u21C0: ⇀ ⇁ ⇂ ⇃ ⇄ ⇅ ⇆ ⇇ ⇈ ⇉ ⇊ ⇋ ⇌ ⇍ ⇎ ⇏ ⇐ ⇑ ⇒ ⇓ ⇔ ⇕ ⇖ ⇗ ⇘ ⇙ ⇚ ⇛ ⇜ ⇝ ⇞ ⇟&lt;br /&gt;
u21E0: ⇠ ⇡ ⇢ ⇣ ⇤ ⇥ ⇦ ⇧ ⇨ ⇩ ⇪ ⇫ ⇬ ⇭ ⇮ ⇯ ⇰ ⇱ ⇲ ⇳ ⇴ ⇵ ⇶ ⇷ ⇸ ⇹ ⇺ ⇻ ⇼ ⇽ ⇾ ⇿&lt;br /&gt;
u2200: ∀ ∁ ∂ ∃ ∄ ∅ ∆ ∇ ∈ ∉ ∊ ∋ ∌ ∍ ∎ ∏ ∐ ∑ − ∓ ∔ ∕ ∖ ∗ ∘ ∙ √ ∛ ∜ ∝ ∞ ∟&lt;br /&gt;
u2220: ∠ ∡ ∢ ∣ ∤ ∥ ∦ ∧ ∨ ∩ ∪ ∫ ∬ ∭ ∮ ∯ ∰ ∱ ∲ ∳ ∴ ∵ ∶ ∷ ∸ ∹ ∺ ∻ ∼ ∽ ∾ ∿&lt;br /&gt;
u2240: ≀ ≁ ≂ ≃ ≄ ≅ ≆ ≇ ≈ ≉ ≊ ≋ ≌ ≍ ≎ ≏ ≐ ≑ ≒ ≓ ≔ ≕ ≖ ≗ ≘ ≙ ≚ ≛ ≜ ≝ ≞ ≟&lt;br /&gt;
u2260: ≠ ≡ ≢ ≣ ≤ ≥ ≦ ≧ ≨ ≩ ≪ ≫ ≬ ≭ ≮ ≯ ≰ ≱ ≲ ≳ ≴ ≵ ≶ ≷ ≸ ≹ ≺ ≻ ≼ ≽ ≾ ≿&lt;br /&gt;
u2280: ⊀ ⊁ ⊂ ⊃ ⊄ ⊅ ⊆ ⊇ ⊈ ⊉ ⊊ ⊋ ⊌ ⊍ ⊎ ⊏ ⊐ ⊑ ⊒ ⊓ ⊔ ⊕ ⊖ ⊗ ⊘ ⊙ ⊚ ⊛ ⊜ ⊝ ⊞ ⊟&lt;br /&gt;
u22A0: ⊠ ⊡ ⊢ ⊣ ⊤ ⊥ ⊦ ⊧ ⊨ ⊩ ⊪ ⊫ ⊬ ⊭ ⊮ ⊯ ⊰ ⊱ ⊲ ⊳ ⊴ ⊵ ⊶ ⊷ ⊸ ⊹ ⊺ ⊻ ⊼ ⊽ ⊾ ⊿&lt;br /&gt;
u22C0: ⋀ ⋁ ⋂ ⋃ ⋄ ⋅ ⋆ ⋇ ⋈ ⋉ ⋊ ⋋ ⋌ ⋍ ⋎ ⋏ ⋐ ⋑ ⋒ ⋓ ⋔ ⋕ ⋖ ⋗ ⋘ ⋙ ⋚ ⋛ ⋜ ⋝ ⋞ ⋟&lt;br /&gt;
u22E0: ⋠ ⋡ ⋢ ⋣ ⋤ ⋥ ⋦ ⋧ ⋨ ⋩ ⋪ ⋫ ⋬ ⋭ ⋮ ⋯ ⋰ ⋱ ⋲ ⋳ ⋴ ⋵ ⋶ ⋷ ⋸ ⋹ ⋺ ⋻ ⋼ ⋽ ⋾ ⋿&lt;br /&gt;
u2300: ⌀ ⌁ ⌂ ⌃ ⌄ ⌅ ⌆ ⌇ ⌈ ⌉ ⌊ ⌋ ⌌ ⌍ ⌎ ⌏ ⌐ ⌑ ⌒ ⌓ ⌔ ⌕ ⌖ ⌗ ⌘ ⌙ ⌚ ⌛ ⌜ ⌝ ⌞ ⌟&lt;br /&gt;
u2320: ⌠ ⌡ ⌢ ⌣ ⌤ ⌥ ⌦ ⌧ ⌨ 〈 〉 ⌫ ⌬ ⌭ ⌮ ⌯ ⌰ ⌱ ⌲ ⌳ ⌴ ⌵ ⌶ ⌷ ⌸ ⌹ ⌺ ⌻ ⌼ ⌽ ⌾ ⌿&lt;br /&gt;
u2340: ⍀ ⍁ ⍂ ⍃ ⍄ ⍅ ⍆ ⍇ ⍈ ⍉ ⍊ ⍋ ⍌ ⍍ ⍎ ⍏ ⍐ ⍑ ⍒ ⍓ ⍔ ⍕ ⍖ ⍗ ⍘ ⍙ ⍚ ⍛ ⍜ ⍝ ⍞ ⍟&lt;br /&gt;
u2360: ⍠ ⍡ ⍢ ⍣ ⍤ ⍥ ⍦ ⍧ ⍨ ⍩ ⍪ ⍫ ⍬ ⍭ ⍮ ⍯ ⍰ ⍱ ⍲ ⍳ ⍴ ⍵ ⍶ ⍷ ⍸ ⍹ ⍺ ⍻ ⍼ ⍽ ⍾ ⍿&lt;br /&gt;
u2380: ⎀ ⎁ ⎂ ⎃ ⎄ ⎅ ⎆ ⎇ ⎈ ⎉ ⎊ ⎋ ⎌ ⎍ ⎎ ⎏ ⎐ ⎑ ⎒ ⎓ ⎔ ⎕ ⎖ ⎗ ⎘ ⎙ ⎚ ⎛ ⎜ ⎝ ⎞ ⎟&lt;br /&gt;
u23A0: ⎠ ⎡ ⎢ ⎣ ⎤ ⎥ ⎦ ⎧ ⎨ ⎩ ⎪ ⎫ ⎬ ⎭ ⎮ ⎯ ⎰ ⎱ ⎲ ⎳ ⎴ ⎵ ⎶ ⎷ ⎸ ⎹ ⎺ ⎻ ⎼ ⎽ ⎾ ⎿&lt;br /&gt;
u23C0: ⏀ ⏁ ⏂ ⏃ ⏄ ⏅ ⏆ ⏇ ⏈ ⏉ ⏊ ⏋ ⏌ ⏍ ⏎ ⏏ ⏐ ⏑ ⏒ ⏓ ⏔ ⏕ ⏖ ⏗ ⏘ ⏙ ⏚ ⏛ ⏜ ⏝ ⏞ ⏟&lt;br /&gt;
u23E0: ⏠ ⏡ ⏢ ⏣ ⏤ ⏥ ⏦ ⏧ ⏨ ⏩ ⏪ ⏫ ⏬ ⏭ ⏮ ⏯ ⏰ ⏱ ⏲ ⏳ ⏴ ⏵ ⏶ ⏷ ⏸ ⏹ ⏺ ⏻ ⏼ ⏽ ⏾ ⏿&lt;br /&gt;
u2400: ␀ ␁ ␂ ␃ ␄ ␅ ␆ ␇ ␈ ␉ ␊ ␋ ␌ ␍ ␎ ␏ ␐ ␑ ␒ ␓ ␔ ␕ ␖ ␗ ␘ ␙ ␚ ␛ ␜ ␝ ␞ ␟&lt;br /&gt;
u2420: ␠ ␡ ␢ ␣ ␤ ␥ ␦ ␧ ␨ ␩ ␪ ␫ ␬ ␭ ␮ ␯ ␰ ␱ ␲ ␳ ␴ ␵ ␶ ␷ ␸ ␹ ␺ ␻ ␼ ␽ ␾ ␿&lt;br /&gt;
u2440: ⑀ ⑁ ⑂ ⑃ ⑄ ⑅ ⑆ ⑇ ⑈ ⑉ ⑊ ⑋ ⑌ ⑍ ⑎ ⑏ ⑐ ⑑ ⑒ ⑓ ⑔ ⑕ ⑖ ⑗ ⑘ ⑙ ⑚ ⑛ ⑜ ⑝ ⑞ ⑟&lt;br /&gt;
u2460: ① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿&lt;br /&gt;
u2480: ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟&lt;br /&gt;
u24A0: ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ&lt;br /&gt;
u24C0: Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ&lt;br /&gt;
u24E0: ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿&lt;br /&gt;
u2500: ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏ ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟&lt;br /&gt;
u2520: ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯ ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿&lt;br /&gt;
u2540: ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏ ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟&lt;br /&gt;
u2560: ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯ ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿&lt;br /&gt;
u2580: ▀ ▁ ▂ ▃ ▄ ▅ ▆ ▇ █ ▉ ▊ ▋ ▌ ▍ ▎ ▏ ▐ ░ ▒ ▓ ▔ ▕ ▖ ▗ ▘ ▙ ▚ ▛ ▜ ▝ ▞ ▟&lt;br /&gt;
u25A0: ■ □ ▢ ▣ ▤ ▥ ▦ ▧ ▨ ▩ ▪ ▫ ▬ ▭ ▮ ▯ ▰ ▱ ▲ △ ▴ ▵ ▶ ▷ ▸ ▹ ► ▻ ▼ ▽ ▾ ▿&lt;br /&gt;
u25C0: ◀ ◁ ◂ ◃ ◄ ◅ ◆ ◇ ◈ ◉ ◊ ○ ◌ ◍ ◎ ● ◐ ◑ ◒ ◓ ◔ ◕ ◖ ◗ ◘ ◙ ◚ ◛ ◜ ◝ ◞ ◟&lt;br /&gt;
u25E0: ◠ ◡ ◢ ◣ ◤ ◥ ◦ ◧ ◨ ◩ ◪ ◫ ◬ ◭ ◮ ◯ ◰ ◱ ◲ ◳ ◴ ◵ ◶ ◷ ◸ ◹ ◺ ◻ ◼ ◽ ◾ ◿&lt;br /&gt;
u2600: ☀ ☁ ☂ ☃ ☄ ★ ☆ ☇ ☈ ☉ ☊ ☋ ☌ ☍ ☎ ☏ ☐ ☑ ☒ ☓ ☔ ☕ ☖ ☗ ☘ ☙ ☚ ☛ ☜ ☝ ☞ ☟&lt;br /&gt;
u2620: ☠ ☡ ☢ ☣ ☤ ☥ ☦ ☧ ☨ ☩ ☪ ☫ ☬ ☭ ☮ ☯ ☰ ☱ ☲ ☳ ☴ ☵ ☶ ☷ ☸ ☹ ☺ ☻ ☼ ☽ ☾ ☿&lt;br /&gt;
u2640: ♀ ♁ ♂ ♃ ♄ ♅ ♆ ♇ ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒ ♓ ♔ ♕ ♖ ♗ ♘ ♙ ♚ ♛ ♜ ♝ ♞ ♟&lt;br /&gt;
u2660: ♠ ♡ ♢ ♣ ♤ ♥ ♦ ♧ ♨ ♩ ♪ ♫ ♬ ♭ ♮ ♯ ♰ ♱ ♲ ♳ ♴ ♵ ♶ ♷ ♸ ♹ ♺ ♻ ♼ ♽ ♾ ♿&lt;br /&gt;
u2680: ⚀ ⚁ ⚂ ⚃ ⚄ ⚅ ⚆ ⚇ ⚈ ⚉ ⚊ ⚋ ⚌ ⚍ ⚎ ⚏ ⚐ ⚑ ⚒ ⚓ ⚔ ⚕ ⚖ ⚗ ⚘ ⚙ ⚚ ⚛ ⚜ ⚝ ⚞ ⚟&lt;br /&gt;
u26A0: ⚠ ⚡ ⚢ ⚣ ⚤ ⚥ ⚦ ⚧ ⚨ ⚩ ⚪ ⚫ ⚬ ⚭ ⚮ ⚯ ⚰ ⚱ ⚲ ⚳ ⚴ ⚵ ⚶ ⚷ ⚸ ⚹ ⚺ ⚻ ⚼ ⚽ ⚾ ⚿&lt;br /&gt;
u2700: ✀ ✁ ✂ ✃ ✄ ✅ ✆ ✇ ✈ ✉ ✊ ✋ ✌ ✍ ✎ ✏ ✐ ✑ ✒ ✓ ✔ ✕ ✖ ✗ ✘ ✙ ✚ ✛ ✜ ✝ ✞ ✟&lt;br /&gt;
u2720: ✠ ✡ ✢ ✣ ✤ ✥ ✦ ✧ ✨ ✩ ✪ ✫ ✬ ✭ ✮ ✯ ✰ ✱ ✲ ✳ ✴ ✵ ✶ ✷ ✸ ✹ ✺ ✻ ✼ ✽ ✾ ✿&lt;br /&gt;
u2740: ❀ ❁ ❂ ❃ ❄ ❅ ❆ ❇ ❈ ❉ ❊ ❋ ❌ ❍ ❎ ❏ ❐ ❑ ❒ ❓ ❔ ❕ ❖ ❗ ❘ ❙ ❚ ❛ ❜ ❝ ❞ ❟&lt;br /&gt;
u2760: ❠ ❡ ❢ ❣ ❤ ❥ ❦ ❧ ❨ ❩ ❪ ❫ ❬ ❭ ❮ ❯ ❰ ❱ ❲ ❳ ❴ ❵ ❶ ❷ ❸ ❹ ❺ ❻ ❼ ❽ ❾ ❿&lt;br /&gt;
u2780: ➀ ➁ ➂ ➃ ➄ ➅ ➆ ➇ ➈ ➉ ➊ ➋ ➌ ➍ ➎ ➏ ➐ ➑ ➒ ➓ ➔ ➕ ➖ ➗ ➘ ➙ ➚ ➛ ➜ ➝ ➞ ➟&lt;br /&gt;
u27A0: ➠ ➡ ➢ ➣ ➤ ➥ ➦ ➧ ➨ ➩ ➪ ➫ ➬ ➭ ➮ ➯ ➰ ➱ ➲ ➳ ➴ ➵ ➶ ➷ ➸ ➹ ➺ ➻ ➼ ➽ ➾ ➿&lt;br /&gt;
u27C0: ⟀ ⟁ ⟂ ⟃ ⟄ ⟅ ⟆ ⟇ ⟈ ⟉ ⟊ ⟋ ⟌ ⟍ ⟎ ⟏ ⟐ ⟑ ⟒ ⟓ ⟔ ⟕ ⟖ ⟗ ⟘ ⟙ ⟚ ⟛ ⟜ ⟝ ⟞ ⟟&lt;br /&gt;
u27E0: ⟠ ⟡ ⟢ ⟣ ⟤ ⟥ ⟦ ⟧ ⟨ ⟩ ⟪ ⟫ ⟬ ⟭ ⟮ ⟯ ⟰ ⟱ ⟲ ⟳ ⟴ ⟵ ⟶ ⟷ ⟸ ⟹ ⟺ ⟻ ⟼ ⟽ ⟾ ⟿&lt;br /&gt;
u2800: ⠀ ⠁ ⠂ ⠃ ⠄ ⠅ ⠆ ⠇ ⠈ ⠉ ⠊ ⠋ ⠌ ⠍ ⠎ ⠏ ⠐ ⠑ ⠒ ⠓ ⠔ ⠕ ⠖ ⠗ ⠘ ⠙ ⠚ ⠛ ⠜ ⠝ ⠞ ⠟&lt;br /&gt;
u2820: ⠠ ⠡ ⠢ ⠣ ⠤ ⠥ ⠦ ⠧ ⠨ ⠩ ⠪ ⠫ ⠬ ⠭ ⠮ ⠯ ⠰ ⠱ ⠲ ⠳ ⠴ ⠵ ⠶ ⠷ ⠸ ⠹ ⠺ ⠻ ⠼ ⠽ ⠾ ⠿&lt;br /&gt;
u2840: ⡀ ⡁ ⡂ ⡃ ⡄ ⡅ ⡆ ⡇ ⡈ ⡉ ⡊ ⡋ ⡌ ⡍ ⡎ ⡏ ⡐ ⡑ ⡒ ⡓ ⡔ ⡕ ⡖ ⡗ ⡘ ⡙ ⡚ ⡛ ⡜ ⡝ ⡞ ⡟&lt;br /&gt;
u2860: ⡠ ⡡ ⡢ ⡣ ⡤ ⡥ ⡦ ⡧ ⡨ ⡩ ⡪ ⡫ ⡬ ⡭ ⡮ ⡯ ⡰ ⡱ ⡲ ⡳ ⡴ ⡵ ⡶ ⡷ ⡸ ⡹ ⡺ ⡻ ⡼ ⡽ ⡾ ⡿&lt;br /&gt;
u2880: ⢀ ⢁ ⢂ ⢃ ⢄ ⢅ ⢆ ⢇ ⢈ ⢉ ⢊ ⢋ ⢌ ⢍ ⢎ ⢏ ⢐ ⢑ ⢒ ⢓ ⢔ ⢕ ⢖ ⢗ ⢘ ⢙ ⢚ ⢛ ⢜ ⢝ ⢞ ⢟&lt;br /&gt;
u28A0: ⢠ ⢡ ⢢ ⢣ ⢤ ⢥ ⢦ ⢧ ⢨ ⢩ ⢪ ⢫ ⢬ ⢭ ⢮ ⢯ ⢰ ⢱ ⢲ ⢳ ⢴ ⢵ ⢶ ⢷ ⢸ ⢹ ⢺ ⢻ ⢼ ⢽ ⢾ ⢿&lt;br /&gt;
u28C0: ⣀ ⣁ ⣂ ⣃ ⣄ ⣅ ⣆ ⣇ ⣈ ⣉ ⣊ ⣋ ⣌ ⣍ ⣎ ⣏ ⣐ ⣑ ⣒ ⣓ ⣔ ⣕ ⣖ ⣗ ⣘ ⣙ ⣚ ⣛ ⣜ ⣝ ⣞ ⣟&lt;br /&gt;
u28E0: ⣠ ⣡ ⣢ ⣣ ⣤ ⣥ ⣦ ⣧ ⣨ ⣩ ⣪ ⣫ ⣬ ⣭ ⣮ ⣯ ⣰ ⣱ ⣲ ⣳ ⣴ ⣵ ⣶ ⣷ ⣸ ⣹ ⣺ ⣻ ⣼ ⣽ ⣾ ⣿&lt;br /&gt;
u2900: ⤀ ⤁ ⤂ ⤃ ⤄ ⤅ ⤆ ⤇ ⤈ ⤉ ⤊ ⤋ ⤌ ⤍ ⤎ ⤏ ⤐ ⤑ ⤒ ⤓ ⤔ ⤕ ⤖ ⤗ ⤘ ⤙ ⤚ ⤛ ⤜ ⤝ ⤞ ⤟&lt;br /&gt;
u2920: ⤠ ⤡ ⤢ ⤣ ⤤ ⤥ ⤦ ⤧ ⤨ ⤩ ⤪ ⤫ ⤬ ⤭ ⤮ ⤯ ⤰ ⤱ ⤲ ⤳ ⤴ ⤵ ⤶ ⤷ ⤸ ⤹ ⤺ ⤻ ⤼ ⤽ ⤾ ⤿&lt;br /&gt;
u2940: ⥀ ⥁ ⥂ ⥃ ⥄ ⥅ ⥆ ⥇ ⥈ ⥉ ⥊ ⥋ ⥌ ⥍ ⥎ ⥏ ⥐ ⥑ ⥒ ⥓ ⥔ ⥕ ⥖ ⥗ ⥘ ⥙ ⥚ ⥛ ⥜ ⥝ ⥞ ⥟&lt;br /&gt;
u2960: ⥠ ⥡ ⥢ ⥣ ⥤ ⥥ ⥦ ⥧ ⥨ ⥩ ⥪ ⥫ ⥬ ⥭ ⥮ ⥯ ⥰ ⥱ ⥲ ⥳ ⥴ ⥵ ⥶ ⥷ ⥸ ⥹ ⥺ ⥻ ⥼ ⥽ ⥾ ⥿&lt;br /&gt;
u2980: ⦀ ⦁ ⦂ ⦃ ⦄ ⦅ ⦆ ⦇ ⦈ ⦉ ⦊ ⦋ ⦌ ⦍ ⦎ ⦏ ⦐ ⦑ ⦒ ⦓ ⦔ ⦕ ⦖ ⦗ ⦘ ⦙ ⦚ ⦛ ⦜ ⦝ ⦞ ⦟&lt;br /&gt;
u29A0: ⦠ ⦡ ⦢ ⦣ ⦤ ⦥ ⦦ ⦧ ⦨ ⦩ ⦪ ⦫ ⦬ ⦭ ⦮ ⦯ ⦰ ⦱ ⦲ ⦳ ⦴ ⦵ ⦶ ⦷ ⦸ ⦹ ⦺ ⦻ ⦼ ⦽ ⦾ ⦿&lt;br /&gt;
u29C0: ⧀ ⧁ ⧂ ⧃ ⧄ ⧅ ⧆ ⧇ ⧈ ⧉ ⧊ ⧋ ⧌ ⧍ ⧎ ⧏ ⧐ ⧑ ⧒ ⧓ ⧔ ⧕ ⧖ ⧗ ⧘ ⧙ ⧚ ⧛ ⧜ ⧝ ⧞ ⧟&lt;br /&gt;
u29E0: ⧠ ⧡ ⧢ ⧣ ⧤ ⧥ ⧦ ⧧ ⧨ ⧩ ⧪ ⧫ ⧬ ⧭ ⧮ ⧯ ⧰ ⧱ ⧲ ⧳ ⧴ ⧵ ⧶ ⧷ ⧸ ⧹ ⧺ ⧻ ⧼ ⧽ ⧾ ⧿&lt;br /&gt;
u2A00: ⨀ ⨁ ⨂ ⨃ ⨄ ⨅ ⨆ ⨇ ⨈ ⨉ ⨊ ⨋ ⨌ ⨍ ⨎ ⨏ ⨐ ⨑ ⨒ ⨓ ⨔ ⨕ ⨖ ⨗ ⨘ ⨙ ⨚ ⨛ ⨜ ⨝ ⨞ ⨟&lt;br /&gt;
u2A20: ⨠ ⨡ ⨢ ⨣ ⨤ ⨥ ⨦ ⨧ ⨨ ⨩ ⨪ ⨫ ⨬ ⨭ ⨮ ⨯ ⨰ ⨱ ⨲ ⨳ ⨴ ⨵ ⨶ ⨷ ⨸ ⨹ ⨺ ⨻ ⨼ ⨽ ⨾ ⨿&lt;br /&gt;
u2A40: ⩀ ⩁ ⩂ ⩃ ⩄ ⩅ ⩆ ⩇ ⩈ ⩉ ⩊ ⩋ ⩌ ⩍ ⩎ ⩏ ⩐ ⩑ ⩒ ⩓ ⩔ ⩕ ⩖ ⩗ ⩘ ⩙ ⩚ ⩛ ⩜ ⩝ ⩞ ⩟&lt;br /&gt;
u2A60: ⩠ ⩡ ⩢ ⩣ ⩤ ⩥ ⩦ ⩧ ⩨ ⩩ ⩪ ⩫ ⩬ ⩭ ⩮ ⩯ ⩰ ⩱ ⩲ ⩳ ⩴ ⩵ ⩶ ⩷ ⩸ ⩹ ⩺ ⩻ ⩼ ⩽ ⩾ ⩿&lt;br /&gt;
u2A80: ⪀ ⪁ ⪂ ⪃ ⪄ ⪅ ⪆ ⪇ ⪈ ⪉ ⪊ ⪋ ⪌ ⪍ ⪎ ⪏ ⪐ ⪑ ⪒ ⪓ ⪔ ⪕ ⪖ ⪗ ⪘ ⪙ ⪚ ⪛ ⪜ ⪝ ⪞ ⪟&lt;br /&gt;
u2AA0: ⪠ ⪡ ⪢ ⪣ ⪤ ⪥ ⪦ ⪧ ⪨ ⪩ ⪪ ⪫ ⪬ ⪭ ⪮ ⪯ ⪰ ⪱ ⪲ ⪳ ⪴ ⪵ ⪶ ⪷ ⪸ ⪹ ⪺ ⪻ ⪼ ⪽ ⪾ ⪿&lt;br /&gt;
u2AC0: ⫀ ⫁ ⫂ ⫃ ⫄ ⫅ ⫆ ⫇ ⫈ ⫉ ⫊ ⫋ ⫌ ⫍ ⫎ ⫏ ⫐ ⫑ ⫒ ⫓ ⫔ ⫕ ⫖ ⫗ ⫘ ⫙ ⫚ ⫛ ⫝̸ ⫝ ⫞ ⫟&lt;br /&gt;
u2AE0: ⫠ ⫡ ⫢ ⫣ ⫤ ⫥ ⫦ ⫧ ⫨ ⫩ ⫪ ⫫ ⫬ ⫭ ⫮ ⫯ ⫰ ⫱ ⫲ ⫳ ⫴ ⫵ ⫶ ⫷ ⫸ ⫹ ⫺ ⫻ ⫼ ⫽ ⫾ ⫿&lt;br /&gt;
u2B00: ⬀ ⬁ ⬂ ⬃ ⬄ ⬅ ⬆ ⬇ ⬈ ⬉ ⬊ ⬋ ⬌ ⬍ ⬎ ⬏ ⬐ ⬑ ⬒ ⬓ ⬔ ⬕ ⬖ ⬗ ⬘ ⬙ ⬚ ⬛ ⬜ ⬝ ⬞ ⬟&lt;br /&gt;
u2B20: ⬠ ⬡ ⬢ ⬣ ⬤ ⬥ ⬦ ⬧ ⬨ ⬩ ⬪ ⬫ ⬬ ⬭ ⬮ ⬯ ⬰ ⬱ ⬲ ⬳ ⬴ ⬵ ⬶ ⬷ ⬸ ⬹ ⬺ ⬻ ⬼ ⬽ ⬾ ⬿&lt;br /&gt;
u2C60: Ⱡ ⱡ Ɫ Ᵽ Ɽ ⱥ ⱦ Ⱨ ⱨ Ⱪ ⱪ Ⱬ ⱬ Ɑ Ɱ Ɐ Ɒ ⱱ Ⱳ ⱳ ⱴ Ⱶ ⱶ ⱷ ⱸ ⱹ ⱺ ⱻ ⱼ ⱽ Ȿ Ɀ&lt;br /&gt;
u2E80: ⺀ ⺁ ⺂ ⺃ ⺄ ⺅ ⺆ ⺇ ⺈ ⺉ ⺊ ⺋ ⺌ ⺍ ⺎ ⺏ ⺐ ⺑ ⺒ ⺓ ⺔ ⺕ ⺖ ⺗ ⺘ ⺙ ⺚ ⺛ ⺜ ⺝ ⺞ ⺟&lt;br /&gt;
u2EA0: ⺠ ⺡ ⺢ ⺣ ⺤ ⺥ ⺦ ⺧ ⺨ ⺩ ⺪ ⺫ ⺬ ⺭ ⺮ ⺯ ⺰ ⺱ ⺲ ⺳ ⺴ ⺵ ⺶ ⺷ ⺸ ⺹ ⺺ ⺻ ⺼ ⺽ ⺾ ⺿&lt;br /&gt;
u2EC0: ⻀ ⻁ ⻂ ⻃ ⻄ ⻅ ⻆ ⻇ ⻈ ⻉ ⻊ ⻋ ⻌ ⻍ ⻎ ⻏ ⻐ ⻑ ⻒ ⻓ ⻔ ⻕ ⻖ ⻗ ⻘ ⻙ ⻚ ⻛ ⻜ ⻝ ⻞ ⻟&lt;br /&gt;
u2EE0: ⻠ ⻡ ⻢ ⻣ ⻤ ⻥ ⻦ ⻧ ⻨ ⻩ ⻪ ⻫ ⻬ ⻭ ⻮ ⻯ ⻰ ⻱ ⻲ ⻳ ⻴ ⻵ ⻶ ⻷ ⻸ ⻹ ⻺ ⻻ ⻼ ⻽ ⻾ ⻿&lt;br /&gt;
u2F00: ⼀ ⼁ ⼂ ⼃ ⼄ ⼅ ⼆ ⼇ ⼈ ⼉ ⼊ ⼋ ⼌ ⼍ ⼎ ⼏ ⼐ ⼑ ⼒ ⼓ ⼔ ⼕ ⼖ ⼗ ⼘ ⼙ ⼚ ⼛ ⼜ ⼝ ⼞ ⼟&lt;br /&gt;
u2F20: ⼠ ⼡ ⼢ ⼣ ⼤ ⼥ ⼦ ⼧ ⼨ ⼩ ⼪ ⼫ ⼬ ⼭ ⼮ ⼯ ⼰ ⼱ ⼲ ⼳ ⼴ ⼵ ⼶ ⼷ ⼸ ⼹ ⼺ ⼻ ⼼ ⼽ ⼾ ⼿&lt;br /&gt;
u2F40: ⽀ ⽁ ⽂ ⽃ ⽄ ⽅ ⽆ ⽇ ⽈ ⽉ ⽊ ⽋ ⽌ ⽍ ⽎ ⽏ ⽐ ⽑ ⽒ ⽓ ⽔ ⽕ ⽖ ⽗ ⽘ ⽙ ⽚ ⽛ ⽜ ⽝ ⽞ ⽟&lt;br /&gt;
u3040: ぀ ぁ あ ぃ い ぅ う ぇ え ぉ お か が き ぎ く ぐ け げ こ ご さ ざ し じ す ず せ ぜ そ ぞ た&lt;br /&gt;
u3060: だ ち ぢ っ つ づ て で と ど な に ぬ ね の は ば ぱ ひ び ぴ ふ ぶ ぷ へ べ ぺ ほ ぼ ぽ ま み&lt;br /&gt;
u3360: ㍠ ㍡ ㍢ ㍣ ㍤ ㍥ ㍦ ㍧ ㍨ ㍩ ㍪ ㍫ ㍬ ㍭ ㍮ ㍯ ㍰ ㍱ ㍲ ㍳ ㍴ ㍵ ㍶ ㍷ ㍸ ㍹ ㍺ ㍻ ㍼ ㍽ ㍾ ㍿&lt;br /&gt;
u3380: ㎀ ㎁ ㎂ ㎃ ㎄ ㎅ ㎆ ㎇ ㎈ ㎉ ㎊ ㎋ ㎌ ㎍ ㎎ ㎏ ㎐ ㎑ ㎒ ㎓ ㎔ ㎕ ㎖ ㎗ ㎘ ㎙ ㎚ ㎛ ㎜ ㎝ ㎞ ㎟&lt;br /&gt;
u33A0: ㎠ ㎡ ㎢ ㎣ ㎤ ㎥ ㎦ ㎧ ㎨ ㎩ ㎪ ㎫ ㎬ ㎭ ㎮ ㎯ ㎰ ㎱ ㎲ ㎳ ㎴ ㎵ ㎶ ㎷ ㎸ ㎹ ㎺ ㎻ ㎼ ㎽ ㎾ ㎿&lt;br /&gt;
u33C0: ㏀ ㏁ ㏂ ㏃ ㏄ ㏅ ㏆ ㏇ ㏈ ㏉ ㏊ ㏋ ㏌ ㏍ ㏎ ㏏ ㏐ ㏑ ㏒ ㏓ ㏔ ㏕ ㏖ ㏗ ㏘ ㏙ ㏚ ㏛ ㏜ ㏝ ㏞ ㏟&lt;br /&gt;
u50C0: 僀 僁 僂 僃 僄 僅 僆 僇 僈 僉 僊 僋 僌 働 僎 像 僐 僑 僒 僓 僔 僕 僖 僗 僘 僙 僚 僛 僜 僝 僞 僟&lt;br /&gt;
u50E0: 僠 僡 僢 僣 僤 僥 僦 僧 僨 僩 僪 僫 僬 僭 僮 僯 僰 僱 僲 僳 僴 僵 僶 僷 僸 價 僺 僻 僼 僽 僾 僿&lt;br /&gt;
uA9E0: ꧠ ꧡ ꧢ ꧣ ꧤ ꧥ ꧦ ꧧ ꧨ ꧩ ꧪ ꧫ ꧬ ꧭ ꧮ ꧯ ꧰ ꧱ ꧲ ꧳ ꧴ ꧵ ꧶ ꧷ ꧸ ꧹ ꧺ ꧻ ꧼ ꧽ ꧾ ꧿&lt;br /&gt;
uAC00: 가 각 갂 갃 간 갅 갆 갇 갈 갉 갊 갋 갌 갍 갎 갏 감 갑 값 갓 갔 강 갖 갗 갘 같 갚 갛 개 객 갞 갟&lt;br /&gt;
uAC20: 갠 갡 갢 갣 갤 갥 갦 갧 갨 갩 갪 갫 갬 갭 갮 갯 갰 갱 갲 갳 갴 갵 갶 갷 갸 갹 갺 갻 갼 갽 갾 갿&lt;br /&gt;
uE220:                                &lt;br /&gt;
uE240:                                &lt;br /&gt;
uEA00:                                &lt;br /&gt;
uEA20:                                &lt;br /&gt;
uEDA0:                                &lt;br /&gt;
uEE20:                                &lt;br /&gt;
uEE60:                                &lt;br /&gt;
uFB00: ﬀ ﬁ ﬂ ﬃ ﬄ ﬅ ﬆ ﬇ ﬈ ﬉ ﬊ ﬋ ﬌ ﬍ ﬎ ﬏ ﬐ ﬑ ﬒ ﬓ ﬔ ﬕ ﬖ ﬗ ﬘ ﬙ ﬚ ﬛ ﬜ יִ ﬞ ײַ&lt;br /&gt;
uFB20: ﬠ ﬡ ﬢ ﬣ ﬤ ﬥ ﬦ ﬧ ﬨ ﬩ שׁ שׂ שּׁ שּׂ אַ אָ אּ בּ גּ דּ הּ וּ זּ ﬷ טּ יּ ךּ כּ לּ ﬽ מּ ﬿&lt;br /&gt;
uFFE0: ￠ ￡ ￢ ￣ ￤ ￥ ￦ ￧ ￨ ￩ ￪ ￫ ￬ ￭ ￮ ￯ ￰ ￱ ￲ ￳ ￴ ￵ ￶ ￷ ￸ ￹ ￺ ￻ ￼ � ￾ ￿&lt;br /&gt;
u1D300: 𝌀 𝌁 𝌂 𝌃 𝌄 𝌅 𝌆 𝌇 𝌈 𝌉 𝌊 𝌋 𝌌 𝌍 𝌎 𝌏 𝌐 𝌑 𝌒 𝌓 𝌔 𝌕 𝌖 𝌗 𝌘 𝌙 𝌚 𝌛 𝌜 𝌝 𝌞 𝌟&lt;br /&gt;
u1D520: 𝔠 𝔡 𝔢 𝔣 𝔤 𝔥 𝔦 𝔧 𝔨 𝔩 𝔪 𝔫 𝔬 𝔭 𝔮 𝔯 𝔰 𝔱 𝔲 𝔳 𝔴 𝔵 𝔶 𝔷 𝔸 𝔹 𝔺 𝔻 𝔼 𝔽 𝔾 𝔿&lt;br /&gt;
u1D540: 𝕀 𝕁 𝕂 𝕃 𝕄 𝕅 𝕆 𝕇 𝕈 𝕉 𝕊 𝕋 𝕌 𝕍 𝕎 𝕏 𝕐 𝕑 𝕒 𝕓 𝕔 𝕕 𝕖 𝕗 𝕘 𝕙 𝕚 𝕛 𝕜 𝕝 𝕞 𝕟&lt;br /&gt;
u1D560: 𝕠 𝕡 𝕢 𝕣 𝕤 𝕥 𝕦 𝕧 𝕨 𝕩 𝕪 𝕫 𝕬 𝕭 𝕮 𝕯 𝕰 𝕱 𝕲 𝕳 𝕴 𝕵 𝕶 𝕷 𝕸 𝕹 𝕺 𝕻 𝕼 𝕽 𝕾 𝕿&lt;br /&gt;
u26900: 𦤀 𦤁 𦤂 𦤃 𦤄 𦤅 𦤆 𦤇 𦤈 𦤉 𦤊 𦤋 𦤌 𦤍 𦤎 𦤏 𦤐 𦤑 𦤒 𦤓 𦤔 𦤕 𦤖 𦤗 𦤘 𦤙 𦤚 𦤛 𦤜 𦤝 𦤞 𦤟&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Gopher named Gophy</title>
      <link>http://www.robotamer.com/code/go/gotamer/index.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/index.html</guid>
      <description>&lt;p&gt;If you are just starting out with Go, head over to the &lt;a href=&#34;http://play.golang.org/p/fjK_EoQDtR&#34; title=&#34;Go Playground&#34;&gt;Go Playground&lt;/a&gt; and concentrate on
figuring out how my little &lt;a href=&#34;http://play.golang.org/p/fjK_EoQDtR&#34; title=&#34;Go Playground&#34;&gt;Go Story&lt;/a&gt; works.
It&amp;rsquo;s about a Gopher, named Gophy who joint the Gophers but lost his identity in the process.&lt;br /&gt;
Once you get how he gets his identity back you&amp;rsquo;ll be golden.&lt;/p&gt;

&lt;p&gt;Here is the code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import &amp;quot;fmt&amp;quot;

type I interface{}

var gophers map[uint]I = make(map[uint]I)

type gopher struct {
    Name string
}

func main() {

    g := AddToGophers(&amp;quot;Goghy&amp;quot;)

    fmt.Printf(&amp;quot;Hello, %s\n&amp;quot;, g.Name)
    fmt.Printf(&amp;quot;Now %s is a %T, %s\n&amp;quot;, g.Name, gophers[1], gophers[1])

    gg := GetGopher(1)
    fmt.Printf(&amp;quot;Bye, %s\n&amp;quot;, gg.Name)
}

func GetGopher(i uint) *gopher {
    g := gophers[i]
    // I wont my gopher identity back
    return g.(*gopher)
}

func AddToGophers(n string) gopher {
    g := new(gopher)
    g.Name = n
    gophers[1] = g
    return *g
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>GoWatch</title>
      <link>http://www.robotamer.com/code/go/gotamer/gowatch.html</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      <author>Dennis T Kaplan</author>
      <guid>http://www.robotamer.com/code/go/gotamer/gowatch.html</guid>
      <description>&lt;h1&gt;GoTamer gowatch is a fork of bitbucket.org/jzs/buildwatch with some enhancements.&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gowatch -test&lt;/code&gt; will run &lt;code&gt;go test&lt;/code&gt; on the folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gowatch -build&lt;/code&gt; will run &lt;code&gt;go build&lt;/code&gt; on the folder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gowatch -run [program_name]&lt;/code&gt; will run &lt;code&gt;go build&lt;/code&gt; and then it will execute &lt;code&gt;[program_name]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a file changes while running lets say &lt;code&gt;gowatch -run [program_name]&lt;/code&gt; it will
kill &lt;code&gt;[program_name]&lt;/code&gt;, run &lt;code&gt;gowatch -build&lt;/code&gt; on the folder, and then restart &lt;code&gt;[program_name]&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.robotamer.com/code/go/gotamer&#34; title=&#34;GoTamer Website&#34;&gt;Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://go.pkgdoc.org/bitbucket.org/gotamer/gowatch&#34; title=&#34;Pkg Documentation&#34;&gt;Pkg Documentationn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/gotamer/gowatch&#34; title=&#34;Repository&#34;&gt;Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
